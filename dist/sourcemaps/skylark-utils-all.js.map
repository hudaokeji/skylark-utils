{"version":3,"sources":["skylark-utils-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","then","onResolved","onRejected","onProgress","progress","done","handler","fail","bind","listener","error","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","ArrayStore","klassName-","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","async","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","maybeAddPx","cssNumber","classRE","classReCache","RegExp","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","style","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","innerHTML","empty","isIE","getAttribs","setAttrib","getAttrib","tag","setAttribute","append","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","placing","refNode","nextSibling","insertBefore","prepend","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","offsetWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","cssPropName","support","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","$","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","special","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","el","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","tuples","Callbacks","once","memory","state","always","fns","tuple","returned","notify","pipe","list","stateString","disable","lock","fireWith","triggerAndReturn","triggerGlobal","settings","ajaxStart","active","ajaxStop","ajaxBeforeSend","ajaxSuccess","resolveWith","ajaxComplete","ajaxError","rejectWith","ajax","urlAnchor","ajaxSettings","originAnchor","host","hasPlaceholder","Date","now","jsonp","ajaxJSONP","abortTimeout","setHeader","nativeSetHeader","onreadystatechange","username","parseArguments","addToPrefiltersOrTransports","dataTypeExpression","dataTypes","rnotwhite","jQuery","ajaxExtend","flatOptions","extend","firing","firingStart","firingLength","firingIndex","fire","stopOnFalse","unique","locked","sub","progressValues","progressContexts","resolveContexts","resolveValues","remain","updateFn","notifyWith","responseData","_callbackName","jsonpCallback","callbackName","originalCallback","errorType","triggerHandler","head","getJSON","encodeURIComponent","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","construct","_createStyleSheet","link","rel","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","handleElm","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","over","dropped","manager","_params","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","stream","createObjectURL","localMediaStream","onloadedmetadata","vibrate","webkitVibrate","mozVibrate","msVibrate","devices","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","reader","FileReader","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","images","elementNodeTypes","1","9","11","ImagesLoaded","onAlways","getImages","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","Background","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","unbindEvents","imagesLoaded","inst","loaded","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","textStatus","errorThrown","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","Collection","entities","comparator","_reset","setOptions","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","_place","choices","layoutNode","aroundNodeCoords","win","view","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","padding","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","defaultOptions","touchActionNone","direction","border","grabber","startSize","currentSize","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","cookies","sKey","unescape","cookie","expires","domain","secure","sExpires","vEnd","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","getFile","fileEntry","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","defaultVal","getItem","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","widget","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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,GAMA,MALAqgB,GAAApgB,QAAA,SAAA0d,GACA,GAAAe,GAAAf,YAAAypC,GAAAzpC,EAAA4N,EAAA5N,EACAe,GAAA4oC,GAAApnD,MAAAwe,EAAA1e,KAGA0B,MAGAkqB,KAAA,GAAAw7B,GAAAz4C,SAAAwP,MAEAipC,cAAAA,EAEA74C,QAAA,SAAA/F,EAAAvF,GACA,GAAAL,KAEAA,GAAA4F,GAAAvF,EAEAmkD,EAAA74C,QAAA3L,IAGA4L,SAAA,SAAAwQ,EAAA3Z,GACA,GAAAzC,KAEAoc,GAAA/e,QAAA,SAAAuI,GACA5F,EAAA4F,GAAAy+C,EAAA5hD,EAAAmD,GAAAnD,KAGA+hD,EAAA74C,QAAA3L,MAKA2oB,EAAA/c,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAgmB,GAGAjJ,EAAA/c,UACA,YACA,aACAq+B,GAIAthB,EAAA/c,UACA,MACA,KACA,MACA,YACA,WACAupB,GAGAxM,EAAA/c,UACA,SACA,YACA4hC,GAGA7kB,EAAA/c,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAwkB,GAEAzH,EAAAiB,KAAA,SAAAnb,GACA,MAAA,SAAAA,EACA3P,KAAAkqB,KAEAlqB,KAAAkqB,KAAAU,WAAAjb,IAKAka,EAAA/c,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAsvB,GAIAvS,EAAA/c,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAyb,GAGAsB,EAAA/c,UACA,WACAq+B,GAIAthB,EAAA/c,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAiW,GAGA8G,EAAA/c,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAmQ,GAEAte,EAAAkrB,KAAAA,IAGApsB,OAAA,wBACA,YACA,UACA,UACA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","file":"../skylark-utils-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        mixin(p,{\r\n            then : function(onResolved,onRejected,onProgress) {\r\n                if (onProgress) {\r\n                    this.progress(onProgress);\r\n                }\r\n                return Promise.prototype.then.call(this,onResolved,onRejected);\r\n            },\r\n            done : function(handler) {\r\n                return Promise.prototype.then.call(this,handler);\r\n            },\r\n            fail : function(handler) { \r\n                return Promise.prototype.catch.call(this,handler);\r\n            }, \r\n            progress : function(handler) {\r\n                self[PGLISTENERS].push(handler);\r\n                return this;\r\n            }\r\n\r\n        });\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n        this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName-\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && url.startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/ajax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    var Callbacks = function(options) {\r\n        options = langx.mixin({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                langx.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        langx.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = langx.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? langx.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    //     This module is borrow from zepto.deferred.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    //\r\n    //     Some code (c) 2005, 2013 jQuery Foundation, Inc. and other contributors\r\n\r\n    var slice = Array.prototype.slice\r\n\r\n    function Deferred(func) {\r\n        var tuples = [\r\n                // action, add listener, listener list, final state\r\n                [\"resolve\", \"done\", Callbacks({ once: 1, memory: 1 }), \"resolved\"],\r\n                [\"reject\", \"fail\", Callbacks({ once: 1, memory: 1 }), \"rejected\"],\r\n                [\"notify\", \"progress\", Callbacks({ memory: 1 })]\r\n            ],\r\n            state = \"pending\",\r\n            promise = {\r\n                state: function() {\r\n                    return state\r\n                },\r\n                always: function() {\r\n                    deferred.done(arguments).fail(arguments)\r\n                    return this\r\n                },\r\n                then: function( /* fnDone [, fnFailed [, fnProgress]] */ ) {\r\n                    var fns = arguments\r\n                    return Deferred(function(defer) {\r\n                        langx.each(tuples, function(i, tuple) {\r\n                            var fn = $.isFunction(fns[i]) && fns[i]\r\n                            deferred[tuple[1]](function() {\r\n                                var returned = fn && fn.apply(this, arguments)\r\n                                if (returned && langx.isFunction(returned.promise)) {\r\n                                    returned.promise()\r\n                                        .done(defer.resolve)\r\n                                        .fail(defer.reject)\r\n                                        .progress(defer.notify)\r\n                                } else {\r\n                                    var context = this === promise ? defer.promise() : this,\r\n                                        values = fn ? [returned] : arguments\r\n                                    defer[tuple[0] + \"With\"](context, values)\r\n                                }\r\n                            })\r\n                        })\r\n                        fns = null\r\n                    }).promise()\r\n                },\r\n\r\n                promise: function(obj) {\r\n                    return obj != null ? langx.mixin(obj, promise) : promise\r\n                }\r\n            },\r\n            deferred = {};\r\n\r\n        promise.pipe = promise.then;\r\n\r\n        langx.each(tuples, function(i, tuple) {\r\n            var list = tuple[2],\r\n                stateString = tuple[3]\r\n\r\n            promise[tuple[1]] = list.add\r\n\r\n            if (stateString) {\r\n                list.add(function() {\r\n                    state = stateString\r\n                }, tuples[i ^ 1][2].disable, tuples[2][2].lock)\r\n            }\r\n\r\n            deferred[tuple[0]] = function() {\r\n                deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments)\r\n                return this\r\n            }\r\n            deferred[tuple[0] + \"With\"] = list.fireWith\r\n        });\r\n\r\n        promise.promise(deferred);\r\n        if (func) func.call(deferred, deferred)\r\n        \r\n        return deferred;\r\n    }\r\n\r\n    var when = function(sub) {\r\n        var resolveValues = slice.call(arguments),\r\n            len = resolveValues.length,\r\n            i = 0,\r\n            remain = len !== 1 || (sub && langx.isFunction(sub.promise)) ? len : 0,\r\n            deferred = remain === 1 ? sub : Deferred(),\r\n            progressValues, progressContexts, resolveContexts,\r\n            updateFn = function(i, ctx, val) {\r\n                return function(value) {\r\n                    ctx[i] = this\r\n                    val[i] = arguments.length > 1 ? slice.call(arguments) : value\r\n                    if (val === progressValues) {\r\n                        deferred.notifyWith(ctx, val)\r\n                    } else if (!(--remain)) {\r\n                        deferred.resolveWith(ctx, val)\r\n                    }\r\n                }\r\n            }\r\n\r\n        if (len > 1) {\r\n            progressValues = new Array(len)\r\n            progressContexts = new Array(len)\r\n            resolveContexts = new Array(len)\r\n            for (; i < len; ++i) {\r\n                if (resolveValues[i] && langx.isFunction(resolveValues[i].promise)) {\r\n                    resolveValues[i].promise()\r\n                        .done(updateFn(i, resolveContexts, resolveValues))\r\n                        .fail(deferred.reject)\r\n                        .progress(updateFn(i, progressContexts, progressValues))\r\n                } else {\r\n                    --remain\r\n                }\r\n            }\r\n        }\r\n        if (!remain) deferred.resolveWith(resolveContexts, resolveValues)\r\n        return deferred.promise()\r\n    };\r\n\r\n    //     zepto.ajax.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    var jsonpID = 0,\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a');\r\n\r\n    originAnchor.href = window.location.href;\r\n\r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n        var event = eventer.create(eventName);\r\n        $(context).trigger(event, data)\r\n        return !event.isDefaultPrevented()\r\n    }\r\n\r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n\r\n    // Number of active Ajax requests\r\n    var active = 0;\r\n\r\n    function ajaxStart(settings) {\r\n        if (settings.global && active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n\r\n    function ajaxStop(settings) {\r\n        if (settings.global && !(--active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n\r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n        var context = settings.context\r\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n            return false\r\n\r\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        ajaxStop(settings)\r\n    }\r\n\r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n\r\n    var ajaxJSONP = function(options, deferred) {\r\n        if (!('type' in options)) return ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = (langx.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && langx.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    };\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest()\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: jsonType,\r\n            xml: 'application/xml, text/xml',\r\n            html: htmlType,\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    };\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) mime = mime.split(';', 2)[0]\r\n        return mime && (mime == htmlType ? 'html' :\r\n            mime == jsonType ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text'\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && langx.type(options.data) != \"string\")\r\n            options.data = param(options.data, options.traditional)\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n            options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options || {}),\r\n            deferred = Deferred(),\r\n            urlAnchor\r\n        for (key in ajaxSettings)\r\n            if (settings[key] === undefined) settings[key] = ajaxSettings[key]\r\n\r\n        ajaxStart(settings)\r\n\r\n        if (!settings.crossDomain) {\r\n            urlAnchor = document.createElement('a')\r\n            urlAnchor.href = settings.url\r\n            urlAnchor.href = urlAnchor.href\r\n            settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n        }\r\n\r\n        if (!settings.url) settings.url = window.location.toString()\r\n        serializeData(settings)\r\n\r\n        var dataType = settings.dataType,\r\n            hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n        if (hasPlaceholder) dataType = 'jsonp'\r\n\r\n        if (settings.cache === false || (\r\n                (!options || options.cache !== true) &&\r\n                ('script' == dataType || 'jsonp' == dataType)\r\n            ))\r\n            settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n        if ('jsonp' == dataType) {\r\n            if (!hasPlaceholder)\r\n                settings.url = appendQuery(settings.url,\r\n                    settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n            return ajaxJSONP(settings, deferred)\r\n        }\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n\r\n        if (settings.headers)\r\n            for (name in settings.headers) setHeader(name, settings.headers[name])\r\n        xhr.setRequestHeader = setHeader\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script')(1, eval)(result)\r\n                        else if (dataType == 'xml') result = xhr.responseXML\r\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : JSON.parse(result)\r\n                    } catch (e) { error = e }\r\n\r\n                    if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n                    else ajaxSuccess(result, xhr, settings, deferred)\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n\r\n        if (settings.timeout > 0) abortTimeout = setTimeout(function() {\r\n            xhr.onreadystatechange = empty\r\n            xhr.abort()\r\n            ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr\r\n    }\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if (langx.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!langx.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    var get = function( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    };\r\n\r\n    var post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return ajax(options)\r\n    };\r\n\r\n    var getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return ajax(options)\r\n    }\r\n\r\n    query.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        ajax(options)\r\n        return this\r\n    }\r\n\r\n    var escape = encodeURIComponent\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value)\r\n            if (scope) key = traditional ? scope :\r\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) params.add(value.name, value.value)\r\n            // recurse into nested objects\r\n            else if (type == \"array\" || (!traditional && type == \"object\"))\r\n                serialize(params, value, traditional, key)\r\n            else params.add(key, value)\r\n        })\r\n    }\r\n\r\n    var param = function(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) value = value()\r\n            if (value == null) value = \"\"\r\n            this.push(escape(key) + '=' + escape(value))\r\n        }\r\n        serialize(params, obj, traditional)\r\n        return params.join('&').replace(/%20/g, '+')\r\n    };\r\n\r\n    var\r\n        /* Prefilters\r\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n         * 2) These are called:\r\n         *    - BEFORE asking for a transport\r\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n         * 3) key is the dataType\r\n         * 4) the catchall symbol \"*\" can be used\r\n         * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n         */\r\n        prefilters = {},\r\n\r\n        /* Transports bindings\r\n         * 1) key is the dataType\r\n         * 2) the catchall symbol \"*\" can be used\r\n         * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n         */\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    var ajaxTransport = addToPrefiltersOrTransports(transports);\r\n\r\n    // A special extend for ajax options\r\n    // that takes \"flat\" options (not to be deep extended)\r\n    // Fixes #9887\r\n    function ajaxExtend(target, src) {\r\n        var key, deep,\r\n            flatOptions = ajaxSettings.flatOptions || {};\r\n\r\n        for (key in src) {\r\n            if (src[key] !== undefined) {\r\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\r\n            }\r\n        }\r\n        if (deep) {\r\n            jQuery.extend(true, target, deep);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    var ajaxSetup = function(target, settings) {\r\n        return settings ?\r\n\r\n            // Building a settings object\r\n            ajaxExtend(ajaxExtend(target, ajaxSettings), settings) :\r\n\r\n            // Extending ajaxSettings\r\n            ajaxExtend(ajaxSettings, target);\r\n    };\r\n\r\n    // Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = (structure === transports);\r\n\r\n        function inspect(dataType) {\r\n            var selected;\r\n            inspected[dataType] = true;\r\n            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\r\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\r\n                if (typeof dataTypeOrTransport === \"string\" &&\r\n                    !seekingTransport && !inspected[dataTypeOrTransport]) {\r\n\r\n                    options.dataTypes.unshift(dataTypeOrTransport);\r\n                    inspect(dataTypeOrTransport);\r\n                    return false;\r\n                } else if (seekingTransport) {\r\n                    return !(selected = dataTypeOrTransport);\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\r\n    }\r\n\r\n\r\n    langx.mixin(ajax, {\r\n    \tajaxJSONP : ajaxJSONP,\r\n    \tajaxPrefilter : ajaxPrefilter,\r\n    \tajaxTransport: ajaxTransport,\r\n    \tajaxSettings : ajaxSettings,\r\n    \tajaxSetup : ajaxSetup,\r\n\r\n    \tCallbacks:Callbacks,\r\n\r\n    \tDeferred: Deferred,\r\n\r\n    \tget : get,\r\n    \tgetJSON : getJSON,\r\n    \tparam: param,\r\n    \tpost: post,\r\n\r\n    \twhen: when\r\n\r\n    });\r\n\r\n\r\n    return skylark.ajax = ajax;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(skylark,langx,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n   $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n   };\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./ajax\"\r\n], function(skylark,langx,ajax) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = ajax(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    }\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./ajax\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}