{"version":3,"sources":["skylark-utils-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","klassName-","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","RegExp","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","innerHTML","empty","isIE","getAttribs","setAttrib","getAttrib","tag","setAttribute","append","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","placing","refNode","nextSibling","insertBefore","prepend","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","rel","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","button","checked","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","handleElm","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","over","dropped","manager","_params","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","stream","createObjectURL","localMediaStream","onloadedmetadata","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","now","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","el","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","abs","zoomout","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","viewer","img","_init","Image","border","padding","_load","_dispose","failered","dispose","images","elementNodeTypes","1","9","11","ImagesLoaded","onAlways","getImages","bind","addElementImages","addImage","background","addElementBackgroundImages","childImgs","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","Background","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","handleEvent","unbindEvents","imagesLoaded","inst","ImageTrans","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","encodeURIComponent","Collection","entities","comparator","_reset","setOptions","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","_place","choices","layoutNode","aroundNodeCoords","win","view","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","touchActionNone","direction","grabber","startSize","currentSize","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","vEnd","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","getFile","fileEntry","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","defaultVal","getItem","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","widget","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylark-utils-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName-\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && url.startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    var Uploader =  langx.Evented.inherit({\r\n        init :function(options) {\r\n        }\r\n    });\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n    function getMatrix(radian, x, y) {\r\n      var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n      return {\r\n        M11: Cos * x, M12: -Sin * y,\r\n        M21: Sin * x, M22: Cos * y\r\n      };\r\n    }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,Math.abs(d.zoom)); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-Math.abs(d.zoom)); \r\n    }\r\n\r\n  };\r\n \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,geom,styler,datax,transforms,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n  $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n  };\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  $.fn.ImageTrans = function (options) {\r\n    return new ImageTrans(this, options);\r\n\r\n   };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  langx.mixin(images, {\r\n    loaded : ImagesLoaded,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n        // Translation function, gets the message key to be translated\r\n        // and an object with context specific data as arguments:\r\n        i18n: function (message, context) {\r\n            message = (this.messages && this.messages[message]) || message.toString();\r\n            if (context) {\r\n                langx.each(context, function (key, value) {\r\n                    message = message.replace('{' + key + '}', value);\r\n                });\r\n            }\r\n            return message;\r\n        },\r\n\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}