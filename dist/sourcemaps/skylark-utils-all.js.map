{"version":3,"sources":["skylark-utils-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","isArray","object","constructor","Array","isArrayLike","obj","isString","isHtmlNode","isFunction","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","name","value","type","Node","isNumber","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","class2type","toLowerCase","String","toString","call","types","createAssigner","keysFunc","defaults","arguments","index","source","keys","l","key","allKeys","each","callback","undef","this","extend","target","deep","slice","shift","arg","mixin","has","path","isEqual","a","b","eq","isMatch","attrs","_mixin","safe","undefined","_parseMixinArgs","params","sources","removeItem","items","item","idx","indexOf","splice","result","fallback","prop","safeMixin","values","_","clone","src","checkCloneMethod","copy","deepEq","SymbolProto","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","objects","compact","array","filter","flatten","j","inArray","makeArray","offset","startWith","concat","elements","uniq","first","n","arrays","f1","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","_constructor","fn","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","unshift","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","_construct","init","klassName","__mixins__","partial","inherit","klass","SimpleQueryEngine","query","arr","thisObject","out","cache","buildFn","execute","results","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","test","matches","QueryResults","addIterativeMethod","method","Deferred","when","isPromise","then","delegate","ArrayStore","queryEngine","idProperty","get","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","advise","dispatcher","advice","receiveArguments","signal","previous","around","advised","next","nextId","aspect","methodName","existing","executionId","before","after","newResults","defer","requestAnimationFrame","setTimeoutout","noop","proxy","context","proxyFn","TypeError","debounce","wait","timeout","later","clearTimeout","setTimeout","TMP","returnTrue","returnFalse","funcs","wrapPromise","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","Promise","__ctx__","handler","PGLISTENERS","pipe","always","done","fail","self","promise","resolve","reject","_resolve","_reject","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","dasherize","str","replace","deserializeValue","JSON","parse","trim","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","camelCase","toUpperCase","lowerFirst","charAt","serializeValue","stringify","upperFirst","getAbsoluteUrl","url","document","createElement","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","uniqueId","cidPrefix","collection","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","createEvent","funcArg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","_uid","prefix","idCounter","langx","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","isIE","exec","navigator","userAgent","support","end","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","disabled","elm","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","activeElement","doc","el","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","rxhtmlTag","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","active","blur","_createStyleSheet","external","media","rel","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","insertSheetRule","addRules","rules","insertRuleFunc","isAtRule","adjust","parentName","depth","strNode","atFlg","SPACE","repeat","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","space","tab","up","transitionEnd","delegateType","handle","handleObj","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","dragHandle","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","e1","over","dropped","manager","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","stream","createObjectURL","localMediaStream","onloadedmetadata","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","filer","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","toArray","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","plugin","returnValue","plugins","instantiate","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","loaded","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","onload","loadedCallback","onerror","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","textStatus","errorThrown","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","encodeURIComponent","Collection","entities","comparator","_reset","setOptions","merge","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","loadedCallbacks","errorCallbacks","startTime","Date","getTime","callbacks","deleteJavaScript","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","Number","vEnd","toGMTString","errorHandler","msg","code","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","getFile","fileEntry","reader","FileReader","readAsArrayBuffer","readfileAsDataURL","readAsDataURL","readfileAsText","readAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","files","f","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","defaultVal","getItem","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","widgets","defineWidgetClass","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","delegateEventSplitter","undelegate","_createElement","_setAttributes","i18n","messages","main"],"mappings":"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","file":"../skylark-utils-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\",\r\n    \"./objects\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: objects.each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _construct = props._construct;\r\n            if (!_construct) {\r\n                _construct = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _construct;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./arrays\"\r\n],function(Deferred,arrays){\r\n    var each = arrays.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = arrays.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,funcs,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n\r\n        if (transEndEventNames[name]) {\r\n          transEndEventName = transEndEventNames[name];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"skylark-utils-dom/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils-dom/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n    \"use strict\";\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"skylark-utils-dom/css\"\r\n], function(css) {\r\n    return css;\r\n});\r\n\ndefine('skylark-utils-dom/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"skylark-utils-dom/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"skylark-utils-dom/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"skylark-utils-dom/finder\"\r\n], function(finder) {\r\n    return finder;\r\n});\r\n\ndefine('skylark-utils-dom/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    \r\n// in development start\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n// in development end\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils/geom',[\r\n    \"skylark-utils-dom/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils-dom/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transitionEnd) {\r\n        specialEvents.transitionEnd = {\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end,\r\n          handle: function (e) {\r\n            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n          }\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils/eventer',[\r\n    \"skylark-utils-dom/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, datax, finder, geom, eventer, styler) {\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n        klassName: \"DndManager\",\r\n\r\n        init: function() {\r\n\r\n        },\r\n\r\n        prepare: function(draggable) {\r\n            var e = eventer.create(\"preparing\", {\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle\r\n            });\r\n            draggable.trigger(e);\r\n            draggable.dragSource = e.dragSource;\r\n        },\r\n\r\n        start: function(draggable, event) {\r\n\r\n            var p = geom.pagePosition(draggable.dragSource);\r\n            this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n            this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n            var e = eventer.create(\"started\", {\r\n                elm: draggable.elm,\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle,\r\n                ghost: null,\r\n\r\n                transfer: {}\r\n            });\r\n\r\n            draggable.trigger(e);\r\n\r\n\r\n            this.dragging = draggable;\r\n\r\n            if (draggable.draggingClass) {\r\n                styler.addClass(draggable.dragSource, draggable.draggingClass);\r\n            }\r\n\r\n            this.draggingGhost = e.ghost;\r\n            if (!this.draggingGhost) {\r\n                this.draggingGhost = draggable.elm;\r\n            }\r\n\r\n            this.draggingTransfer = e.transfer;\r\n            if (this.draggingTransfer) {\r\n\r\n                langx.each(this.draggingTransfer, function(key, value) {\r\n                    event.dataTransfer.setData(key, value);\r\n                });\r\n            }\r\n\r\n            event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n            event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n            var e1 = eventer.create(\"dndStarted\", {\r\n                elm: e.elm,\r\n                dragSource: e.dragSource,\r\n                dragHandle: e.dragHandle,\r\n                ghost: e.ghost,\r\n                transfer: e.transfer\r\n            });\r\n\r\n            this.trigger(e1);\r\n        },\r\n\r\n        over: function() {\r\n\r\n        },\r\n\r\n        end: function(dropped) {\r\n            var dragging = this.dragging;\r\n            if (dragging) {\r\n                if (dragging.draggingClass) {\r\n                    styler.removeClass(dragging.dragSource, dragging.draggingClass);\r\n                }\r\n            }\r\n\r\n            var e = eventer.create(\"dndEnded\", {});\r\n            this.trigger(e);\r\n\r\n\r\n            this.dragging = null;\r\n            this.draggingTransfer = null;\r\n            this.draggingGhost = null;\r\n            this.draggingOffsetX = null;\r\n            this.draggingOffsetY = null;\r\n        }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n        klassName: \"Draggable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this;\r\n\r\n            self.elm = elm;\r\n            self.draggingClass = params.draggingClass || \"dragging\",\r\n                self.params = langx.clone(params);\r\n\r\n            [\"preparing\", \"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n\r\n            eventer.on(elm, {\r\n                \"mousedown\": function(e) {\r\n                    var params = self.params;\r\n                    if (params.handle) {\r\n                        self.dragHandle = finder.closest(e.target, params.handle);\r\n                        if (!self.dragHandle) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (params.source) {\r\n                        self.dragSource = finder.closest(e.target, params.source);\r\n                    } else {\r\n                        self.dragSource = self.elm;\r\n                    }\r\n                    manager.prepare(self);\r\n                    if (self.dragSource) {\r\n                        datax.attr(self.dragSource, \"draggable\", 'true');\r\n                    }\r\n                },\r\n\r\n                \"mouseup\": function(e) {\r\n                    if (self.dragSource) {\r\n                        //datax.attr(self.dragSource, \"draggable\", 'false');\r\n                        self.dragSource = null;\r\n                        self.dragHandle = null;\r\n                    }\r\n                },\r\n\r\n                \"dragstart\": function(e) {\r\n                    datax.attr(self.dragSource, \"draggable\", 'false');\r\n                    manager.start(self, e);\r\n                },\r\n\r\n                \"dragend\": function(e) {\r\n                    eventer.stop(e);\r\n\r\n                    if (!manager.dragging) {\r\n                        return;\r\n                    }\r\n\r\n                    manager.end(false);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n        klassName: \"Droppable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this,\r\n                draggingClass = params.draggingClass || \"dragging\",\r\n                hoverClass,\r\n                activeClass,\r\n                acceptable = true;\r\n\r\n            self.elm = elm;\r\n            self._params = params;\r\n\r\n            [\"started\", \"entered\", \"leaved\", \"dropped\", \"overing\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n            eventer.on(elm, {\r\n                \"dragover\": function(e) {\r\n                    e.stopPropagation()\r\n\r\n                    if (!acceptable) {\r\n                        return\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"overing\", {\r\n                        overElm: e.target,\r\n                        transfer: manager.draggingTransfer,\r\n                        acceptable: true\r\n                    });\r\n                    self.trigger(e2);\r\n\r\n                    if (e2.acceptable) {\r\n                        e.preventDefault() // allow drop\r\n\r\n                        e.dataTransfer.dropEffect = \"copyMove\";\r\n                    }\r\n\r\n                },\r\n\r\n                \"dragenter\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    var e2 = eventer.create(\"entered\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n                },\r\n\r\n                \"dragleave\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n                    if (!acceptable) return false\r\n\r\n                    var e2 = eventer.create(\"leaved\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.removeClass(elm, hoverClass);\r\n                    }\r\n                },\r\n\r\n                \"drop\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    eventer.stop(e); // stops the browser from redirecting.\r\n\r\n                    if (!manager.dragging) return\r\n\r\n                    // manager.dragging.elm.removeClass('dragging');\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"dropped\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    manager.end(true)\r\n                }\r\n            });\r\n\r\n            manager.on(\"dndStarted\", function(e) {\r\n                var e2 = eventer.create(\"started\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                acceptable = e2.acceptable;\r\n                hoverClass = e2.hoverClass;\r\n                activeClass = e2.activeClass;\r\n\r\n                if (activeClass && acceptable) {\r\n                    styler.addClass(elm, activeClass);\r\n                }\r\n\r\n            }).on(\"dndEnded\", function(e) {\r\n                var e2 = eventer.create(\"ended\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                if (hoverClass && acceptable) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n                if (activeClass && acceptable) {\r\n                    styler.removeClass(elm, activeClass);\r\n                }\r\n\r\n                acceptable = false;\r\n                activeClass = null;\r\n                hoverClass = null;\r\n            });\r\n\r\n        }\r\n    });\r\n\r\n\r\n    /*   \r\n     * Make the specified element be in a moveable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function draggable(elm, params) {\r\n        return new Draggable(elm, params);\r\n    }\r\n\r\n    /*   \r\n     * Make the specified element be in a droppable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function droppable(elm, params) {\r\n        return new Droppable(elm, params);\r\n    }\r\n\r\n\r\n    function dnd() {\r\n        return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n        //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable: draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable: droppable,\r\n\r\n        manager: manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils-filer/filer',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    return skylark.filer = filer;\r\n});\ndefine('skylark-utils/filer',[\r\n    \"skylark-utils-filer/filer\"\r\n], function(filer) {\r\n    return filer;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/fx',[\r\n    \"skylark-utils-dom/fx\"\r\n], function(fx) {\r\n    return fx;\r\n});\r\n\ndefine('skylark-utils-dom/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils-dom/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/images',[\r\n    \"skylark-utils-dom/images\"\r\n], function(images) {\r\n    return images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"skylark-utils-dom/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-utils-dom/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\ndefine('skylark-utils/scripter',[\r\n    \"skylark-utils-dom/scripter\"\r\n], function(scripter) {\r\n    return scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/transforms',[\r\n    \"skylark-utils-dom/transforms\"\r\n], function(transforms) {\r\n    return transforms;\r\n});\r\n\ndefine('skylark-utils-dom/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylark-utils/velm',[\r\n    \"skylark-utils-dom/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}