{"version":3,"sources":["skylark-utils-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","context","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","wrapPromise","p","d","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","Promise","__ctx__","handler","self","PGLISTENERS","pipe","langx","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","always","done","fail","Deferred","promise","resolve","reject","_resolve","_reject","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","isIE","exec","navigator","userAgent","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","disabled","elm","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","rxhtmlTag","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","_createStyleSheet","external","media","rel","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","insertSheetRule","addRules","rules","insertRuleFunc","isAtRule","adjust","parentName","depth","strNode","atFlg","SPACE","repeat","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","$","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","space","tab","up","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","dragHandle","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","e1","over","dropped","manager","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","stream","createObjectURL","localMediaStream","onloadedmetadata","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","img","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","loadedCallback","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","encodeURIComponent","Collection","entities","comparator","_reset","setOptions","merge","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","loadedCallbacks","errorCallbacks","startTime","callbacks","deleteJavaScript","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","vEnd","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","getFile","fileEntry","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","defaultVal","getItem","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","widgets","defineWidgetClass","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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hB,GACAg6B,MAAA,SAAA9hC,EAAA+hC,EAAAxlD,GAMA,MALAyjB,GAAAxjB,QAAA,SAAA6gB,GACA,GAAAI,GAAAJ,YAAAwkC,GAAAxkC,EAAAyK,EAAAzK,EACAI,GAAAskC,GAAAtlD,MAAAghB,EAAAlhB,KAGA0B,MAGAkqB,KAAA,GAAA05B,GAAA31C,SAAA8R,MAEA6jC,cAAAA,EAEA/1C,QAAA,SAAA/G,EAAAvF,GACA,GAAAL,KAEAA,GAAA4F,GAAAvF,EAEAqiD,EAAA/1C,QAAA3M,IAGA4M,SAAA,SAAA6S,EAAAjf,GACA,GAAAR,KAEAyf,GAAApiB,QAAA,SAAAuI,GACA5F,EAAA4F,GAAA28C,EAAA/hD,EAAAoF,GAAApF,KAGAkiD,EAAA/1C,QAAA3M,MAKA2oB,EAAA/b,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAglB,GAGAjJ,EAAA/b,UACA,YACA,aACAszB,GAIAvX,EAAA/b,UACA,MACA,KACA,MACA,YACA,WACAqtB,GAGAtR,EAAA/b,UACA,SACA,YACAw8B,GAGAzgB,EAAA/b,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAwjB,GAMAzH,EAAAiB,KAAA,SAAAza,GACA,MAAA,SAAAA,EACArQ,KAAAkqB,KAEAlqB,KAAAkqB,KAAAU,WAAAva,IAKAwZ,EAAA/b,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAs+B,GAIAviB,EAAA/b,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAyqB,GAGA1O,EAAA/b,UACA,YACA,aACAszB,GAIAvX,EAAA/b,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACA8Y,GAGAiD,EAAA/b,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAwS,EA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","file":"../skylark-utils-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    \r\n// in development start\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n// in development end\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, datax, finder, geom, eventer, styler) {\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n        klassName: \"DndManager\",\r\n\r\n        init: function() {\r\n\r\n        },\r\n\r\n        prepare: function(draggable) {\r\n            var e = eventer.create(\"preparing\", {\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle\r\n            });\r\n            draggable.trigger(e);\r\n            draggable.dragSource = e.dragSource;\r\n        },\r\n\r\n        start: function(draggable, event) {\r\n\r\n            var p = geom.pagePosition(draggable.dragSource);\r\n            this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n            this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n            var e = eventer.create(\"started\", {\r\n                elm: draggable.elm,\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle,\r\n                ghost: null,\r\n\r\n                transfer: {}\r\n            });\r\n\r\n            draggable.trigger(e);\r\n\r\n\r\n            this.dragging = draggable;\r\n\r\n            if (draggable.draggingClass) {\r\n                styler.addClass(draggable.dragSource, draggable.draggingClass);\r\n            }\r\n\r\n            this.draggingGhost = e.ghost;\r\n            if (!this.draggingGhost) {\r\n                this.draggingGhost = draggable.elm;\r\n            }\r\n\r\n            this.draggingTransfer = e.transfer;\r\n            if (this.draggingTransfer) {\r\n\r\n                langx.each(this.draggingTransfer, function(key, value) {\r\n                    event.dataTransfer.setData(key, value);\r\n                });\r\n            }\r\n\r\n            event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n            event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n            var e1 = eventer.create(\"dndStarted\", {\r\n                elm: e.elm,\r\n                dragSource: e.dragSource,\r\n                dragHandle: e.dragHandle,\r\n                ghost: e.ghost,\r\n                transfer: e.transfer\r\n            });\r\n\r\n            this.trigger(e1);\r\n        },\r\n\r\n        over: function() {\r\n\r\n        },\r\n\r\n        end: function(dropped) {\r\n            var dragging = this.dragging;\r\n            if (dragging) {\r\n                if (dragging.draggingClass) {\r\n                    styler.removeClass(dragging.dragSource, dragging.draggingClass);\r\n                }\r\n            }\r\n\r\n            var e = eventer.create(\"dndEnded\", {});\r\n            this.trigger(e);\r\n\r\n\r\n            this.dragging = null;\r\n            this.draggingTransfer = null;\r\n            this.draggingGhost = null;\r\n            this.draggingOffsetX = null;\r\n            this.draggingOffsetY = null;\r\n        }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n        klassName: \"Draggable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this;\r\n\r\n            self.elm = elm;\r\n            self.draggingClass = params.draggingClass || \"dragging\",\r\n                self.params = langx.clone(params);\r\n\r\n            [\"preparing\", \"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n\r\n            eventer.on(elm, {\r\n                \"mousedown\": function(e) {\r\n                    var params = self.params;\r\n                    if (params.handle) {\r\n                        self.dragHandle = finder.closest(e.target, params.handle);\r\n                        if (!self.dragHandle) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (params.source) {\r\n                        self.dragSource = finder.closest(e.target, params.source);\r\n                    } else {\r\n                        self.dragSource = self.elm;\r\n                    }\r\n                    manager.prepare(self);\r\n                    if (self.dragSource) {\r\n                        datax.attr(self.dragSource, \"draggable\", 'true');\r\n                    }\r\n                },\r\n\r\n                \"mouseup\": function(e) {\r\n                    if (self.dragSource) {\r\n                        //datax.attr(self.dragSource, \"draggable\", 'false');\r\n                        self.dragSource = null;\r\n                        self.dragHandle = null;\r\n                    }\r\n                },\r\n\r\n                \"dragstart\": function(e) {\r\n                    datax.attr(self.dragSource, \"draggable\", 'false');\r\n                    manager.start(self, e);\r\n                },\r\n\r\n                \"dragend\": function(e) {\r\n                    eventer.stop(e);\r\n\r\n                    if (!manager.dragging) {\r\n                        return;\r\n                    }\r\n\r\n                    manager.end(false);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n        klassName: \"Droppable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this,\r\n                draggingClass = params.draggingClass || \"dragging\",\r\n                hoverClass,\r\n                activeClass,\r\n                acceptable = true;\r\n\r\n            self.elm = elm;\r\n            self._params = params;\r\n\r\n            [\"started\", \"entered\", \"leaved\", \"dropped\", \"overing\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n            eventer.on(elm, {\r\n                \"dragover\": function(e) {\r\n                    e.stopPropagation()\r\n\r\n                    if (!acceptable) {\r\n                        return\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"overing\", {\r\n                        overElm: e.target,\r\n                        transfer: manager.draggingTransfer,\r\n                        acceptable: true\r\n                    });\r\n                    self.trigger(e2);\r\n\r\n                    if (e2.acceptable) {\r\n                        e.preventDefault() // allow drop\r\n\r\n                        e.dataTransfer.dropEffect = \"copyMove\";\r\n                    }\r\n\r\n                },\r\n\r\n                \"dragenter\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    var e2 = eventer.create(\"entered\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n                },\r\n\r\n                \"dragleave\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n                    if (!acceptable) return false\r\n\r\n                    var e2 = eventer.create(\"leaved\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.removeClass(elm, hoverClass);\r\n                    }\r\n                },\r\n\r\n                \"drop\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    eventer.stop(e); // stops the browser from redirecting.\r\n\r\n                    if (!manager.dragging) return\r\n\r\n                    // manager.dragging.elm.removeClass('dragging');\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"dropped\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    manager.end(true)\r\n                }\r\n            });\r\n\r\n            manager.on(\"dndStarted\", function(e) {\r\n                var e2 = eventer.create(\"started\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                acceptable = e2.acceptable;\r\n                hoverClass = e2.hoverClass;\r\n                activeClass = e2.activeClass;\r\n\r\n                if (activeClass && acceptable) {\r\n                    styler.addClass(elm, activeClass);\r\n                }\r\n\r\n            }).on(\"dndEnded\", function(e) {\r\n                var e2 = eventer.create(\"ended\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                if (hoverClass && acceptable) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n                if (activeClass && acceptable) {\r\n                    styler.removeClass(elm, activeClass);\r\n                }\r\n\r\n                acceptable = false;\r\n                activeClass = null;\r\n                hoverClass = null;\r\n            });\r\n\r\n        }\r\n    });\r\n\r\n\r\n    /*   \r\n     * Make the specified element be in a moveable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function draggable(elm, params) {\r\n        return new Draggable(elm, params);\r\n    }\r\n\r\n    /*   \r\n     * Make the specified element be in a droppable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function droppable(elm, params) {\r\n        return new Droppable(elm, params);\r\n    }\r\n\r\n\r\n    function dnd() {\r\n        return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n        //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable: draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable: droppable,\r\n\r\n        manager: manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n    /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange: null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function(message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function(key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function(form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function(e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function() {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        }, params);\r\n\r\n        var blobSlice = function() {\r\n                var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n                return slice.apply(this, arguments);\r\n            },\r\n            ajax = function(data) {\r\n                return langx.Xhr.request(data.url, data);\r\n            };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function(index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });\r\n                }\r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function(index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function(now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context, [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function() {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function(result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context, [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function(jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context, [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function() {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n\r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer, {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select: select,\r\n\r\n        upload: upload,\r\n\r\n        readFile: function(file, params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n\r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n\r\n            if (params.asArrayBuffer) {\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);\r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile: function(data, name) {\r\n            if (window.navigator.msSaveBlob) {\r\n                if (langx.isString(data)) {\r\n                    data = dataURItoBlob(data);\r\n                }\r\n                window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !langx.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}