{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","maybeAddPx","name","value","cssNumber","dasherize","classRE","classReCache","RegExp","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","document","createElement","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","match","property","arguments","computedStyle","style","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","mixin","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","toLowerCase","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","parent","setAttribute","append","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","offsetWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","lowerFirst","cssPropName","location","support","velm","createInputPseudo","type","elem","createButtonPseudo","ancestor","selector","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","disabled","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","delete","create","special","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","context","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","klassName","charAt","exec","wrapper_node_operation","argType","arg","object","el","get","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","index","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","Deferred","tuples","Callbacks","once","memory","state","promise","always","deferred","done","fail","then","fns","tuple","returned","resolve","reject","progress","notify","values","pipe","list","stateString","disable","lock","fireWith","triggerAndReturn","eventName","triggerGlobal","settings","global","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","status","success","resolveWith","ajaxComplete","ajaxError","rejectWith","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","url","serializeData","processData","param","traditional","ajax","urlAnchor","ajaxSettings","crossDomain","originAnchor","protocol","host","toString","dataType","hasPlaceholder","Date","now","jsonp","ajaxJSONP","abortTimeout","accepts","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","xhrFields","async","open","username","timeout","send","parseArguments","serialize","scope","array","hash","addToPrefiltersOrTransports","dataTypeExpression","dataTypes","rnotwhite","jQuery","unshift","ajaxExtend","flatOptions","extend","firing","firingStart","firingLength","firingIndex","fire","stopOnFalse","start","_","unique","splice","locked","sub","progressValues","progressContexts","resolveContexts","resolveValues","remain","updateFn","ctx","notifyWith","jsonpID","rscript","responseData","_callbackName","jsonpCallback","callbackName","script","originalCallback","errorType","triggerHandler","head","XMLHttpRequest","json","xml","post","getJSON","response","escape","encodeURIComponent","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","construct","_createStyleSheet","link","count","rel","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","prepare","dragSource","handleElm","p","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","d","stream","URL","createObjectURL","localMediaStream","onloadedmetadata","err","vibrate","webkitVibrate","mozVibrate","msVibrate","devices","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","Blob","CustomEvent","images","elementNodeTypes","1","9","11","ImagesLoaded","onAlways","elements","makeArray","getImages","bind","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","Background","onProgress","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","method","unbindEvents","imagesLoaded","inst","loaded","models","methodMap","patch","read","sync","entity","defaults","emulateHTTP","emulateJSON","urlError","attrs","toJSON","_method","textStatus","errorThrown","Entity","Stateful","isMatch","fetch","resp","serverAttrs","set","wrapError","save","validate","wait","_validate","isNew","destroy","stopListening","collection","idAttribute","Collection","entities","comparator","_reset","silent","setOptions","addOptions","at","min","tail","partial","initialize","singular","removed","_removeEntitys","changes","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","hasChanged","cid","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","constructor","validationError","_onEntityEvent","prevId","previousAttributes","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","l","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","keys","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","defaultOptions","touchActionNone","direction","border","grabber","startSize","currentSize","isHtmlNode","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","cookies","sKey","unescape","cookie","path","expires","domain","secure","sExpires","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","results","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","widget","delegateEventSplitter","Widget","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/ajax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    var Callbacks = function(options) {\r\n        options = langx.mixin({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                langx.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        langx.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = langx.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? langx.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    //     This module is borrow from zepto.deferred.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    //\r\n    //     Some code (c) 2005, 2013 jQuery Foundation, Inc. and other contributors\r\n\r\n    var slice = Array.prototype.slice\r\n\r\n    function Deferred(func) {\r\n        var tuples = [\r\n                // action, add listener, listener list, final state\r\n                [\"resolve\", \"done\", Callbacks({ once: 1, memory: 1 }), \"resolved\"],\r\n                [\"reject\", \"fail\", Callbacks({ once: 1, memory: 1 }), \"rejected\"],\r\n                [\"notify\", \"progress\", Callbacks({ memory: 1 })]\r\n            ],\r\n            state = \"pending\",\r\n            promise = {\r\n                state: function() {\r\n                    return state\r\n                },\r\n                always: function() {\r\n                    deferred.done(arguments).fail(arguments)\r\n                    return this\r\n                },\r\n                then: function( /* fnDone [, fnFailed [, fnProgress]] */ ) {\r\n                    var fns = arguments\r\n                    return Deferred(function(defer) {\r\n                        langx.each(tuples, function(i, tuple) {\r\n                            var fn = $.isFunction(fns[i]) && fns[i]\r\n                            deferred[tuple[1]](function() {\r\n                                var returned = fn && fn.apply(this, arguments)\r\n                                if (returned && langx.isFunction(returned.promise)) {\r\n                                    returned.promise()\r\n                                        .done(defer.resolve)\r\n                                        .fail(defer.reject)\r\n                                        .progress(defer.notify)\r\n                                } else {\r\n                                    var context = this === promise ? defer.promise() : this,\r\n                                        values = fn ? [returned] : arguments\r\n                                    defer[tuple[0] + \"With\"](context, values)\r\n                                }\r\n                            })\r\n                        })\r\n                        fns = null\r\n                    }).promise()\r\n                },\r\n\r\n                promise: function(obj) {\r\n                    return obj != null ? langx.mixin(obj, promise) : promise\r\n                }\r\n            },\r\n            deferred = {};\r\n\r\n        promise.pipe = promise.then;\r\n\r\n        langx.each(tuples, function(i, tuple) {\r\n            var list = tuple[2],\r\n                stateString = tuple[3]\r\n\r\n            promise[tuple[1]] = list.add\r\n\r\n            if (stateString) {\r\n                list.add(function() {\r\n                    state = stateString\r\n                }, tuples[i ^ 1][2].disable, tuples[2][2].lock)\r\n            }\r\n\r\n            deferred[tuple[0]] = function() {\r\n                deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments)\r\n                return this\r\n            }\r\n            deferred[tuple[0] + \"With\"] = list.fireWith\r\n        });\r\n\r\n        promise.promise(deferred);\r\n        if (func) func.call(deferred, deferred)\r\n        \r\n        return deferred;\r\n    }\r\n\r\n    var when = function(sub) {\r\n        var resolveValues = slice.call(arguments),\r\n            len = resolveValues.length,\r\n            i = 0,\r\n            remain = len !== 1 || (sub && langx.isFunction(sub.promise)) ? len : 0,\r\n            deferred = remain === 1 ? sub : Deferred(),\r\n            progressValues, progressContexts, resolveContexts,\r\n            updateFn = function(i, ctx, val) {\r\n                return function(value) {\r\n                    ctx[i] = this\r\n                    val[i] = arguments.length > 1 ? slice.call(arguments) : value\r\n                    if (val === progressValues) {\r\n                        deferred.notifyWith(ctx, val)\r\n                    } else if (!(--remain)) {\r\n                        deferred.resolveWith(ctx, val)\r\n                    }\r\n                }\r\n            }\r\n\r\n        if (len > 1) {\r\n            progressValues = new Array(len)\r\n            progressContexts = new Array(len)\r\n            resolveContexts = new Array(len)\r\n            for (; i < len; ++i) {\r\n                if (resolveValues[i] && langx.isFunction(resolveValues[i].promise)) {\r\n                    resolveValues[i].promise()\r\n                        .done(updateFn(i, resolveContexts, resolveValues))\r\n                        .fail(deferred.reject)\r\n                        .progress(updateFn(i, progressContexts, progressValues))\r\n                } else {\r\n                    --remain\r\n                }\r\n            }\r\n        }\r\n        if (!remain) deferred.resolveWith(resolveContexts, resolveValues)\r\n        return deferred.promise()\r\n    };\r\n\r\n    //     zepto.ajax.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    var jsonpID = 0,\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a');\r\n\r\n    originAnchor.href = window.location.href;\r\n\r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n        var event = eventer.create(eventName);\r\n        $(context).trigger(event, data)\r\n        return !event.isDefaultPrevented()\r\n    }\r\n\r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n\r\n    // Number of active Ajax requests\r\n    var active = 0;\r\n\r\n    function ajaxStart(settings) {\r\n        if (settings.global && active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n\r\n    function ajaxStop(settings) {\r\n        if (settings.global && !(--active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n\r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n        var context = settings.context\r\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n            return false\r\n\r\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        ajaxStop(settings)\r\n    }\r\n\r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n\r\n    var ajaxJSONP = function(options, deferred) {\r\n        if (!('type' in options)) return ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = (langx.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && langx.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    };\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest()\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: jsonType,\r\n            xml: 'application/xml, text/xml',\r\n            html: htmlType,\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    };\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) mime = mime.split(';', 2)[0]\r\n        return mime && (mime == htmlType ? 'html' :\r\n            mime == jsonType ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text'\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && langx.type(options.data) != \"string\")\r\n            options.data = param(options.data, options.traditional)\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n            options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options || {}),\r\n            deferred = Deferred(),\r\n            urlAnchor\r\n        for (key in ajaxSettings)\r\n            if (settings[key] === undefined) settings[key] = ajaxSettings[key]\r\n\r\n        ajaxStart(settings)\r\n\r\n        if (!settings.crossDomain) {\r\n            urlAnchor = document.createElement('a')\r\n            urlAnchor.href = settings.url\r\n            urlAnchor.href = urlAnchor.href\r\n            settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n        }\r\n\r\n        if (!settings.url) settings.url = window.location.toString()\r\n        serializeData(settings)\r\n\r\n        var dataType = settings.dataType,\r\n            hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n        if (hasPlaceholder) dataType = 'jsonp'\r\n\r\n        if (settings.cache === false || (\r\n                (!options || options.cache !== true) &&\r\n                ('script' == dataType || 'jsonp' == dataType)\r\n            ))\r\n            settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n        if ('jsonp' == dataType) {\r\n            if (!hasPlaceholder)\r\n                settings.url = appendQuery(settings.url,\r\n                    settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n            return ajaxJSONP(settings, deferred)\r\n        }\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n\r\n        if (settings.headers)\r\n            for (name in settings.headers) setHeader(name, settings.headers[name])\r\n        xhr.setRequestHeader = setHeader\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script')(1, eval)(result)\r\n                        else if (dataType == 'xml') result = xhr.responseXML\r\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : JSON.parse(result)\r\n                    } catch (e) { error = e }\r\n\r\n                    if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n                    else ajaxSuccess(result, xhr, settings, deferred)\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n\r\n        if (settings.timeout > 0) abortTimeout = setTimeout(function() {\r\n            xhr.onreadystatechange = empty\r\n            xhr.abort()\r\n            ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr\r\n    }\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if (langx.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!langx.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    var get = function( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    };\r\n\r\n    var post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return ajax(options)\r\n    };\r\n\r\n    var getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return ajax(options)\r\n    }\r\n\r\n    query.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        ajax(options)\r\n        return this\r\n    }\r\n\r\n    var escape = encodeURIComponent\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value)\r\n            if (scope) key = traditional ? scope :\r\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) params.add(value.name, value.value)\r\n            // recurse into nested objects\r\n            else if (type == \"array\" || (!traditional && type == \"object\"))\r\n                serialize(params, value, traditional, key)\r\n            else params.add(key, value)\r\n        })\r\n    }\r\n\r\n    var param = function(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) value = value()\r\n            if (value == null) value = \"\"\r\n            this.push(escape(key) + '=' + escape(value))\r\n        }\r\n        serialize(params, obj, traditional)\r\n        return params.join('&').replace(/%20/g, '+')\r\n    };\r\n\r\n    var\r\n        /* Prefilters\r\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n         * 2) These are called:\r\n         *    - BEFORE asking for a transport\r\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n         * 3) key is the dataType\r\n         * 4) the catchall symbol \"*\" can be used\r\n         * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n         */\r\n        prefilters = {},\r\n\r\n        /* Transports bindings\r\n         * 1) key is the dataType\r\n         * 2) the catchall symbol \"*\" can be used\r\n         * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n         */\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    var ajaxTransport = addToPrefiltersOrTransports(transports);\r\n\r\n    // A special extend for ajax options\r\n    // that takes \"flat\" options (not to be deep extended)\r\n    // Fixes #9887\r\n    function ajaxExtend(target, src) {\r\n        var key, deep,\r\n            flatOptions = ajaxSettings.flatOptions || {};\r\n\r\n        for (key in src) {\r\n            if (src[key] !== undefined) {\r\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\r\n            }\r\n        }\r\n        if (deep) {\r\n            jQuery.extend(true, target, deep);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    var ajaxSetup = function(target, settings) {\r\n        return settings ?\r\n\r\n            // Building a settings object\r\n            ajaxExtend(ajaxExtend(target, ajaxSettings), settings) :\r\n\r\n            // Extending ajaxSettings\r\n            ajaxExtend(ajaxSettings, target);\r\n    };\r\n\r\n    // Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = (structure === transports);\r\n\r\n        function inspect(dataType) {\r\n            var selected;\r\n            inspected[dataType] = true;\r\n            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\r\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\r\n                if (typeof dataTypeOrTransport === \"string\" &&\r\n                    !seekingTransport && !inspected[dataTypeOrTransport]) {\r\n\r\n                    options.dataTypes.unshift(dataTypeOrTransport);\r\n                    inspect(dataTypeOrTransport);\r\n                    return false;\r\n                } else if (seekingTransport) {\r\n                    return !(selected = dataTypeOrTransport);\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\r\n    }\r\n\r\n\r\n    langx.mixin(ajax, {\r\n    \tajaxJSONP : ajaxJSONP,\r\n    \tajaxPrefilter : ajaxPrefilter,\r\n    \tajaxTransport: ajaxTransport,\r\n    \tajaxSettings : ajaxSettings,\r\n    \tajaxSetup : ajaxSetup,\r\n\r\n    \tCallbacks:Callbacks,\r\n\r\n    \tDeferred: Deferred,\r\n\r\n    \tget : get,\r\n    \tgetJSON : getJSON,\r\n    \tparam: param,\r\n    \tpost: post,\r\n\r\n    \twhen: when\r\n\r\n    });\r\n\r\n\r\n    return skylark.ajax = ajax;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(skylark,langx,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n   $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n   };\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./ajax\"\r\n], function(skylark,langx,ajax) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = ajax(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    }\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./ajax\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}