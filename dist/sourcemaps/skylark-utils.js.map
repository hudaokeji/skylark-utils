{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylark","skylarkjs","compact","array","filter","call","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","e","each","obj","callback","key","undef","this","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","inArray","indexOf","isArray","object","Array","isString","isBoolean","isDocument","nodeType","DOCUMENT_NODE","type","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isDefined","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","makeArray","offset","startWith","concat","slice","elements","values","proxy","fn","arguments","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","shift","sources","mixin","safeMixin","substitute","template","transform","thisObject","getObject","match","retVal","getValue","keys","_k","reverse","v","format","toString","uid","_uid","uniq","langx","createClass","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","superFn","tmp","overrided","ret","parent","_constructor","constructor","init","klassName","Function","create","__proto__","partial","inherit","Evented","on","events","selector","data","ctx","one","self","_hub","trigger","CustomEvent","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","a","document","createElement","class2type","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","upperFirst","debounce","wait","timeout","later","clearTimeout","setTimeout","nextTick","requestAnimationFrame","async","Deferred","promise","Promise","resolve","reject","_resolve","_reject","bind","reason","then","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","progress","err","d","immediate","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","RegExp","cssPropName","maybeAddPx","cssNumber","classRE","classReCache","className","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","cls","re","property","computedStyle","prop","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","clone","isIE","getAttribs","attr","setAttrib","getAttrib","tag","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","documentElement","isDoc","ownerDoc","ownerDocument","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","overlay","overlayDiv","position","top","left","width","height","zIndex","remove","oldNode","replaceChild","throb","timer","time","throbber","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","index","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","support","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","matches","ancestors","byId","getElementById","closest","descendants","querySelectorAll","matchError","local","query","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","attributes","operator","cache","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","checked","disabled","enabled","eq","focus","activeElement","tabindex","has","sel","hidden","selected","visible","offsetWidth","divide","cond","nativeSelector","customPseudos","Operator","stringify","part","undefine","getAttribute","pseudo","hasAttribute","simpleExpCounter","currentExpression","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","setAttribute","removeAttribute","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","removeData","pluck","propMap","removeAttr","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","getEl","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","sort","createProxy","originalEvent","ignoreProperties","$this","handler","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","some","isImmediatePropagationStopped","currentTarget","liveFired","l","related","relatedTarget","console","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","delete","draggable","Draggable","droppable","Droppable","dnd","DndManager","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","manager","draggingClass","allowed","_params","handle","hoverClass","activeClass","acceptable","e2","dropEffect","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","input","onchange","files","filer","picker","pickedCallback","picked","dropzone","droppedCallback","dropped","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","animationDelay","fast","slow","movable","updateWithTouchData","changedTouches","downButton","startX","startY","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","t","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","el","get","toArray","not","is","excludes","collection","parents","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","content","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","script","src","deleteJavaScript","DataTransfer","_dropEffect","_effectAllowed","_data","defineProperty","set","enumerable","configurable","clearData","getData","img","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","evt","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","main"],"mappings":"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AmMA,OApKAtT,GAAAnB,MAAAuU,GACAymB,MAAA,SAAAlvB,EAAAmvB,EAAAthC,GAMA,MALAmS,GAAAlS,QAAA,SAAAwP,GACA,GAAAe,GAAAf,YAAA2xB,GAAA3xB,EAAAmL,EAAAnL,EACAe,GAAA8wB,GAAAphC,MAAAsQ,EAAAxQ,KAGA0B,MAGAoZ,KAAA,GAAAsmB,GAAAn2B,SAAAgF,MAEAmxB,cAAAA,EAEAG,SAAA,SAAAzwB,EAAA9O,GACA,GAAA4F,KAEAkJ,GAAA7Q,QAAA,SAAAsE,GACAqD,EAAArD,GAAA08B,EAAAj/B,EAAAuC,GAAAvC,KAGAo/B,EAAAt4B,QAAAlB,MAKAgT,EAAA2mB,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAze,GAGAlI,EAAA2mB,UACA,YACA,aACAzQ,GAIAlW,EAAA2mB,UACA,MACA,KACA,MACA,YACA,WACAnW,GAGAxQ,EAAA2mB,UACA,SACA,YACApO,GAGAvY,EAAA2mB,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAhgB,GAEA3G,EAAAe,KAAA,SAAAxS,GACA,MAAA,SAAAA,EACAzH,KAAAoZ,KAEApZ,KAAAoZ,KAAAW,WAAAtS,IAKAyR,EAAA2mB,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACA/M,GAIA5Z,EAAA2mB,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACApZ,GAGAvN,EAAA2mB,UACA,WACAzQ,GAIAlW,EAAA2mB,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAlrB,GAGAuE,EAAA2mB,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACA9wB,GACArQ,EAAAwa,KAAAA,IAGA1b,EAAA,sBACA,YACA,UACA,YACA,QACA,UACA,QACA,YACA,UACA,WACA,OACA,SACA,UACA,UACA,UACA,aACA,WACA,WACA,UACA,UACA,SAAAkB;AACA,MAAAA,KAGAlB,EAAA,iBAAA,sBAAA,SAAAsiC,GAAA,MAAAA,MAgFE9/B","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter;\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                proto[name] = typeof props[name] == \"function\" && !noOverrided && typeof _super[name] == \"function\" ?\r\n                    (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"ctor._constructor.apply(inst, arguments);\" +\r\n                    \"return inst;\" +\r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props,options) {\r\n                    return createClass(props, this,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props,options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n    var Evented = createClass({\r\n        on: function(events,selector,data,callback,ctx,/*used internally*/one) {\r\n\t        var self = this,\r\n\t        \t_hub = this._hub || (this._hub = {});\r\n\t        \r\n\t        if (isPlainObject(events)) {\r\n\t        \tctx = callback;\r\n\t            each(events, function(type, fn) {\r\n\t                self.on(type,selector, data, fn, ctx, one);\r\n\t            });\r\n\t            return this;\r\n\t        }\r\n\t        \r\n\t        if (!isString(selector) && !isFunction(callback)) {\r\n\t        \tctx = callback;\r\n\t            callback = data;\r\n\t            data = selector;\r\n\t            selector = undefined;\r\n\t        }\r\n\t        \r\n\t        if (isFunction(data)) {\r\n\t            ctx = callback;\r\n\t            callback = data;\r\n\t            data = null;\r\n\t        }\r\n\t\r\n\t        if (isString(events)) {\r\n\t            events = events.split(/\\s/)\r\n\t        }\r\n\t        \r\n\t        events.forEach(function(name) {\r\n\t            (_hub[name] || (_hub[name] = [])).push({\r\n\t                fn: callback,\r\n\t                selector: selector,\r\n\t                data: data,\r\n\t                ctx: ctx,\r\n\t                one: one\r\n\t            });\r\n\t        });\r\n\t\r\n\t        return this;\r\n\t    },\r\n\t\r\n\t    one: function(events,selector,data,callback,ctx) {\r\n\t        return this.on(events,selector,data,callback,ctx,1);\r\n\t    },\r\n\t\r\n\t    trigger: function(e/*,argument list*/) {\r\n\t    \tif (!this._hub) {\r\n\t    \t\treturn this;\r\n\t    \t}\r\n\t    \t\r\n\t    \tvar self = this;\r\n\t    \t\r\n\t    \tif (isString(e)) {\r\n\t    \t\te = new CustomEvent(e);\r\n\t    \t}\r\n\t    \t\r\n\t        var args = slice.call(arguments,1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n\t        [e.type || e.name ,\"all\"].forEach(function(eventName){\r\n\t\t        var listeners = self._hub[eventName];\r\n\t\t        if (!listeners){\r\n\t\t        \treturn;\r\n\t\t        }\r\n\t        \r\n\t\t        var len = listeners.length,\r\n\t\t        \treCompact = false;\r\n\t\t        \r\n\t\t        for (var i = 0; i < len; i++) {\r\n\t\t        \tvar listener = listeners[i];\r\n\t\t            if (e.data) {\r\n\t\t                if (listener.data) {\r\n\t\t                    e.data = mixin({}, listener.data, e.data);\r\n\t\t                }\r\n\t\t            } else {\r\n\t\t                e.data = listener.data || null;\r\n\t\t            }\r\n\t\t            listener.fn.apply(listener.ctx, args);\r\n\t\t            if (listener.one){\r\n\t\t            \tlisteners[i] = null;\r\n\t\t            \treCompact = true;\r\n\t\t            }\t        \t\t\r\n\t\t        }\r\n\t\t        \r\n\t\t        if (reCompact){\r\n\t\t        \tself._hub[eventName] = compact(listeners);\r\n\t\t        }\r\n\t        \t\r\n\t        });\r\n\t        return this;\r\n\t    },\r\n\t\r\n\t    listened: function(event) {\r\n\t        var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n\t        return evtArr.length > 0;\r\n\t    },\r\n\t\r\n\t    listenTo: function(obj, event, callback,/*used internally*/one) {\r\n\t        if (!obj) {\r\n\t        \treturn this;\r\n\t        }\r\n\r\n\t        // Bind callbacks on obj, \r\n\t        if (isString(callback)) {\r\n\t        \tcallback = this[callback];\r\n\t        }\r\n\t        \r\n\t        if (one){\r\n\t\t        obj.one(event,callback,this);\r\n\t        } else {\r\n\t\t        obj.on(event,callback,this);\r\n\t        }\r\n\t        \r\n\t        //keep track of them on listening.\r\n\t        var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n\t        \tlistening;\r\n\r\n\t        for (var i=0;i<listeningTo.length;i++) {\r\n\t        \tif (listeningTo[i].obj == obj) {\r\n\t        \t\tlistening = listeningTo[i];\r\n\t        \t\tbreak;\r\n\t        \t}\r\n\t        }\r\n\t        if (!listening) {\r\n\t        \tlisteningTo.push(\r\n\t        \t\tlistening = {\r\n\t        \t\t\tobj : obj,\r\n\t        \t\t\tevents : {\r\n\t        \t\t\t}\r\n\t        \t    }\r\n\t        \t);\r\n\t        }\r\n\t        var listeningEvents = listening.events,\r\n\t        \tlisteningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n\t        if (listeningEvent.indexOf(callback)==-1) {\r\n\t        \tlisteningEvent.push(callback);\r\n\t        }\r\n\t\r\n\t        return this;\r\n\t    },\r\n\t    \r\n\t    listenToOnce: function(obj, event, callback) {\r\n\t    \treturn this.listenTo(obj,event,callback,1);\r\n\t    },\r\n\t    \r\n\t    off: function(events, callback) {\r\n\t        var _hub = this._hub || (this._hub = {});\r\n\t        if (isString(events)) {\r\n\t            events = events.split(/\\s/)\r\n\t        }\r\n\t\r\n\t        events.forEach(function(name) {\r\n\t            var evts = _hub[name];\r\n\t            var liveEvents = [];\r\n\t\r\n\t            if (evts && callback) {\r\n\t                for (var i = 0, len = evts.length; i < len; i++) {\r\n\t                    if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n\t                        liveEvents.push(evts[i]);\r\n\t                }\r\n\t            }\r\n\t\r\n\t            if (liveEvents.length) {\r\n\t            \t_hub[name] = liveEvents;\r\n\t            } else {\r\n\t            \tdelete _hub[name];\r\n\t            }\r\n\t        });\r\n\t\r\n\t        return this;\r\n\t    },\r\n\t    unlistenTo : function(obj, event, callback) {\r\n\t        var listeningTo = this._listeningTo;\r\n\t        if (!listeningTo) {\r\n\t        \treturn this;\r\n\t        }\r\n\t        for (var i = 0; i < listeningTo.length; i++) {\r\n\t          var listening = listeningTo[i];\r\n\t          \r\n\t          if (obj && obj != listening.obj) {\r\n\t        \t  continue;\r\n\t          }\r\n\t          \r\n\t          var listeningEvents = listening.events;\r\n\t          for (var eventName in listeningEvents) {\r\n\t        \t if (event && event != eventName) {\r\n\t        \t\t continue;\r\n\t        \t }\r\n\t        \t \r\n\t        \t listeningEvent = listeningEvents[eventName];\r\n\t        \t \r\n\t        \t for (var j=0;j<listeningEvent.length;j++) {\r\n\t        \t\t if (!callback || callback == listeningEvent[i]) {\r\n\t        \t\t\t listening.obj.off(eventName, listeningEvent[i], this);\r\n\t        \t\t\t listeningEvent[i] = null;\r\n\t        \t\t }\r\n\t        \t }\r\n\t        \t \r\n\t        \t listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\t        \t \r\n\t        \t if (isEmptyObject(listeningEvent)) {\r\n\t        \t\t listeningEvents[eventName] = null; \r\n\t        \t }\r\n\t        \t \r\n\t          }\r\n\t          \r\n\t          if (isEmptyObject(listeningEvents)) {\r\n\t        \t  listeningTo[i] = null;\r\n\t          }\r\n\t        }\r\n\t        \r\n\t        listeningTo = this._listeningTo = compact(listeningTo);\r\n\t        if (isEmptyObject(listeningTo)) {\r\n\t        \tthis._listeningTo = null;\r\n\t        }\r\n        \r\n\t        return this;\r\n\t    }  \r\n    });\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n    \r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }    \r\n    \r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0;i<array.length;i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j<item.length;j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object instanceof Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n        \tif (obj[name] !== null) {\r\n        \t\treturn false;\r\n        \t}\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    \r\n    function removeItem(items,item) {\r\n    \tif (isArray(items)) {\r\n        \tvar idx = items.indexOf(item);\r\n        \tif (idx != -1) {\r\n        \t\titems.splice(idx, 1);\r\n        \t}    \t\t\r\n    \t} else if (isPlainObject(items)) {\r\n    \t\tfor (var key in items) {\r\n    \t\t\tif (items[key] == item) {\r\n    \t\t\t\tdelete items[key];\r\n    \t\t\t\tbreak;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n    \treturn this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n    function uid(obj) {\r\n        return obj._uid || obj.id || (obj._uid = _uid++);\r\n    }\r\n    \r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n    \r\n    mixin(langx, {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        compact: compact,\r\n\r\n        dasherize: dasherize,\r\n\r\n        Evented: Evented,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n        \r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n        \r\n        uid: uid,\r\n        \r\n        uniq: uniq,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\r\n\ndefine('skylark-utils/async',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n    var Deferred = function() {\r\n        this.promise = new Promise(function(resolve, reject) {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }.bind(this));\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this.promise;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this.promise;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    function nextTick(fn) {\r\n        requestAnimationFrame(fn);\r\n        return this;\r\n    }\r\n\r\n    function async(fn) {\r\n        return async;\r\n    }\r\n\r\n    langx.mixin(async, {\r\n        all: Deferred.all,\r\n        debounce: debounce,\r\n        Deferred: Deferred,\r\n        first : Deferred.first,\r\n        nextTick : nextTick,\r\n        reject : Deferred.reject,\r\n        resolve : Deferred.resolve,\r\n        when: Deferred.when\r\n    });\r\n\r\n    return skylark.async = async;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        }\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (cls.match(re)) {\r\n                cls = cls.replace(re, \" \");\r\n            }\r\n        });\r\n\r\n        className(elm, cls.trim());\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        } \r\n       \r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n        \r\n        dom.forEach(function(node){\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent) {\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm,params) {\r\n        var overlayDiv = createElement(\"div\",params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = overlay(elm, {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            };\r\n        if (text) throb.appendChild(this.createTextNode(text));\r\n        throbber.appendChild(throb);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        } \r\n\r\n        return {\r\n            remove: remove\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder , {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        checked: function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        contains: function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        eq: function(elm, idx, nodes, value) {\r\n            return (idx === value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        first: function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        has: function(elm, idx, nodes, sel) {\r\n            return local.querySelector(elm, sel).length > 0;\r\n        },\r\n\r\n        hidden: function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        last: function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        parent: function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        selected: function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        visible: function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].Operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].Operator + JSON.stringify(attributes[i].value) + +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefine) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n        if (tag = cond.tag) {\r\n            var nodeName = node.nodeName.toUpperCase();\r\n            if (tag == '*') {\r\n                if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n            } else {\r\n                if (nodeName != tag) return false;\r\n            }\r\n        }\r\n\r\n        if (id = cond.id) {\r\n            if (node.getAttribute('id') != id) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        var i, part, cls, pseudo;\r\n\r\n        if (classes = cond.classes) {\r\n            for (i = classes.length; i--;) {\r\n                cls = node.getAttribute('class');\r\n                if (!(cls && classes[i].regexp.test(cls))) return false;\r\n            }\r\n        }\r\n\r\n        if (attributes)\r\n            for (i = attributes.length; i--;) {\r\n                part = attributes[i];\r\n                if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n            }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if (!pseudo(node, idx, nodes, part.value)) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    if (!nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed = local.Slick.parse(selector);\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (node == root) {\r\n                break;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector) {\r\n        var ret = [];\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                ret.push(node);\r\n            }\r\n            if (node == ret) {\r\n                break;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(selector) {\r\n        return descendant(document.body, selector);\r\n    }\r\n\r\n    function findAll(selector) {\r\n        return descendants(document.body, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector)\r\n        } else {\r\n            return local.check(elm, selector);\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n        \r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var elm = this.getEl(),\r\n            parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: false,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            binding = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        bindings.some(function(binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return true;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns) {\r\n                                return false;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                            return false;\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event);\r\n\r\n                event = parsed.type;\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger,\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          ghost : null,\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n        this.dragging = draggable;\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      end : function() {\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            allowed = false;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (allowed === true) {\r\n              datax.prop(self.elm, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            datax.prop(self.elm, \"draggable\", false);\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            manager.start(self, e);\r\n            styler.addClass(self.elm,draggingClass);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            styler.removeClass(self.elm,draggingClass);\r\n\r\n            manager.end();\r\n          }\r\n        });\r\n\r\n        if (params.handle) {\r\n          eventer.on(elm,{\r\n            \"mouseenter\" : function(e) {\r\n              allowed = true;\r\n            },\r\n            \"mouseleave\" : function(e) {\r\n              allowed = false;\r\n            }\r\n          },params.handle);\r\n        } else {\r\n          allowed = true;\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"ended\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            self.trigger(e2);\r\n\r\n            e.preventDefault() // allow drop\r\n\r\n            e.dataTransfer.dropEffect = \"copyMove\";\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end()\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\"\r\n], function(skylark, langx, eventer) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        input.click();\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var droppedCallback = params.dropped;\r\n\r\n            on(elm, \"dragover,dragend\", function(e) {\r\n                return false;\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                e.preventDefault();\r\n                if (droppedCallback) {\r\n                    droppedCallback(e.dataTransfer.files);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\",\r\n    \"./async\"\r\n], function(skylark, langx, browser, styler, eventer, async) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            async.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            async.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) async.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, callback) {\r\n        animate(elm, { opacity: opacity }, speed, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, callback) {\r\n\r\n        fadeTo(elm, speed, 0, function() {\r\n            styler.hide(elm);\r\n            if (callback) {\r\n                callback.call(elm);\r\n            }\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, callback);\r\n        } else {\r\n            fadeOut(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./async\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, async, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.concat($(selector, context))))\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./async\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}