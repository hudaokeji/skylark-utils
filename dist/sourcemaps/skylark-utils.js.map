{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","parent","append","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","type","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","createStyleSheet","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","href","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","rootIsSelector","matches","ancestors","ret","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","checkbox","checked","idx","disabled","enabled","eq","focus","activeElement","tabindex","gt","has","sel","hidden","lt","not","radio","selected","visible","offsetWidth","item","isArrayFilter","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","setAttribute","removeAttribute","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","obj","pageXOffset","pageYOffset","pageRect","round","offset","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","result","l","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","delete","create","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","handleElm","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","eventName","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","src","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","selectFile","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","Blob","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","xhr","settings","deferred","context","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","protocol","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","open","username","password","timeout","send","get","parseArguments","post","getJSON","http","beforeSend","global","XMLHttpRequest","script","json","xml","gtJSON","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","some","choice","corner","spaceAvailable","w","L","R","M","charAt","h","T","B","res","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","array","ltr","movable","updateWithTouchData","keys","changedTouches","downButton","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","exec","wrapper_node_operation","argType","arg","object","el","toArray","is","excludes","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","cookies","sKey","unescape","cookie","escape","list","path","set","expires","domain","secure","sExpires","constructor","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","results","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","img","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","toString","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","partial","delegate","main"],"mappings":"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ACA,MAAA,SAAAA,EACArK,KAAAgN,KAEAhN,KAAAgN,KAAAa,WAAAxD,IAKAyC,EAAAk8B,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAvb,GAIA3gB,EAAAk8B,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAhtB,GAGAlP,EAAAk8B,UACA,WACAziB,GAIAzZ,EAAAk8B,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACA9gC,GAGA4E,EAAAk8B,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAlpC,GACA1D,EAAA0Q,KAAAA,IAGA7R,EAAA,sBACA,YACA,YACA,QACA,UACA,QACA,YACA,YACA,UACA,WACA,OACA,SACA,SACA,UACA,UACA,UACA,aACA,aACA,WACA,WACA,UACA,UACA,SAAAmB,GACA,MAAAA,KAGAnB,EAAA,iBAAA,sBAAA,SAAAguC,GAAA,MAAAA,MA8EEjpC","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\n    return skylark;\n});\n\ndefine('skylark-utils/langx',[\n    \"skylark-langx/langx\"\n], function(langx) {\n    return langx;\n});\n\ndefine('skylark-utils/browser',[\n    \"./skylark\",\n    \"./langx\"\n], function(skylark,langx) {\n    var checkedCssProperties = {\n        \"transitionproperty\": \"TransitionProperty\",\n    };\n\n    var css3PropPrefix = \"\",\n        css3StylePrefix = \"\",\n        css3EventPrefix = \"\",\n\n        cssStyles = {},\n        cssProps = {},\n\n        vendorPrefix,\n        vendorPrefixRE,\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\n\n        document = window.document,\n        testEl = document.createElement(\"div\"),\n\n        matchesSelector = testEl.webkitMatchesSelector ||\n        testEl.mozMatchesSelector ||\n        testEl.oMatchesSelector ||\n        testEl.matchesSelector,\n\n        testStyle = testEl.style;\n\n    for (var name in testStyle) {\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\n        if (matched) {\n            if (!vendorPrefixRE) {\n                vendorPrefix = matched[1];\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\n\n                css3StylePrefix = vendorPrefix;\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\n                css3EventPrefix = vendorPrefix.toLowerCase();\n            }\n\n            cssStyles[langx.lowerFirst(matched[2])] = name;\n            var cssPropName = langx.dasherize(matched[2]);\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\n\n        }\n    }\n\n\n    function normalizeCssEvent(name) {\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\n    }\n\n    function normalizeCssProperty(name) {\n        return cssProps[name] || name;\n    }\n\n    function normalizeStyleProperty(name) {\n        return cssStyles[name] || name;\n    }\n\n    function browser() {\n        return browser;\n    }\n\n    langx.mixin(browser, {\n        css3PropPrefix: css3PropPrefix,\n\n        normalizeStyleProperty: normalizeStyleProperty,\n\n        normalizeCssProperty: normalizeCssProperty,\n\n        normalizeCssEvent: normalizeCssEvent,\n\n        matchesSelector: matchesSelector,\n\n        location: function() {\n            return window.location;\n        },\n\n        support : {}\n\n    });\n\n    testEl = null;\n\n    return skylark.browser = browser;\n});\n\ndefine('skylark-utils/styler',[\n    \"./skylark\",\n    \"./langx\"\n], function(skylark, langx) {\n    var every = Array.prototype.every,\n        forEach = Array.prototype.forEach,\n        camelCase = langx.camelCase,\n        dasherize = langx.dasherize;\n\n    function maybeAddPx(name, value) {\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n    }\n\n    var cssNumber = {\n            'column-count': 1,\n            'columns': 1,\n            'font-weight': 1,\n            'line-height': 1,\n            'opacity': 1,\n            'z-index': 1,\n            'zoom': 1\n        },\n        classReCache = {\n\n        };\n\n    function classRE(name) {\n        return name in classReCache ?\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\n    }\n\n    // access className property while respecting SVGAnimatedString\n    function className(node, value) {\n        var klass = node.className || '',\n            svg = klass && klass.baseVal !== undefined\n\n        if (value === undefined) return svg ? klass.baseVal : klass\n        svg ? (klass.baseVal = value) : (node.className = value)\n    }\n\n\n    var elementDisplay = {};\n\n    function defaultDisplay(nodeName) {\n        var element, display\n        if (!elementDisplay[nodeName]) {\n            element = document.createElement(nodeName)\n            document.body.appendChild(element)\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\n            element.parentNode.removeChild(element)\n            display == \"none\" && (display = \"block\")\n            elementDisplay[nodeName] = display\n        }\n        return elementDisplay[nodeName]\n    }\n\n    function show(elm) {\n        styler.css(elm, \"display\", \"\");\n        if (styler.css(elm, \"display\") == \"none\") {\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\n        }\n        return this;\n    }\n\n    function isInvisible(elm) {\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\n    }\n\n    function hide(elm) {\n        styler.css(elm, \"display\", \"none\");\n        return this;\n    }\n\n    function addClass(elm, name) {\n        if (!name) return this\n        var cls = className(elm),\n            names;\n        if (langx.isString(name)) {\n            names = name.split(/\\s+/g);\n        } else {\n            names = name;\n        }\n        names.forEach(function(klass) {\n            var re = classRE(klass);\n            if (!cls.match(re)) {\n                cls += (cls ? \" \" : \"\") + klass;\n            }\n        });\n\n        className(elm, cls);\n\n        return this;\n    }\n\n    function css(elm, property, value) {\n        if (arguments.length < 3) {\n            var computedStyle,\n                computedStyle = getComputedStyle(elm, '')\n            if (langx.isString(property)) {\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\n            } else if (langx.isArrayLike(property)) {\n                var props = {}\n                forEach.call(property, function(prop) {\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\n                })\n                return props\n            }\n        }\n\n        var css = '';\n        if (typeof(property) == 'string') {\n            if (!value && value !== 0) {\n                elm.style.removeProperty(dasherize(property));\n            } else {\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\n            }\n        } else {\n            for (key in property) {\n                if (property[key] === undefined) {\n                    continue;\n                }\n                if (!property[key] && property[key] !== 0) {\n                    elm.style.removeProperty(dasherize(key));\n                } else {\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n                }\n            }\n        }\n\n        elm.style.cssText += ';' + css;\n        return this;\n    }\n\n\n    function hasClass(elm, name) {\n        var re = classRE(name);\n        return elm.className && elm.className.match(re);\n    }\n\n    function removeClass(elm, name) {\n        if (name) {\n            var cls = className(elm),\n                names;\n\n            if (langx.isString(name)) {\n                names = name.split(/\\s+/g);\n            } else {\n                names = name;\n            }\n\n            names.forEach(function(klass) {\n                var re = classRE(klass);\n                if (cls.match(re)) {\n                    cls = cls.replace(re, \" \");\n                }\n            });\n\n            className(elm, cls.trim());\n        } else {\n            className(elm,\"\");\n        }\n\n        return this;\n    }\n\n    function toggleClass(elm, name, when) {\n        var self = this;\n        name.split(/\\s+/g).forEach(function(klass) {\n            if (when === undefined) {\n                when = !self.hasClass(elm, klass);\n            }\n            if (when) {\n                self.addClass(elm, klass);\n            } else {\n                self.removeClass(elm, klass)\n            }\n        });\n\n        return self;\n    }\n\n    var styler = function() {\n        return styler;\n    };\n\n    langx.mixin(styler, {\n        autocssfix: true,\n\n        addClass: addClass,\n        className: className,\n        css: css,\n        hasClass: hasClass,\n        hide: hide,\n        isInvisible: isInvisible,\n        removeClass: removeClass,\n        show: show,\n        toggleClass: toggleClass\n    });\n\n    return skylark.styler = styler;\n});\n\ndefine('skylark-utils/noder',[\n    \"./skylark\",\n    \"./langx\",\n    \"./styler\"\n], function(skylark, langx, styler) {\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n        div = document.createElement(\"div\"),\n        table = document.createElement('table'),\n        tableBody = document.createElement('tbody'),\n        tableRow = document.createElement('tr'),\n        containers = {\n            'tr': tableBody,\n            'tbody': table,\n            'thead': table,\n            'tfoot': table,\n            'td': tableRow,\n            'th': tableRow,\n            '*': div\n        },\n        rootNodeRE = /^(?:body|html)$/i,\n        map = Array.prototype.map,\n        slice = Array.prototype.slice;\n\n    function ensureNodes(nodes, copyByClone) {\n        if (!langx.isArrayLike(nodes)) {\n            nodes = [nodes];\n        }\n        if (copyByClone) {\n            nodes = map.call(nodes, function(node) {\n                return node.cloneNode(true);\n            });\n        }\n        return langx.flatten(nodes);\n    }\n\n    function nodeName(elm, chkName) {\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\n        if (chkName !== undefined) {\n            return name === chkName.toLowerCase();\n        }\n        return name;\n    };\n\n    function contents(elm) {\n        if (nodeName(elm, \"iframe\")) {\n            return elm.contentDocument;\n        }\n        return elm.childNodes;\n    }\n\n    function html(node, html) {\n        if (html === undefined) {\n            return node.innerHTML;\n        } else {\n            this.empty(node);\n            html = html || \"\";\n            if (langx.isString(html) || langx.isNumber(html)) {\n                node.innerHTML = html;\n            } else if (langx.isArrayLike(html)) {\n                for (var i = 0; i < html.length; i++) {\n                    node.appendChild(html[i]);\n                }\n            } else {\n                node.appendChild(html);\n            }\n        }\n    }\n\n    function clone(node, deep) {\n        var self = this,\n            clone;\n\n        // TODO: Add feature detection here in the future\n        if (!isIE || node.nodeType !== 1 || deep) {\n            return node.cloneNode(deep);\n        }\n\n        // Make a HTML5 safe shallow copy\n        if (!deep) {\n            clone = document.createElement(node.nodeName);\n\n            // Copy attribs\n            each(self.getAttribs(node), function(attr) {\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\n            });\n\n            return clone;\n        }\n    }\n\n    function createElement(tag, props,parent) {\n        var node = document.createElement(tag);\n        if (props) {\n            langx.mixin(node, props);\n        }\n        if (parent) {\n            append(parent,node);\n        }\n        return node;\n    }\n\n    function createFragment(html) {\n        // A special case optimization for a single tag\n        html = langx.trim(html);\n        if (singleTagRE.test(html)) {\n            return [createElement(RegExp.$1)];\n        }\n\n        var name = fragmentRE.test(html) && RegExp.$1\n        if (!(name in containers)) {\n            name = \"*\"\n        }\n        var container = containers[name];\n        container.innerHTML = \"\" + html;\n        dom = slice.call(container.childNodes);\n\n        dom.forEach(function(node) {\n            container.removeChild(node);\n        })\n\n        return dom;\n    }\n\n    function contains(node, child) {\n        return isChildOf(child, node);\n    }\n\n    function createTextNode(text) {\n        return document.createTextNode(text);\n    }\n\n    function doc() {\n        return document;\n    }\n\n    function empty(node) {\n        while (node.hasChildNodes()) {\n            var child = node.firstChild;\n            node.removeChild(child);\n        }\n        return this;\n    }\n\n    function isChildOf(node, parent,directly) {\n        if (directly) {\n            return node.parentNode === parent;\n        }\n        if (document.documentElement.contains) {\n            return parent.contains(node);\n        }\n        while (node) {\n            if (parent === node) {\n                return true;\n            }\n\n            node = node.parentNode;\n        }\n\n        return false;\n    }\n\n    function isDoc(node) {\n        return node != null && node.nodeType == node.DOCUMENT_NODE\n    }\n\n    function ownerDoc(elm) {\n        if (!elm) {\n            return document;\n        }\n\n        if (elm.nodeType == 9) {\n            return elm;\n        }\n\n        return elm.ownerDocument;\n    }\n\n    function ownerWindow(elm) {\n        var doc = ownerDoc(elm);\n        return  doc.defaultView || doc.parentWindow;\n    } \n\n    function after(node, placing, copyByClone) {\n        var refNode = node,\n            parent = refNode.parentNode;\n        if (parent) {\n            var nodes = ensureNodes(placing, copyByClone),\n                refNode = refNode.nextSibling;\n\n            for (var i = 0; i < nodes.length; i++) {\n                if (refNode) {\n                    parent.insertBefore(nodes[i], refNode);\n                } else {\n                    parent.appendChild(nodes[i]);\n                }\n            }\n        }\n        return this;\n    }\n\n    function before(node, placing, copyByClone) {\n        var refNode = node,\n            parent = refNode.parentNode;\n        if (parent) {\n            var nodes = ensureNodes(placing, copyByClone);\n            for (var i = 0; i < nodes.length; i++) {\n                parent.insertBefore(nodes[i], refNode);\n            }\n        }\n        return this;\n    }\n\n    function prepend(node, placing, copyByClone) {\n        var parentNode = node,\n            refNode = parentNode.firstChild,\n            nodes = ensureNodes(placing, copyByClone);\n        for (var i = 0; i < nodes.length; i++) {\n            if (refNode) {\n                parentNode.insertBefore(nodes[i], refNode);\n            } else {\n                parentNode.appendChild(nodes[i]);\n            }\n        }\n        return this;\n    }\n\n    function append(node, placing, copyByClone) {\n        var parentNode = node,\n            nodes = ensureNodes(placing, copyByClone);\n        for (var i = 0; i < nodes.length; i++) {\n            parentNode.appendChild(nodes[i]);\n        }\n        return this;\n    }\n\n    function overlay(elm, params) {\n        var overlayDiv = createElement(\"div\", params);\n        styler.css(overlayDiv, {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            zIndex: 0x7FFFFFFF,\n            opacity: 0.7\n        });\n        elm.appendChild(overlayDiv);\n        return overlayDiv;\n\n    }\n\n\n\n    function remove(node) {\n        if (node && node.parentNode) {\n            try {\n               node.parentNode.removeChild(node);\n            } catch (e) {\n                console.warn(\"The node is already removed\",e);\n            }\n         }\n        return this;\n    }\n\n    function replace(node, oldNode) {\n        oldNode.parentNode.replaceChild(node, oldNode);\n        return this;\n    }\n\n    function throb(elm, params) {\n        params = params || {};\n        var self = this,\n            text = params.text,\n            style = params.style,\n            time = params.time,\n            callback = params.callback,\n            timer,\n            throbber = this.createElement(\"div\", {\n                className: params.className || \"throbber\",\n                style: style\n            }),\n            _overlay = overlay(throbber, {\n                className: 'overlay fade'\n            }),\n            throb = this.createElement(\"div\", {\n                className: \"throb\"\n            }),\n            textNode = this.createTextNode(text || \"\"),\n            remove = function() {\n                if (timer) {\n                    clearTimeout(timer);\n                    timer = null;\n                }\n                if (throbber) {\n                    self.remove(throbber);\n                    throbber = null;\n                }\n            },\n            update = function(params) {\n                if (params && params.text && throbber) {\n                    textNode.nodeValue = params.text;\n                }\n            };\n        throb.appendChild(textNode);\n        throbber.appendChild(throb);\n        elm.appendChild(throbber);\n        var end = function() {\n            remove();\n            if (callback) callback();\n        };\n        if (time) {\n            timer = setTimeout(end, time);\n        }\n\n        return {\n            remove: remove,\n            update: update\n        };\n    }\n\n    function traverse(node, fn) {\n        fn(node)\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\n            traverse(node.childNodes[i], fn);\n        }\n        return this;\n    }\n\n    function reverse(node) {\n        var firstChild = node.firstChild;\n        for (var i = node.children.length - 1; i > 0; i--) {\n            if (i > 0) {\n                var child = node.children[i];\n                node.insertBefore(child, firstChild);\n            }\n        }\n    }\n\n    function wrapper(node, wrapperNode) {\n        if (langx.isString(wrapperNode)) {\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\n        }\n        node.parentNode.insertBefore(wrapperNode, node);\n        wrapperNode.appendChild(node);\n    }\n\n    function wrapperInner(node, wrapperNode) {\n        var childNodes = slice.call(node.childNodes);\n        node.appendChild(wrapperNode);\n        for (var i = 0; i < childNodes.length; i++) {\n            wrapperNode.appendChild(childNodes[i]);\n        }\n        return this;\n    }\n\n    function unwrap(node) {\n        var child, parent = node.parentNode;\n        if (parent) {\n            if (this.isDoc(parent.parentNode)) return;\n            parent.parentNode.insertBefore(node, parent);\n        }\n    }\n\n    function noder() {\n        return noder;\n    }\n\n    langx.mixin(noder, {\n        clone: clone,\n        contents: contents,\n\n        createElement: createElement,\n\n        createFragment: createFragment,\n\n        contains: contains,\n\n        createTextNode: createTextNode,\n\n        doc: doc,\n\n        empty: empty,\n\n        html: html,\n\n        isChildOf: isChildOf,\n\n        isDoc: isDoc,\n\n        ownerDoc: ownerDoc,\n\n        ownerWindow : ownerWindow,\n\n        after: after,\n\n        before: before,\n\n        prepend: prepend,\n\n        append: append,\n\n        remove: remove,\n\n        replace: replace,\n\n        throb: throb,\n\n        traverse: traverse,\n\n        reverse: reverse,\n\n        wrapper: wrapper,\n\n        wrapperInner: wrapperInner,\n\n        unwrap: unwrap\n    });\n\n    return skylark.noder = noder;\n});\n\ndefine('skylark-utils/css',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\"\n], function(skylark, langx, construct) {\n\n    var head = document.getElementsByTagName(\"head\")[0],\n        count = 0,\n        sheetsByUrl = {},\n        sheetElementsById = {},\n        defaultSheetId = _createStyleSheet(),\n        defaultSheet = sheetElementsById[defaultSheetId],\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\n        insertRuleFunc,\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\n\n    if (defaultSheet.insertRule) {\n        var _insertRule = defaultSheet.insertRule;\n        insertRuleFunc = function(selector, css, index) {\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\n        };\n    } else {\n        insertRuleFunc = defaultSheet.addRule;\n    }\n\n    function normalizeSelector(selectorText) {\n        var selector = [],\n            last, len;\n        last = defaultSheet[rulesPropName].length;\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\n        len = defaultSheet[rulesPropName].length;\n        for (var i = len - 1; i >= last; i--) {\n            selector.push(_sheet[_rules][i].selectorText);\n            deleteRuleFunc.call(defaultSheet, i);\n        }\n        return selector.reverse().join(', ');\n    }\n\n    function _createStyleSheet() {\n        var link = document.createElement(\"link\"),\n            id = (count++);\n\n        link.rel = \"stylesheet\";\n        link.type = \"text/css\";\n        link.async = false;\n        link.defer = false;\n\n        head.appendChild(link);\n        sheetElementsById[id] = link;\n\n        return id;\n    }\n\n    function css() {\n        return css;\n    }\n\n    langx.mixin(css, {\n        createStyleSheet: function(cssText) {\n            return _createStyleSheet();\n        },\n\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\n            var sheet = sheetsByUrl[url];\n            if (!sheet) {\n                sheet = sheetsByUrl[url] = {\n                    state: 0, //0:unload,1:loaded,-1:loaderror\n                    loadedCallbacks: [],\n                    errorCallbacks: []\n                };\n            }\n\n            sheet.loadedCallbacks.push(loadedCallback);\n            sheet.errorCallbacks.push(errorCallback);\n\n            if (sheet.state === 1) {\n                sheet.node.onload();\n            } else if (sheet.state === -1) {\n                sheet.node.onerror();\n            } else {\n                sheet.id = _createStyleSheet();\n                var node = sheet.node = sheetElementsById[sheet.id];\n\n                startTime = new Date().getTime();\n\n                node.onload = function() {\n                    sheet.state = 1;\n                    sheet.state = -1;\n                    var callbacks = sheet.loadedCallbacks,\n                        i = callbacks.length;\n\n                    while (i--) {\n                        callbacks[i]();\n                    }\n                    sheet.loadedCallbacks = [];\n                    sheet.errorCallbacks = [];\n                },\n                node.onerror = function() {\n                    sheet.state = -1;\n                    var callbacks = sheet.errorCallbacks,\n                        i = callbacks.length;\n\n                    while (i--) {\n                        callbacks[i]();\n                    }\n                    sheet.loadedCallbacks = [];\n                    sheet.errorCallbacks = [];\n                };\n\n                node.href = sheet.url = url;\n\n                sheetsByUrl[node.url] = sheet;\n\n            }\n            return sheet.id;\n        },\n\n        deleteSheetRule: function(sheetId, rule) {\n            var sheet = sheetElementsById[sheetId];\n            if (langx.isNumber(rule)) {\n                deleteRuleFunc.call(sheet, rule);\n            } else {\n                langx.each(sheet[rulesPropName], function(i, _rule) {\n                    if (rule === _rule) {\n                        deleteRuleFunc.call(sheet, i);\n                        return false;\n                    }\n                });\n            }\n        },\n\n        deleteRule: function(rule) {\n            this.deleteSheetRule(defaultSheetId, rule);\n            return this;\n        },\n\n        removeStyleSheet: function(sheetId) {\n            if (sheetId === defaultSheetId) {\n                throw new Error(\"The default stylesheet can not be deleted\");\n            }\n            var sheet = sheetElementsById[sheetId];\n            delete sheetElementsById[sheetId];\n\n\n            construct.remove(sheet);\n            return this;\n        },\n\n        findRules: function(selector, sheetId) {\n            //return array of CSSStyleRule objects that match the selector text\n            var rules = [],\n                filters = parseSelector(selector);\n            $(document.styleSheets).each(function(i, styleSheet) {\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\n                    }).map(function() {\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\n                    }));\n                }\n            });\n            return rules.reverse();\n        },\n\n        insertRule: function(selector, css, index) {\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\n        },\n\n        insertSheetRule: function(sheetId, selector, css, index) {\n            if (!selector || !css) {\n                return -1;\n            }\n\n            var sheet = sheetElementsById[sheetId];\n            index = index || sheet[rulesPropName].length;\n\n            return insertRuleFunc.call(sheet, selector, css, index);\n\n        }\n    });\n\n    return skylark.css = css;\n});\n\ndefine('skylark-utils/finder',[\n    \"./skylark\",\n    \"./langx\",\n    \"./browser\",\n    \"./noder\"\n], function(skylark, langx, browser, noder, velm) {\n    var local = {},\n        filter = Array.prototype.filter,\n        slice = Array.prototype.slice,\n        nativeMatchesSelector = browser.matchesSelector;\n\n    /*\n    ---\n    name: Slick.Parser\n    description: Standalone CSS3 Selector parser\n    provides: Slick.Parser\n    ...\n    */\n    ;\n    (function() {\n\n        var parsed,\n            separatorIndex,\n            combinatorIndex,\n            reversed,\n            cache = {},\n            reverseCache = {},\n            reUnescape = /\\\\/g;\n\n        var parse = function(expression, isReversed) {\n            if (expression == null) return null;\n            if (expression.Slick === true) return expression;\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\n            reversed = !!isReversed;\n            var currentCache = (reversed) ? reverseCache : cache;\n            if (currentCache[expression]) return currentCache[expression];\n            parsed = {\n                Slick: true,\n                expressions: [],\n                raw: expression,\n                reverse: function() {\n                    return parse(this.raw, true);\n                }\n            };\n            separatorIndex = -1;\n            while (expression != (expression = expression.replace(regexp, parser)));\n            parsed.length = parsed.expressions.length;\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\n        };\n\n        var reverseCombinator = function(combinator) {\n            if (combinator === '!') return ' ';\n            else if (combinator === ' ') return '!';\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\n            else return '!' + combinator;\n        };\n\n        var reverse = function(expression) {\n            var expressions = expression.expressions;\n            for (var i = 0; i < expressions.length; i++) {\n                var exp = expressions[i];\n                var last = {\n                    parts: [],\n                    tag: '*',\n                    combinator: reverseCombinator(exp[0].combinator)\n                };\n\n                for (var j = 0; j < exp.length; j++) {\n                    var cexp = exp[j];\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\n                    cexp.combinator = cexp.reverseCombinator;\n                    delete cexp.reverseCombinator;\n                }\n\n                exp.reverse().push(last);\n            }\n            return expression;\n        };\n\n        var escapeRegExp = (function() {\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\n                to = '\\\\';\n            return function(string) {\n                return string.replace(from, to)\n            }\n        }())\n\n        var regexp = new RegExp(\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\n        );\n\n        function parser(\n            rawMatch,\n\n            separator,\n            combinator,\n            combinatorChildren,\n\n            tagName,\n            id,\n            className,\n\n            attributeKey,\n            attributeOperator,\n            attributeQuote,\n            attributeValue,\n\n            pseudoMarker,\n            pseudoClass,\n            pseudoQuote,\n            pseudoClassQuotedValue,\n            pseudoClassValue\n        ) {\n            if (separator || separatorIndex === -1) {\n                parsed.expressions[++separatorIndex] = [];\n                combinatorIndex = -1;\n                if (separator) return '';\n            }\n\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\n                combinator = combinator || ' ';\n                var currentSeparator = parsed.expressions[separatorIndex];\n                if (reversed && currentSeparator[combinatorIndex])\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\n                currentSeparator[++combinatorIndex] = {\n                    combinator: combinator,\n                    tag: '*'\n                };\n            }\n\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\n\n            if (tagName) {\n                currentParsed.tag = tagName.replace(reUnescape, '');\n\n            } else if (id) {\n                currentParsed.id = id.replace(reUnescape, '');\n\n            } else if (className) {\n                className = className.replace(reUnescape, '');\n\n                if (!currentParsed.classList) currentParsed.classList = [];\n                if (!currentParsed.classes) currentParsed.classes = [];\n                currentParsed.classList.push(className);\n                currentParsed.classes.push({\n                    value: className,\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\n                });\n\n            } else if (pseudoClass) {\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\n\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\n                currentParsed.pseudos.push({\n                    key: pseudoClass.replace(reUnescape, ''),\n                    value: pseudoClassValue,\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\n                });\n\n            } else if (attributeKey) {\n                attributeKey = attributeKey.replace(reUnescape, '');\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\n\n                var test, regexp;\n\n                switch (attributeOperator) {\n                    case '^=':\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\n                        break;\n                    case '$=':\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\n                        break;\n                    case '~=':\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\n                        break;\n                    case '|=':\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\n                        break;\n                    case '=':\n                        test = function(value) {\n                            return attributeValue == value;\n                        };\n                        break;\n                    case '*=':\n                        test = function(value) {\n                            return value && value.indexOf(attributeValue) > -1;\n                        };\n                        break;\n                    case '!=':\n                        test = function(value) {\n                            return attributeValue != value;\n                        };\n                        break;\n                    default:\n                        test = function(value) {\n                            return !!value;\n                        };\n                }\n\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\n                    return false;\n                };\n\n                if (!test) test = function(value) {\n                    return value && regexp.test(value);\n                };\n\n                if (!currentParsed.attributes) currentParsed.attributes = [];\n                currentParsed.attributes.push({\n                    key: attributeKey,\n                    operator: attributeOperator,\n                    value: attributeValue,\n                    test: test\n                });\n\n            }\n\n            return '';\n        };\n\n        // Slick NS\n\n        var Slick = (this.Slick || {});\n\n        Slick.parse = function(expression) {\n            return parse(expression);\n        };\n\n        Slick.escapeRegExp = escapeRegExp;\n\n        if (!this.Slick) this.Slick = Slick;\n\n    }).apply(local);\n\n\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\n        slice = Array.prototype.slice;\n\n\n    local.parseSelector = local.Slick.parse;\n\n\n    local.pseudos = {\n        // custom pseudos\n        'checkbox': function(elm){\n            return elm.type === \"checkbox\";\n        },\n        'checked': function(elm) {\n            return !!elm.checked;\n        },\n\n        'contains': function(elm, idx, nodes, text) {\n            if ($(this).text().indexOf(text) > -1) return this\n        },\n\n        'disabled': function(elm) {\n            return !!elm.disabled;\n        },\n\n        'enabled': function(elm) {\n            return !elm.disabled;\n        },\n\n        'eq': function(elm, idx, nodes, value) {\n            return (idx == value);\n        },\n\n        'focus': function(elm) {\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\n        },\n\n        'first': function(elm, idx) {\n            return (idx === 0);\n        },\n\n        'gt': function(elm, idx, nodes, value) {\n            return (idx > value);\n        },\n\n        'has': function(elm, idx, nodes, sel) {\n            return matches(elm, sel);\n        },\n\n\n        'hidden': function(elm) {\n            return !local.pseudos[\"visible\"](elm);\n        },\n\n        'last': function(elm, idx, nodes) {\n            return (idx === nodes.length - 1);\n        },\n\n        'lt': function(elm, idx, nodes, value) {\n            return (idx < value);\n        },\n\n        'not': function(elm, idx, nodes, sel) {\n            return !matches(elm, sel);\n        },\n\n        'parent': function(elm) {\n            return !!elm.parentNode;\n        },\n\n        'radio': function(elm){\n            return elm.type === \"radio\";\n        },\n\n        'selected': function(elm) {\n            return !!elm.selected;\n        },\n\n        'text': function(elm){\n            return elm.type === \"text\";\n        },\n\n        'visible': function(elm) {\n            return elm.offsetWidth && elm.offsetWidth\n        }\n    };\n\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\n        local.pseudos[item].isArrayFilter = true;\n    });\n\n    local.divide = function(cond) {\n        var nativeSelector = \"\",\n            customPseudos = [],\n            tag,\n            id,\n            classes,\n            attributes,\n            pseudos;\n\n\n        if (id = cond.id) {\n            nativeSelector += (\"#\" + id);\n        }\n        if (classes = cond.classes) {\n            for (var i = classes.length; i--;) {\n                nativeSelector += (\".\" + classes[i].value);\n            }\n        }\n        if (attributes = cond.attributes) {\n            for (var i = 0; i < attributes.length; i++) {\n                if (attributes[i].operator) {\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\n                } else {\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\n                }\n            }\n        }\n        if (pseudos = cond.pseudos) {\n            for (i = pseudos.length; i--;) {\n                part = pseudos[i];\n                if (this.pseudos[part.key]) {\n                    customPseudos.push(part);\n                } else {\n                    if (part.value !== undefined) {\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\n                    }\n                }\n            }\n        }\n\n        if (tag = cond.tag) {\n            nativeSelector = tag.toUpperCase() + nativeSelector;\n        }\n\n        if (!nativeSelector) {\n            nativeSelector = \"*\";\n        }\n\n        return {\n            nativeSelector: nativeSelector,\n            customPseudos: customPseudos\n        }\n\n    };\n\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\n        var tag,\n            id,\n            classes,\n            attributes,\n            pseudos,\n\n            i, part, cls, pseudo;\n\n        if (!arrayFilte) {\n            if (tag = cond.tag) {\n                var nodeName = node.nodeName.toUpperCase();\n                if (tag == '*') {\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\n                } else {\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\n                }\n            }\n\n            if (id = cond.id) {\n                if (node.getAttribute('id') != id) {\n                    return false;\n                }\n            }\n\n\n            if (classes = cond.classes) {\n                for (i = classes.length; i--;) {\n                    cls = node.getAttribute('class');\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\n                }\n            }\n\n            if (attributes) {\n                for (i = attributes.length; i--;) {\n                    part = attributes[i];\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\n                }\n\n            }\n\n        }\n        if (pseudos = cond.pseudos) {\n            for (i = pseudos.length; i--;) {\n                part = pseudos[i];\n                if (pseudo = this.pseudos[part.key]) {\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\n                        if (!pseudo(node, idx, nodes, part.value)) {\n                            return false;\n                        }\n                    }\n                } else {\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    local.match = function(node, selector) {\n\n        var parsed ;\n\n        if (langx.isString(selector)) {\n            parsed = local.Slick.parse(selector);\n        } else {\n            parsed = selector;            \n        }\n        \n        if (!parsed) {\n            return true;\n        }\n\n        // simple (single) selectors\n        var expressions = parsed.expressions,\n            simpleExpCounter = 0,\n            i,\n            currentExpression;\n        for (i = 0;\n            (currentExpression = expressions[i]); i++) {\n            if (currentExpression.length == 1) {\n                var exp = currentExpression[0];\n                if (this.check(node,exp)) {\n                    return true;\n                }\n                simpleExpCounter++;\n            }\n        }\n\n        if (simpleExpCounter == parsed.length) {\n            return false;\n        }\n\n        var nodes = this.query(document, parsed),\n            item;\n        for (i = 0; item = nodes[i++];) {\n            if (item === node) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n\n    local.filterSingle = function(nodes, exp){\n        var matchs = filter.call(nodes, function(node, idx) {\n            return local.check(node, exp, idx, nodes,false);\n        });    \n\n        matchs = filter.call(matchs, function(node, idx) {\n            return local.check(node, exp, idx, matchs,true);\n        }); \n        return matchs;\n    };\n\n    local.filter = function(nodes, selector) {\n        var parsed;\n\n        if (langx.isString(selector)) {\n            parsed = local.Slick.parse(selector);\n        } else {\n            return local.filterSingle(nodes,selector);           \n        }\n\n        // simple (single) selectors\n        var expressions = parsed.expressions,\n            i,\n            currentExpression,\n            ret = [];\n        for (i = 0;\n            (currentExpression = expressions[i]); i++) {\n            if (currentExpression.length == 1) {\n                var exp = currentExpression[0];\n\n                var matchs = local.filterSingle(nodes,exp);  \n\n                ret = langx.uniq(ret.concat(matchs));\n            } else {\n                throw new Error(\"not supported selector:\" + selector);\n            }\n        }\n\n        return ret;\n \n    };    \n\n    local.combine = function(elm, bit) {\n        var op = bit.combinator,\n            cond = bit,\n            node1,\n            nodes = [];\n\n        switch (op) {\n            case '>': // direct children\n                nodes = children(elm, cond);\n                break;\n            case '+': // next sibling\n                node1 = nextSibling(elm, cond, true);\n                if (node1) {\n                    nodes.push(node1);\n                }\n                break;\n            case '^': // first child\n                node1 = firstChild(elm, cond, true);\n                if (node1) {\n                    nodes.push(node1);\n                }\n                break;\n            case '~': // next siblings\n                nodes = nextSiblings(elm, cond);\n                break;\n            case '++': // next sibling and previous sibling\n                var prev = previousSibling(elm, cond, true),\n                    next = nextSibling(elm, cond, true);\n                if (prev) {\n                    nodes.push(prev);\n                }\n                if (next) {\n                    nodes.push(next);\n                }\n                break;\n            case '~~': // next siblings and previous siblings\n                nodes = siblings(elm, cond);\n                break;\n            case '!': // all parent nodes up to document\n                nodes = ancestors(elm, cond);\n                break;\n            case '!>': // direct parent (one level)\n                node1 = parent(elm, cond);\n                if (node1) {\n                    nodes.push(node1);\n                }\n                break;\n            case '!+': // previous sibling\n                nodes = previousSibling(elm, cond, true);\n                break;\n            case '!^': // last child\n                node1 = lastChild(elm, cond, true);\n                if (node1) {\n                    nodes.push(node1);\n                }\n                break;\n            case '!~': // previous siblings\n                nodes = previousSiblings(elm, cond);\n                break;\n            default:\n                var divided = this.divide(bit);\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\n                if (divided.customPseudos) {\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\n                        nodes = filter.call(nodes, function(item, idx) {\n                            return local.check(item, {\n                                pseudos: [divided.customPseudos[i]]\n                            }, idx, nodes,false)\n                        });\n\n                        nodes = filter.call(nodes, function(item, idx) {\n                            return local.check(item, {\n                                pseudos: [divided.customPseudos[i]]\n                            }, idx, nodes,true)\n                        });                        \n                    }\n                }\n                break;\n\n        }\n        return nodes;\n    }\n\n    local.query = function(node, selector, single) {\n\n\n        var parsed = this.Slick.parse(selector);\n\n        var\n            founds = [],\n            currentExpression, currentBit,\n            expressions = parsed.expressions;\n\n        for (var i = 0;\n            (currentExpression = expressions[i]); i++) {\n            var currentItems = [node],\n                found;\n            for (var j = 0;\n                (currentBit = currentExpression[j]); j++) {\n                found = langx.map(currentItems, function(item, i) {\n                    return local.combine(item, currentBit)\n                });\n                if (found) {\n                    currentItems = found;\n                }\n            }\n            if (found) {\n                founds = founds.concat(found);\n            }\n        }\n\n        return founds;\n    }\n\n\n    function ancestor(node, selector, root) {\n        var rootIsSelector = root && langx.isString(root);\n        while (node = node.parentNode) {\n            if (matches(node, selector)) {\n                return node;\n            }\n            if (root) {\n                if (rootIsSelector) {\n                    if (matches(node,root)) {\n                        break;\n                    }\n                } else if (node == root) {\n                    break;\n                }\n            } \n        }\n        return null;\n    }\n\n    function ancestors(node, selector,root) {\n        var ret = [],\n            rootIsSelector = root && langx.isString(root);\n        while (node = node.parentNode) {\n                ret.push(node);\n            if (root) {\n                if (rootIsSelector) {\n                    if (matches(node,root)) {\n                        break;\n                    }\n                } else if (node == root) {\n                    break;\n                }\n            } \n\n        }\n\n        if (selector) {\n            ret = local.filter(ret,selector);\n        }\n        return ret;\n    }\n\n    function byId(id, doc) {\n        doc = doc || noder.doc();\n        return doc.getElementById(id);\n    }\n\n    function children(node, selector) {\n        var childNodes = node.childNodes,\n            ret = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            var node = childNodes[i];\n            if (node.nodeType == 1) {\n                ret.push(node);\n            }\n        }\n        if (selector) {\n            ret = local.filter(ret,selector);\n        }\n        return ret;\n    }\n\n    function closest(node, selector) {\n        while (node && !(matches(node, selector))) {\n            node = node.parentNode;\n        }\n\n        return node;\n    }\n\n    function descendants(elm, selector) {\n        // Selector\n        try {\n            return slice.call(elm.querySelectorAll(selector));\n        } catch (matchError) {\n            //console.log(matchError);\n        }\n        return local.query(elm, selector);\n    }\n\n    function descendant(elm, selector) {\n        // Selector\n        try {\n            return elm.querySelector(selector);\n        } catch (matchError) {\n            //console.log(matchError);\n        }\n        var nodes = local.query(elm, selector);\n        if (nodes.length > 0) {\n            return nodes[0];\n        } else {\n            return null;\n        }\n    }\n\n    function find(elm,selector) {\n        if (!selector) {\n            selector = elm;\n            elm = document.body;\n        }\n        if (matches(elm,selector)) {\n            return elm;\n        } else {\n            return descendant(elm, selector);\n        }\n    }\n\n    function findAll(elm,selector) {\n        if (!selector) {\n            selector = elm;\n            elm = document.body;\n        }\n        return descendants(elm, selector);\n    }\n\n    function firstChild(elm, selector, first) {\n        var childNodes = elm.childNodes,\n            node = childNodes[0];\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    return node;\n                }\n                if (first) {\n                    break;\n                }\n            }\n            node = node.nextSibling;\n        }\n\n        return null;\n    }\n\n    function lastChild(elm, selector, last) {\n        var childNodes = elm.childNodes,\n            node = childNodes[childNodes.length - 1];\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    return node;\n                }\n                if (last) {\n                    break;\n                }\n            }\n            node = node.previousSibling;\n        }\n\n        return null;\n    }\n\n    function matches(elm, selector) {\n        if (!selector || !elm || elm.nodeType !== 1) {\n            return false\n        }\n\n        if (langx.isString(selector)) {\n            try {\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\n            } catch (matchError) {\n                //console.log(matchError);\n            }\n            return local.match(elm, selector);\n        } else if (langx.isArrayLike(selector)) {\n            return langx.inArray(elm,selector) > -1;\n        } else if (langx.isPlainObject(selector)){    \n            return local.check(elm, selector);\n        } else {\n            return elm === selector;\n        }\n\n    }\n\n    function nextSibling(elm, selector, adjacent) {\n        var node = elm.nextSibling;\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    return node;\n                }\n                if (adjacent) {\n                    break;\n                }\n            }\n            node = node.nextSibling;\n        }\n        return null;\n    }\n\n    function nextSiblings(elm, selector) {\n        var node = elm.nextSibling,\n            ret = [];\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    ret.push(node);\n                }\n            }\n            node = node.nextSibling;\n        }\n        return ret;\n    }\n\n\n    function parent(elm, selector) {\n        var node = elm.parentNode;\n        if (node && (!selector || matches(node, selector))) {\n            return node;\n        }\n\n        return null;\n    }\n\n    function previousSibling(elm, selector, adjacent) {\n        var node = elm.previousSibling;\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    return node;\n                }\n                if (adjacent) {\n                    break;\n                }\n            }\n            node = node.previousSibling;\n        }\n        return null;\n    }\n\n    function previousSiblings(elm, selector) {\n        var node = elm.previousSibling,\n            ret = [];\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    ret.push(node);\n                }\n            }\n            node = node.previousSibling;\n        }\n        return ret;\n    }\n\n    function siblings(elm, selector) {\n        var node = elm.parentNode.firstChild,\n            ret = [];\n        while (node) {\n            if (node.nodeType == 1 && node !== elm) {\n                if (!selector || matches(node, selector)) {\n                    ret.push(node);\n                }\n            }\n            node = node.nextSibling;\n        }\n        return ret;\n    }\n\n    var finder = function() {\n        return finder;\n    };\n\n    langx.mixin(finder, {\n\n        ancestor: ancestor,\n\n        ancestors: ancestors,\n\n        byId: byId,\n\n        children: children,\n\n        closest: closest,\n\n        descendant: descendant,\n\n        descendants: descendants,\n\n        find: find,\n\n        findAll: findAll,\n\n        firstChild: firstChild,\n\n        lastChild: lastChild,\n\n        matches: matches,\n\n        nextSibling: nextSibling,\n\n        nextSiblings: nextSiblings,\n\n        parent: parent,\n\n        previousSibling: previousSibling,\n\n        previousSiblings: previousSiblings,\n\n        pseudos: local.pseudos,\n\n        siblings: siblings\n    });\n\n    return skylark.finder = finder;\n});\n\ndefine('skylark-utils/datax',[\n    \"./skylark\",\n    \"./langx\",\n    \"./finder\"\n], function(skylark, langx, finder) {\n    var map = Array.prototype.map,\n        filter = Array.prototype.filter,\n        camelCase = langx.camelCase,\n        deserializeValue = langx.deserializeValue,\n\n        capitalRE = /([A-Z])/g,\n        propMap = {\n            'tabindex': 'tabIndex',\n            'readonly': 'readOnly',\n            'for': 'htmlFor',\n            'class': 'className',\n            'maxlength': 'maxLength',\n            'cellspacing': 'cellSpacing',\n            'cellpadding': 'cellPadding',\n            'rowspan': 'rowSpan',\n            'colspan': 'colSpan',\n            'usemap': 'useMap',\n            'frameborder': 'frameBorder',\n            'contenteditable': 'contentEditable'\n        };\n\n    function setAttribute(elm, name, value) {\n        if (value == null) {\n            elm.removeAttribute(name);\n        } else {\n            elm.setAttribute(name, value);\n        }\n    }\n\n    function attr(elm, name, value) {\n        if (value === undefined) {\n            if (typeof name === \"object\") {\n                for (var attrName in name) {\n                    attr(elm, attrName, name[attrName]);\n                }\n                return this;\n            } else {\n                if (elm.hasAttribute(name)) {\n                    return elm.getAttribute(name);\n                }\n            }\n        } else {\n            elm.setAttribute(name, value);\n            return this;\n        }\n    }\n\n    // Read all \"data-*\" attributes from a node\n    function _attributeData(elm) {\n        var store = {}\n        langx.each(elm.attributes || [], function(i, attr) {\n            if (attr.name.indexOf('data-') == 0) {\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\n            }\n        })\n        return store;\n    }\n\n    function _store(elm, confirm) {\n        var store = elm[\"_$_store\"];\n        if (!store && confirm) {\n            store = elm[\"_$_store\"] = _attributeData(elm);\n        }\n        return store;\n    }\n\n    function _getData(elm, name) {\n        if (name === undefined) {\n            return _store(elm, true);\n        } else {\n            var store = _store(elm);\n            if (store) {\n                if (name in store) {\n                    return store[name];\n                }\n                var camelName = camelCase(name);\n                if (camelName in store) {\n                    return store[camelName];\n                }\n            }\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\n            return attr(elm, attrName);\n        }\n\n    }\n\n    function _setData(elm, name, value) {\n        var store = _store(elm, true);\n        store[camelCase(name)] = value;\n    }\n\n\n    function data(elm, name, value) {\n\n        if (value === undefined) {\n            if (typeof name === \"object\") {\n                for (var dataAttrName in name) {\n                    _setData(elm, dataAttrName, name[dataAttrName]);\n                }\n                return this;\n            } else {\n                return _getData(elm, name);\n            }\n        } else {\n            _setData(elm, name, value);\n            return this;\n        }\n    }\n\n    function removeData(elm, names) {\n        if (langx.isString(names)) {\n            names = names.split(/\\s+/);\n        }\n        var store = _store(elm, true);\n        names.forEach(function(name) {\n            delete store[name];\n        });\n        return this;\n    }\n\n    function pluck(nodes, property) {\n        return map.call(nodes, function(elm) {\n            return elm[property];\n        });\n    }\n\n    function prop(elm, name, value) {\n        name = propMap[name] || name;\n        if (value === undefined) {\n            return elm[name];\n        } else {\n            elm[name] = value;\n            return this;\n        }\n    }\n\n    function removeAttr(elm, name) {\n        name.split(' ').forEach(function(attr) {\n            setAttribute(elm, attr);\n        });\n        return this;\n    }\n\n    function removeProp(elm, name) {\n        name.split(' ').forEach(function(prop) {\n            delete elm[prop];\n        });\n        return this;\n    }\n\n    function text(elm, txt) {\n        if (txt === undefined) {\n            return elm.textContent;\n        } else {\n            elm.textContent = txt == null ? '' : '' + txt;\n            return this;\n        }\n    }\n\n    function val(elm, value) {\n        if (value === undefined) {\n            if (elm.multiple) {\n                // select multiple values\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\n                    return option.selected;\n                }));\n                return pluck(selectedOptions, \"value\");\n            } else {\n                return elm.value;\n            }\n        } else {\n            elm.value = value;\n            return this;\n        }\n    }\n\n    function datax() {\n        return datax;\n    }\n\n    langx.mixin(datax, {\n        attr: attr,\n\n        data: data,\n\n        pluck: pluck,\n\n        prop: prop,\n\n        removeAttr: removeAttr,\n\n        removeData: removeData,\n\n        removeProp: removeProp,\n\n        text: text,\n\n        val: val\n    });\n\n    return skylark.datax = datax;\n});\n\ndefine('skylark-utils/geom',[\n    \"./skylark\",\n    \"./langx\",\n    \"./styler\"\n], function(skylark, langx, styler) {\n    var rootNodeRE = /^(?:body|html)$/i,\n        px = langx.toPixel;\n\n    function offsetParent(elm) {\n        var parent = elm.offsetParent || document.body;\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\n            parent = parent.offsetParent;\n        }\n        return parent;\n    }\n\n\n    function borderExtents(elm) {\n        var s = getComputedStyle(elm);\n        return {\n            left: px(s.borderLeftWidth , elm),\n            top: px(s.borderTopWidth, elm),\n            right: px(s.borderRightWidth, elm),\n            bottom: px(s.borderBottomWidth, elm)\n        }\n    }\n\n    //viewport coordinate\n    function boundingPosition(elm, coords) {\n        if (coords === undefined) {\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\n        } else {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                parentOffset = boundingPosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            relativePosition(elm, {\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\n                left: coords.left - parentOffset.left - mex.left - pbex.left\n            });\n            return this;\n        }\n    }\n\n    function boundingRect(elm, coords) {\n        if (coords === undefined) {\n            return elm.getBoundingClientRect()\n        } else {\n            boundingPosition(elm, coords);\n            size(elm, coords);\n            return this;\n        }\n    }\n\n    function clientHeight(elm, value) {\n        if (value == undefined) {\n            return clientSize(elm).height;\n        } else {\n            return clientSize(elm, {\n                height: value\n            });\n        }\n    }\n\n    function clientSize(elm, dimension) {\n        if (dimension == undefined) {\n            return {\n                width: elm.clientWidth,\n                height: elm.clientHeight\n            }\n        } else {\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\n                props = {\n                    width: dimension.width,\n                    height: dimension.height\n                };\n            if (!isBorderBox) {\n                var pex = paddingExtents(elm);\n\n                if (props.width !== undefined) {\n                    props.width = props.width - pex.left - pex.right;\n                }\n\n                if (props.height !== undefined) {\n                    props.height = props.height - pex.top - pex.bottom;\n                }\n            } else {\n                var bex = borderExtents(elm);\n\n                if (props.width !== undefined) {\n                    props.width = props.width + bex.left + bex.right;\n                }\n\n                if (props.height !== undefined) {\n                    props.height = props.height + bex.top + bex.bottom;\n                }\n\n            }\n            styler.css(elm, props);\n            return this;\n        }\n        return {\n            width: elm.clientWidth,\n            height: elm.clientHeight\n        };\n    }\n\n    function clientWidth(elm, value) {\n        if (value == undefined) {\n            return clientSize(elm).width;\n        } else {\n            clientSize(elm, {\n                width: value\n            });\n            return this;\n        }\n    }\n\n    function contentRect(elm) {\n        var cs = clientSize(elm),\n            pex = paddingExtents(elm);\n\n\n        //// On Opera, offsetLeft includes the parent's border\n        //if(has(\"opera\")){\n        //    pe.l += be.l;\n        //    pe.t += be.t;\n        //}\n        return {\n            left: pex.left,\n            top: pex.top,\n            width: cs.width - pex.left - pex.right,\n            height: cs.height - pex.top - pex.bottom\n        };\n    }\n\n    function getDocumentSize(doc) {\n        var documentElement = doc.documentElement,\n            body = doc.body,\n            max = Math.max,\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\n\n        return {\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\n        };\n    }\n\n    function height(elm, value) {\n        if (value == undefined) {\n            return size(elm).height;\n        } else {\n            size(elm, {\n                height: value\n            });\n            return this;\n        }\n    }\n\n    function marginExtents(elm) {\n        var s = getComputedStyle(elm);\n        return {\n            left: px(s.marginLeft),\n            top: px(s.marginTop),\n            right: px(s.marginRight),\n            bottom: px(s.marginBottom),\n        }\n    }\n\n\n    function paddingExtents(elm) {\n        var s = getComputedStyle(elm);\n        return {\n            left: px(s.paddingLeft),\n            top: px(s.paddingTop),\n            right: px(s.paddingRight),\n            bottom: px(s.paddingBottom),\n        }\n    }\n\n    //coordinate to the document\n    function pagePosition(elm, coords) {\n        if (coords === undefined) {\n            var obj = elm.getBoundingClientRect()\n            return {\n                left: obj.left + window.pageXOffset,\n                top: obj.top + window.pageYOffset\n            }\n        } else {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                parentOffset = pagePosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            relativePosition(elm, {\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\n                left: coords.left - parentOffset.left - mex.left - pbex.left\n            });\n            return this;\n        }\n    }\n\n    function pageRect(elm, coords) {\n        if (coords === undefined) {\n            var obj = elm.getBoundingClientRect()\n            return {\n                left: obj.left + window.pageXOffset,\n                top: obj.top + window.pageYOffset,\n                width: Math.round(obj.width),\n                height: Math.round(obj.height)\n            }\n        } else {\n            pagePosition(elm, coords);\n            size(elm, coords);\n            return this;\n        }\n    }\n\n    // coordinate relative to it's parent\n    function relativePosition(elm, coords) {\n        if (coords == undefined) {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                offset = boundingPosition(elm),\n                parentOffset = boundingPosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\n                left: offset.left - parentOffset.left - pbex.left - mex.left\n            }\n        } else {\n            var props = {\n                top: coords.top,\n                left: coords.left\n            }\n\n            if (styler.css(elm, \"position\") == \"static\") {\n                props['position'] = \"relative\";\n            }\n            styler.css(elm, props);\n            return this;\n        }\n    }\n\n    function relativeRect(elm, coords) {\n        if (coords === undefined) {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                offset = boundingRect(elm),\n                parentOffset = boundingPosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\n                width: offset.width,\n                height: offset.height\n            }\n        } else {\n            relativePosition(elm, coords);\n            size(elm, coords);\n            return this;\n        }\n    }\n\n    function scrollIntoView(elm, align) {\n        function getOffset(elm, rootElm) {\n            var x, y, parent = elm;\n\n            x = y = 0;\n            while (parent && parent != rootElm && parent.nodeType) {\n                x += parent.offsetLeft || 0;\n                y += parent.offsetTop || 0;\n                parent = parent.offsetParent;\n            }\n\n            return { x: x, y: y };\n        }\n\n        var parentElm = elm.parentNode;\n        var x, y, width, height, parentWidth, parentHeight;\n        var pos = getOffset(elm, parentElm);\n\n        x = pos.x;\n        y = pos.y;\n        width = elm.offsetWidth;\n        height = elm.offsetHeight;\n        parentWidth = parentElm.clientWidth;\n        parentHeight = parentElm.clientHeight;\n\n        if (align == \"end\") {\n            x -= parentWidth - width;\n            y -= parentHeight - height;\n        } else if (align == \"center\") {\n            x -= (parentWidth / 2) - (width / 2);\n            y -= (parentHeight / 2) - (height / 2);\n        }\n\n        parentElm.scrollLeft = x;\n        parentElm.scrollTop = y;\n\n        return this;\n    }\n\n    function scrollLeft(elm, value) {\n        var hasScrollLeft = \"scrollLeft\" in elm;\n        if (value === undefined) {\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\n        } else {\n            if (hasScrollLeft) {\n                elm.scrollLeft = value;\n            } else {\n                elm.scrollTo(value, elm.scrollY);\n            }\n            return this;\n        }\n    }\n\n    function scrollTop(elm, value) {\n        var hasScrollTop = \"scrollTop\" in elm;\n\n        if (value === undefined) {\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\n        } else {\n            if (hasScrollTop) {\n                elm.scrollTop = value;\n            } else {\n                elm.scrollTo(elm.scrollX, value);\n            }\n            return this;\n        }\n    }\n\n    function size(elm, dimension) {\n        if (dimension == undefined) {\n            if (langx.isWindow(elm)) {\n                return {\n                    width: elm.innerWidth,\n                    height: elm.innerHeight\n                }\n\n            } else if (langx.isDocument(elm)) {\n                return getDocumentSize(document);\n            } else {\n                return {\n                    width: elm.offsetWidth,\n                    height: elm.offsetHeight\n                }\n            }\n        } else {\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\n                props = {\n                    width: dimension.width,\n                    height: dimension.height\n                };\n            if (!isBorderBox) {\n                var pex = paddingExtents(elm),\n                    bex = borderExtents(elm);\n\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\n                }\n\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\n                }\n            }\n            styler.css(elm, props);\n            return this;\n        }\n    }\n\n    function width(elm, value) {\n        if (value == undefined) {\n            return size(elm).width;\n        } else {\n            size(elm, {\n                width: value\n            });\n            return this;\n        }\n    }\n\n    function geom() {\n        return geom;\n    }\n\n    langx.mixin(geom, {\n        borderExtents: borderExtents,\n        //viewport coordinate\n        boundingPosition: boundingPosition,\n\n        boundingRect: boundingRect,\n\n        clientHeight: clientHeight,\n\n        clientSize: clientSize,\n\n        clientWidth: clientWidth,\n\n        contentRect: contentRect,\n\n        getDocumentSize: getDocumentSize,\n\n        height: height,\n\n        marginExtents: marginExtents,\n\n        offsetParent: offsetParent,\n\n        paddingExtents: paddingExtents,\n\n        //coordinate to the document\n        pagePosition: pagePosition,\n\n        pageRect: pageRect,\n\n        // coordinate relative to it's parent\n        relativePosition: relativePosition,\n\n        relativeRect: relativeRect,\n\n        scrollIntoView: scrollIntoView,\n\n        scrollLeft: scrollLeft,\n\n        scrollTop: scrollTop,\n\n        size: size,\n\n        width: width\n    });\n\n    return skylark.geom = geom;\n});\n\ndefine('skylark-utils/eventer',[\n    \"./skylark\",\n    \"./langx\",\n    \"./browser\",\n    \"./finder\",\n    \"./noder\",\n    \"./datax\"\n], function(skylark, langx, browser, finder, noder, datax) {\n    var mixin = langx.mixin,\n        each = langx.each,\n        slice = Array.prototype.slice,\n        uid = langx.uid,\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\n        eventMethods = {\n            preventDefault: \"isDefaultPrevented\",\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\n            stopPropagation: \"isPropagationStopped\"\n        },\n        readyRE = /complete|loaded|interactive/;\n\n    function compatible(event, source) {\n        if (source || !event.isDefaultPrevented) {\n            if (!source) {\n                source = event;\n            }\n\n            langx.each(eventMethods, function(name, predicate) {\n                var sourceMethod = source[name];\n                event[name] = function() {\n                    this[predicate] = langx.returnTrue;\n                    return sourceMethod && sourceMethod.apply(source, arguments);\n                }\n                event[predicate] = langx.returnFalse;\n            });\n        }\n        return event;\n    }\n\n    function parse(event) {\n        var segs = (\"\" + event).split(\".\");\n        return {\n            type: segs[0],\n            ns: segs.slice(1).sort().join(\" \")\n        };\n    }\n\n    //create a custom dom event\n    var createEvent = (function() {\n        var EventCtors = [\n                window[\"CustomEvent\"], // 0 default\n                window[\"CompositionEvent\"], // 1\n                window[\"DragEvent\"], // 2\n                window[\"Event\"], // 3\n                window[\"FocusEvent\"], // 4\n                window[\"KeyboardEvent\"], // 5\n                window[\"MessageEvent\"], // 6\n                window[\"MouseEvent\"], // 7\n                window[\"MouseScrollEvent\"], // 8\n                window[\"MouseWheelEvent\"], // 9\n                window[\"MutationEvent\"], // 10\n                window[\"ProgressEvent\"], // 11\n                window[\"TextEvent\"], // 12\n                window[\"TouchEvent\"], // 13\n                window[\"UIEvent\"], // 14\n                window[\"WheelEvent\"] // 15\n            ],\n            NativeEvents = {\n                \"compositionstart\": 1, // CompositionEvent\n                \"compositionend\": 1, // CompositionEvent\n                \"compositionupdate\": 1, // CompositionEvent\n\n                \"beforecopy\": 2, // DragEvent\n                \"beforecut\": 2, // DragEvent\n                \"beforepaste\": 2, // DragEvent\n                \"copy\": 2, // DragEvent\n                \"cut\": 2, // DragEvent\n                \"paste\": 2, // DragEvent\n\n                \"drag\": 2, // DragEvent\n                \"dragend\": 2, // DragEvent\n                \"dragenter\": 2, // DragEvent\n                \"dragexit\": 2, // DragEvent\n                \"dragleave\": 2, // DragEvent\n                \"dragover\": 2, // DragEvent\n                \"dragstart\": 2, // DragEvent\n                \"drop\": 2, // DragEvent\n\n                \"abort\": 3, // Event\n                \"change\": 3, // Event\n                \"error\": 3, // Event\n                \"selectionchange\": 3, // Event\n                \"submit\": 3, // Event\n                \"reset\": 3, // Event\n\n                \"focus\": 4, // FocusEvent\n                \"blur\": 4, // FocusEvent\n                \"focusin\": 4, // FocusEvent\n                \"focusout\": 4, // FocusEvent\n\n                \"keydown\": 5, // KeyboardEvent\n                \"keypress\": 5, // KeyboardEvent\n                \"keyup\": 5, // KeyboardEvent\n\n                \"message\": 6, // MessageEvent\n\n                \"click\": 7, // MouseEvent\n                \"contextmenu\": 7, // MouseEvent\n                \"dblclick\": 7, // MouseEvent\n                \"mousedown\": 7, // MouseEvent\n                \"mouseup\": 7, // MouseEvent\n                \"mousemove\": 7, // MouseEvent\n                \"mouseover\": 7, // MouseEvent\n                \"mouseout\": 7, // MouseEvent\n                \"mouseenter\": 7, // MouseEvent\n                \"mouseleave\": 7, // MouseEvent\n\n\n                \"textInput\": 12, // TextEvent\n\n                \"touchstart\": 13, // TouchEvent\n                \"touchmove\": 13, // TouchEvent\n                \"touchend\": 13, // TouchEvent\n\n                \"load\": 14, // UIEvent\n                \"resize\": 14, // UIEvent\n                \"select\": 14, // UIEvent\n                \"scroll\": 14, // UIEvent\n                \"unload\": 14, // UIEvent,\n\n                \"wheel\": 15 // WheelEvent\n            }\n        ;\n\n        function getEventCtor(type) {\n            var idx = NativeEvents[type];\n            if (!idx) {\n                idx = 0;\n            }\n            return EventCtors[idx];\n        }\n\n        return function(type, props) {\n            //create a custom dom event\n\n            if (langx.isString(type)) {\n                props = props || {};\n            } else {\n                props = type;\n                type = props.type;\n            }\n            var parsed = parse(type);\n            type = parsed.type;\n\n            props = langx.mixin({\n                bubbles: true,\n                cancelable: true\n            }, props);\n\n            if (parsed.ns) {\n                props.namespace = parsed.ns;\n            }\n\n            var ctor = getEventCtor(type),\n                e = new ctor(type, props);\n\n            langx.safeMixin(e, props);\n\n            return compatible(e);\n        };\n    })();\n\n    function createProxy(event) {\n        var key,\n            proxy = {\n                originalEvent: event\n            };\n        for (key in event) {\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\n                proxy[key] = event[key];\n            }\n        }\n        return compatible(proxy, event);\n    }\n\n    var\n        specialEvents = {},\n        focusinSupported = \"onfocusin\" in window,\n        focus = { focus: \"focusin\", blur: \"focusout\" },\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\n        realEvent = function(type) {\n            return hover[type] || (focusinSupported && focus[type]) || type;\n        },\n        handlers = {},\n        EventBindings = langx.klass({\n            init: function(target, event) {\n                this._target = target;\n                this._event = event;\n                this._bindings = [];\n            },\n\n            add: function(fn, options) {\n                var bindings = this._bindings,\n                    binding = {\n                        fn: fn,\n                        options: langx.mixin({}, options)\n                    };\n\n                bindings.push(binding);\n\n                var self = this;\n                if (!self._listener) {\n                    self._listener = function(domEvt) {\n                        var elm = this,\n                            e = createProxy(domEvt),\n                            args = domEvt._args,\n                            bindings = self._bindings,\n                            ns = e.namespace;\n\n                        if (langx.isDefined(args)) {\n                            args = [e].concat(args);\n                        } else {\n                            args = [e];\n                        }\n\n                        langx.each(bindings,function(idx,binding) {\n                            var match = elm;\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\n                                return false;\n                            }\n                            var fn = binding.fn,\n                                options = binding.options || {},\n                                selector = options.selector,\n                                one = options.one,\n                                data = options.data;\n\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\n                                return ;\n                            }\n                            if (selector) {\n                                match = finder.closest(e.target, selector);\n                                if (match && match !== elm) {\n                                    langx.mixin(e, {\n                                        currentTarget: match,\n                                        liveFired: elm\n                                    });\n                                } else {\n                                    return ;\n                                }\n                            }\n\n                            if (langx.isDefined(data)) {\n                                e.data = data;\n                            }\n\n                            if (one) {\n                                self.remove(fn, options);\n                            }\n\n                            var result = fn.apply(match, args);\n\n                            if (result === false) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                            }\n                        });;\n                    };\n\n                    var event = self._event;\n                    if (event in hover) {\n                        var l = self._listener;\n                        self._listener = function(e) {\n                            var related = e.relatedTarget;\n                            if (!related || (related !== this && !noder.contains(this, related))) {\n                                return l.apply(this, arguments);\n                            }\n                        }\n                    }\n\n                    if (self._target.addEventListener) {\n                        self._target.addEventListener(realEvent(event), self._listener, false);\n                    } else {\n                        console.warn(\"invalid eventer object\", self._target);\n                    }\n                }\n\n            },\n            remove: function(fn, options) {\n                options = langx.mixin({}, options);\n\n                function matcherFor(ns) {\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\n                }\n                var matcher;\n                if (options.ns) {\n                    matcher = matcherFor(options.ns);\n                }\n\n                this._bindings = this._bindings.filter(function(binding) {\n                    var removing = (!fn || fn === binding.fn) &&\n                        (!matcher || matcher.test(binding.options.ns)) &&\n                        (!options.selector || options.selector == binding.options.selector);\n\n                    return !removing;\n                });\n                if (this._bindings.length == 0) {\n                    if (this._target.removeEventListener) {\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\n                    }\n                    this._listener = null;\n                }\n            }\n        }),\n        EventsHandler = langx.klass({\n            init: function(elm) {\n                this._target = elm;\n                this._handler = {};\n            },\n\n            // add a event listener\n            // selector Optional\n            register: function(event, callback, options) {\n                // Seperate the event from the namespace\n                var parsed = parse(event),\n                    event = parsed.type,\n                    specialEvent = specialEvents[event],\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\n\n                var events = this._handler;\n\n                // Check if there is already a handler for this event\n                if (events[event] === undefined) {\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\n                }\n\n                // Register the new callback function\n                events[event].add(callback, langx.mixin({\n                    ns: parsed.ns\n                }, options)); // options:{selector:xxx}\n            },\n\n            // remove a event listener\n            unregister: function(event, fn, options) {\n                // Check for parameter validtiy\n                var events = this._handler,\n                    parsed = parse(event);\n                event = parsed.type;\n\n                var listener = events[event];\n\n                if (listener) {\n                    listener.remove(fn, langx.mixin({\n                        ns: parsed.ns\n                    }, options));\n                }\n            }\n        }),\n\n        findHandler = function(elm) {\n            var id = uid(elm),\n                handler = handlers[id];\n            if (!handler) {\n                handler = handlers[id] = new EventsHandler(elm);\n            }\n            return handler;\n        };\n\n    function off(elm, events, selector, callback) {\n        var $this = this\n        if (langx.isPlainObject(events)) {\n            langx.each(events, function(type, fn) {\n                off(elm, type, selector, fn);\n            })\n            return $this;\n        }\n\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\n            callback = selector;\n            selector = undefined;\n        }\n\n        if (callback === false) {\n            callback = langx.returnFalse;\n        }\n\n        if (typeof events == \"string\") {\n            if (events.indexOf(\",\") > -1) {\n                events = events.split(\",\");\n            } else {\n                events = events.split(/\\s/);\n            }\n        }\n\n        var handler = findHandler(elm);\n\n        if (events) events.forEach(function(event) {\n\n            handler.unregister(event, callback, {\n                selector: selector,\n            });\n        });\n        return this;\n    }\n\n    function on(elm, events, selector, data, callback, one) {\n\n        var autoRemove, delegator;\n        if (langx.isPlainObject(events)) {\n            langx.each(events, function(type, fn) {\n                on(elm, type, selector, data, fn, one);\n            });\n            return this;\n        }\n\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\n            callback = data;\n            data = selector;\n            selector = undefined;\n        }\n\n        if (langx.isFunction(data)) {\n            callback = data;\n            data = undefined;\n        }\n\n        if (callback === false) {\n            callback = langx.returnFalse;\n        }\n\n        if (typeof events == \"string\") {\n            if (events.indexOf(\",\") > -1) {\n                events = events.split(\",\");\n            } else {\n                events = events.split(/\\s/);\n            }\n        }\n\n        var handler = findHandler(elm);\n\n        events.forEach(function(event) {\n            if (event == \"ready\") {\n                return ready(callback);\n            }\n            handler.register(event, callback, {\n                data: data,\n                selector: selector,\n                one: !!one\n            });\n        });\n        return this;\n    }\n\n    function one(elm, events, selector, data, callback) {\n        on(elm, events, selector, data, callback, 1);\n\n        return this;\n    }\n\n    function stop(event) {\n        if (window.document.all) {\n            event.keyCode = 0;\n        }\n        if (event.preventDefault) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    function trigger(evented, type, args) {\n        var e;\n        if (type instanceof Event) {\n            e = type;\n        } else {\n            e = createEvent(type, args);\n        }\n        e._args = args;\n\n        var fn = (evented.dispatchEvent || evented.trigger);\n        if (fn) {\n            fn.call(evented, e);\n        } else {\n            console.warn(\"The evented parameter is not a eventable object\");\n        }\n\n        return this;\n    }\n\n    function ready(callback) {\n        // need to check if document.body exists for IE as that browser reports\n        // document ready when it hasn't yet created the body elm\n        if (readyRE.test(document.readyState) && document.body) {\n            callback()\n        } else {\n            document.addEventListener('DOMContentLoaded', callback, false);\n        }\n\n        return this;\n    }\n\n    var keyCodeLookup = {\n        \"delete\": 46\n    };\n    //example:\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\n    function shortcuts(elm) {\n\n        var registry = datax.data(elm, \"shortcuts\");\n        if (!registry) {\n            registry = {};\n            datax.data(elm, \"shortcuts\", registry);\n            var run = function(shortcut, event) {\n                var n = event.metaKey || event.ctrlKey;\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\n                        event.preventDefault();\n                        if (\"keydown\" == event.type) {\n                            shortcut.fn(event);\n                        }\n                        return true;\n                    }\n                }\n            };\n            on(elm, \"keyup keypress keydown\", function(event) {\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\n                    for (var key in registry) {\n                        run(registry[key], event);\n                    }\n                }\n            });\n\n        }\n\n        return {\n            add: function(pattern, fn) {\n                var shortcutKeys;\n                if (pattern.indexOf(\",\") > -1) {\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\n                } else {\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\n                }\n                shortcutKeys.forEach(function(shortcutKey) {\n                    var setting = {\n                        fn: fn,\n                        alt: false,\n                        ctrl: false,\n                        shift: false\n                    };\n                    shortcutKey.split(\"+\").forEach(function(key) {\n                        switch (key) {\n                            case \"alt\":\n                            case \"ctrl\":\n                            case \"shift\":\n                                setting[key] = true;\n                                break;\n                            default:\n                                setting.charCode = key.charCodeAt(0);\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\n                        }\n                    });\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\n                    registry[regKey] = setting;\n                })\n            }\n\n        };\n\n    }\n\n    function eventer() {\n        return eventer;\n    }\n\n    langx.mixin(eventer, {\n        create: createEvent,\n\n        off: off,\n\n        on: on,\n\n        one: one,\n\n        proxy: createProxy,\n\n        ready: ready,\n\n        shortcuts: shortcuts,\n\n        special : specialEvents,\n\n        stop: stop,\n\n        trigger: trigger\n\n    });\n\n    return skylark.eventer = eventer;\n});\n\ndefine('skylark-utils/dnd',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./datax\",\n    \"./finder\",\n    \"./geom\",\n    \"./eventer\",\n    \"./styler\"\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\n    var on = eventer.on,\n        off = eventer.off,\n        attr = datax.attr,\n        removeAttr = datax.removeAttr,\n        offset = geom.pagePosition,\n        addClass = styler.addClass,\n        height = geom.height;\n\n\n    var DndManager = langx.Evented.inherit({\n      klassName : \"DndManager\",\n\n      init : function() {\n\n      },\n\n      prepare : function(draggable) {\n          var e = eventer.create(\"preparing\",{\n             dragSource : draggable.elm,\n             handleElm : draggable.handleElm\n          });\n          draggable.trigger(e);\n          draggable.dragSource = e.dragSource;\n      },\n\n      start : function(draggable,event) {\n\n        var p = geom.pagePosition(draggable.elm);\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\n\n        var e = eventer.create(\"started\",{\n          elm : draggable.elm,\n          dragSource : draggable.dragSource,\n          handleElm : draggable.handleElm,\n          ghost : null,\n\n          transfer : {\n          }\n        });\n\n        draggable.trigger(e);\n\n\n        this.dragging = draggable;\n\n        if (draggable.draggingClass) {\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\n        }\n\n        this.draggingGhost = e.ghost;\n        if (!this.draggingGhost) {\n          this.draggingGhost = draggable.elm;\n        }\n\n        this.draggingTransfer = e.transfer;\n        if (this.draggingTransfer) {\n\n            langx.each(this.draggingTransfer,function(key,value){\n                event.dataTransfer.setData(key, value);\n            });\n        }\n\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\n\n        event.dataTransfer.effectAllowed = \"copyMove\";\n\n        this.trigger(e);\n      },\n\n      over : function() {\n\n      },\n\n      end : function(dropped) {\n        var dragging = this.dragging;\n        if (dragging) {\n          if (dragging.draggingClass) {\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\n          }\n        }\n\n        var e = eventer.create(\"ended\",{\n        });        \n        this.trigger(e);\n\n\n        this.dragging = null;\n        this.draggingTransfer = null;\n        this.draggingGhost = null;\n        this.draggingOffsetX = null;\n        this.draggingOffsetY = null;\n      }\n    });\n\n    var manager = new DndManager(),\n        draggingHeight,\n        placeholders = [];\n\n\n\n    var Draggable = langx.Evented.inherit({\n      klassName : \"Draggable\",\n\n      init : function (elm,params) {\n        var self = this;\n\n        self.elm = elm;\n        self.draggingClass = params.draggingClass || \"dragging\",\n        self._params = params;\n\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\n            if (langx.isFunction(params[eventName])) {\n                self.on(eventName, params[eventName]);\n            }\n        });\n\n\n        eventer.on(elm,{\n          \"mousedown\" : function(e) {\n            if (params.handle) {\n              self.handleElm = finder.closest(e.target,params.handle);\n              if (!self.handleElm) {\n                return;\n              }\n            }\n            manager.prepare(self);\n            if (self.dragSource) {\n              datax.prop(self.dragSource, \"draggable\", true);\n            }\n          },\n\n          \"mouseup\" :   function(e) {\n            if (self.dragSource) {\n              datax.prop(self.dragSource, \"draggable\", false);\n              self.dragSource = null;\n              self.handleElm = null;\n            }\n          },\n\n          \"dragstart\":  function(e) {\n            datax.prop(self.dragSource, \"draggable\", false);\n            manager.start(self, e);\n          },\n\n          \"dragend\":   function(e){\n            eventer.stop(e);\n\n            if (!manager.dragging) {\n              return;\n            }\n\n            manager.end(false);\n          }\n        });\n\n      }\n\n    });\n\n\n    var Droppable = langx.Evented.inherit({\n      klassName : \"Droppable\",\n\n      init : function(elm,params) {\n        var self = this,\n            draggingClass = params.draggingClass || \"dragging\",\n            hoverClass,\n            activeClass,\n            acceptable = true;\n\n        self.elm = elm;\n        self._params = params;\n\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\n            if (langx.isFunction(params[eventName])) {\n                self.on(eventName, params[eventName]);\n            }\n        });\n\n        eventer.on(elm,{\n          \"dragover\" : function(e) {\n            e.stopPropagation()\n\n            if (!acceptable) {\n              return\n            }\n\n            var e2 = eventer.create(\"overing\",{\n                overElm : e.target,\n                transfer : manager.draggingTransfer,\n                acceptable : true\n            });\n            self.trigger(e2);\n\n            if (e2.acceptable) {\n              e.preventDefault() // allow drop\n\n              e.dataTransfer.dropEffect = \"copyMove\";\n            }\n\n          },\n\n          \"dragenter\" :   function(e) {\n            var params = self._params,\n                elm = self.elm;\n\n            var e2 = eventer.create(\"entered\",{\n                transfer : manager.draggingTransfer\n            });\n\n            self.trigger(e2);\n\n            e.stopPropagation()\n\n            if (hoverClass && acceptable) {\n              styler.addClass(elm,hoverClass)\n            }\n          },\n\n          \"dragleave\":  function(e) {\n            var params = self._params,\n                elm = self.elm;\n            if (!acceptable) return false\n            \n            var e2 = eventer.create(\"leaved\",{\n                transfer : manager.draggingTransfer\n            });\n            \n            self.trigger(e2);\n\n            e.stopPropagation()\n\n            if (hoverClass && acceptable) {\n              styler.removeClass(elm,hoverClass);\n            }\n          },\n\n          \"drop\":   function(e){\n            var params = self._params,\n                elm = self.elm;\n\n            eventer.stop(e); // stops the browser from redirecting.\n\n            if (!manager.dragging) return\n\n           // manager.dragging.elm.removeClass('dragging');\n\n            if (hoverClass && acceptable) {\n              styler.addClass(elm,hoverClass)\n            }\n\n            var e2 = eventer.create(\"dropped\",{\n                transfer : manager.draggingTransfer\n            });\n\n            self.trigger(e2);\n\n            manager.end(true)\n          }\n        });\n\n        manager.on(\"started\",function(e){\n            var e2 = eventer.create(\"started\",{\n                transfer : manager.draggingTransfer,\n                acceptable : false\n            });\n\n            self.trigger(e2);\n\n            acceptable = e2.acceptable;\n            hoverClass = e2.hoverClass;\n            activeClass = e2.activeClass;\n\n            if (activeClass && acceptable) {\n              styler.addClass(elm,activeClass);\n            }\n\n         }).on(\"ended\" , function(e){\n            var e2 = eventer.create(\"ended\",{\n                transfer : manager.draggingTransfer,\n                acceptable : false\n            });\n\n            self.trigger(e2);\n\n            if (hoverClass && acceptable) {\n              styler.removeClass(elm,hoverClass);\n            }\n            if (activeClass && acceptable) {\n              styler.removeClass(elm,activeClass);\n            }\n\n            acceptable = false;\n            activeClass = null;\n            hoverClass = null;\n        });\n\n      }\n    });\n\n\n    function draggable(elm, params) {\n      return new Draggable(elm,params);\n    }\n\n    function droppable(elm, params) {\n      return new Droppable(elm,params);\n    }\n\n    function dnd(){\n      return dnd;\n    }\n\n    langx.mixin(dnd, {\n       //params ： {\n        //  target : Element or string or function\n        //  handle : Element\n        //  copy : boolean\n        //  placeHolder : \"div\"\n        //  hoverClass : \"hover\"\n        //  start : function\n        //  enter : function\n        //  over : function\n        //  leave : function\n        //  drop : function\n        //  end : function\n        //\n        //\n        //}\n        draggable   : draggable,\n\n        //params ： {\n        //  accept : string or function\n        //  placeHolder\n        //\n        //\n        //\n        //}\n        droppable : droppable,\n\n        manager : manager\n\n\n    });\n\n    return skylark.dnd = dnd;\n});\n\ndefine('skylark-utils/_devices/usermedia',[\n    \"../langx\"\n], function(langx) {\n    navigator.getUserMedia = navigator.getUserMedia\n                        || navigator.webkitGetUserMedia\n                        || navigator.mozGetUserMedia\n                        || navigator.msGetUserMedia;\n   \n    var Deferred = langx.Deferred,\n        localStream  = null;\n\n    function usermedia() {\n        return usermedia;\n    }\n\n    langx.mixin(usermedia, {\n        isSupported : function() {\n            return !!navigator.getUserMedia;\n        },\n\n        start : function(video,audio) {\n\n            var d = new Deferred();\n            navigator.getUserMedia (\n                {video: true,audio: true},\n                // successCallback\n                function(stream) {\n                    localStream = stream;\n                    video.src = window.URL.createObjectURL(localMediaStream);\n                    video.onloadedmetadata = function(e) {\n                         // Do something with the video here.\n                    };\n                    d.resolve();\n                },\n\n                // errorCallback\n                function(err) {\n                  d.reject(err);\n                }\n            );\n\n            return d.promise;\n        },\n\n        stop : function() {\n            if (localStream) {\n                localStream.stop();\n                localStream = null; \n            }\n        }\n    });\n\n\n    return  usermedia;\n});\n\ndefine('skylark-utils/_devices/vibrate',[\n    \"../langx\"\n], function(langx) {\n    navigator.vibrate = navigator.vibrate\n                        || navigator.webkitVibrate\n                        || navigator.mozVibrate\n                        || navigator.msVibrate;\n    \n\n    function vibrate() {\n        return vibrate;\n    }\n\n    langx.mixin(vibrate, {\n        isSupported : function() {\n            return !!navigator.vibrate;\n        },\n\n        start : function(duration) {\n            navigator.vibrate(duration);\n        },\n\n        stop : function() {\n            navigator.vibrate(0);\n        }\n    });\n\n\n    return  vibrate;\n});\n\ndefine('skylark-utils/devices',[\n    \"./skylark\",\n    \"./langx\",\n    \"./_devices/usermedia\",\n    \"./_devices/vibrate\"\n], function(skylark,langx,usermedia,vibrate) {\n\n    function devices() {\n        return devices;\n    }\n\n    langx.mixin(devices, {\n        usermedia: usermedia,\n        vibrate : vibrate\n    });\n\n\n    return skylark.devices = devices;\n});\n\ndefine('skylark-utils/filer',[\n    \"./skylark\",\n    \"./langx\",\n    \"./eventer\",\n    \"./styler\"\n], function(skylark, langx, eventer,styler) {\n    var on = eventer.on,\n        attr = eventer.attr,\n        Deferred = langx.Deferred,\n\n        fileInput,\n        fileInputForm,\n        fileSelected,\n        maxFileSize = 1 / 0;\n\n    function dataURLtoBlob(dataurl) {\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n        while(n--){\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n        return new Blob([u8arr], {type:mime});\n    }\n\n    function selectFile(callback) {\n        fileSelected = callback;\n        if (!fileInput) {\n            var input = fileInput = document.createElement(\"input\");\n\n            function selectFiles(pickedFiles) {\n                for (var i = pickedFiles.length; i--;) {\n                    if (pickedFiles[i].size > maxFileSize) {\n                        pickedFiles.splice(i, 1);\n                    }\n                }\n                fileSelected(pickedFiles);\n            }\n\n            input.type = \"file\";\n            input.style.position = \"fixed\",\n                input.style.left = 0,\n                input.style.top = 0,\n                input.style.opacity = .001,\n                document.body.appendChild(input);\n\n            input.onchange = function(e) {\n                selectFiles(Array.prototype.slice.call(e.target.files));\n                // reset to \"\", so selecting the same file next time still trigger the change handler\n                input.value = \"\";\n            };\n        }\n        fileInput.click();\n    }\n\n    function upload(files, url, params) {\n        params = params || {};\n        var chunkSize = params.chunkSize || 0,\n            maxSize = params.maxSize || 0,\n            progressCallback = params.progress,\n            errorCallback = params.error,\n            completedCallback = params.completed,\n            uploadedCallback = params.uploaded;\n\n\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\n            function handleProcess(nowLoadedSize) {\n                var t;\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \n                if (progressCallback) {\n                    progressCallback({\n                        name: file.name,\n                        loaded: oneFileloadedSize + nowLoadedSize,\n                        total: file.size,\n                        percent: percent,\n                        bytesPerSecond: speed,\n                        global: {\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\n                            total: totalSize\n                        }\n                    });\n                }\n            }\n            var file = fileItem.file,\n                uploadChunkSize = chunkSize || file.size,\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\n\n            xhr = createXmlHttpRequest();\n            //xhr.open(\"POST\", url + \n            //                \"?action=upload&path=\" + \n            //                encodeURIComponent(path) + \n            //                \"&name=\" + encodeURIComponent(file.name) + \n            //                \"&loaded=\" + oneFileloadedSize + \n            //                \"&total=\" + file.size + \n            //                \"&id=\" + id + \n            //                \"&csrf=\" + encodeURIComponent(token) + \n            //                \"&resolution=\" + \n            //                encodeURIComponent(fileItem.type));\n            xhr.upload.onprogress = function(event) {\n                handleProcess(event.loaded - (event.total - h.size))\n            };\n            xhr.onload = function() {\n                var response, i;\n                xhr.upload.onprogress({\n                    loaded: h.size,\n                    total: h.size\n                });\n                try {\n                    response = JSON.parse(xhr.responseText);\n                } catch (e) {\n                    i = {\n                        code: -1,\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\n                        data: {\n                            fileName: file.name,\n                            fileSize: file.size,\n                            maxSize: uploadMaxSize,\n                            extensions: extensions.join(\", \")\n                        },\n                        extra: extra\n                    };\n                    errorFileInfos.push(i);\n                    if (errorCallback) {\n                        errorCallback(i);\n                    }\n                    return uploadFiles(fileItems)\n                }\n                if (response.error) {\n\n                    i = {\n                        code: response.error.code,\n                        message: response.error.message,\n                        data: {\n                            fileName: file.name,\n                            fileSize: file.size,\n                            maxSize: uploadMaxSize,\n                            extensions: extensions.join(\", \")\n                        },\n                        extra: extra\n                    }; \n                    errorFileInfos.push(i); \n                    if (errorCallback) {\n                        errorCallback(i);\n                    }\n                    uploadFiles(fileItems);\n                } else {\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\n                    } else {\n                        if (response.result) {\n                            utils.each(response.result, function(e) {\n                                e = File.fromJSON(e);\n                                uploadFileItems.push(e);\n\n                                if (uploadedCallback) {\n                                    uploadedCallback({\n                                        file: e\n                                    });\n                                }\n                            }); \n\n                        } \n                        allLoadedSize += file.size;\n                        response.result && k.push(response.result);\n                        uploadFiles(fileItems);\n                    }                            \n                }     \n\n            };\n            handleProcess(0);\n            xhr.send(createFormData(h));\n        }\n\n        function uploadFiles(fileItems) {\n            var fileItem = fileItems.shift();\n            processedFilesCount++; \n            if (fileItem && fileItem.file.error) {\n                uploadFiles(fileItem);\n            } else {\n                if (uploadingFile) {\n                    uploadOneFile(fileItem, null, 0, fileItems);\n                } else {\n\n                    if (completedCallback) {\n                        completedCallback({\n                            files: new FileCollection(uploadFileItems),\n                            bytesPerSecond: I,\n                            errors: E(D),\n                            extra: extra\n                        });\n                    }\n                }  \n            }\n        }\n\n        var self = this,\n            fileItems = [],\n            processedFilesCount = -1,\n            xhr, \n            totalSize = 0,\n            allLoadedSize = 0,\n            k = [],\n            errorFileInfos = [],\n            startedTime = now(),\n            I = 0,\n            uploadFileItems = [];\n\n        for ( var  i = 0; i < files.length; i++) {\n            totalSize += files[i].size;\n            fileItems.push({\n                file : files[i]\n            });\n        }        \n\n        uploadFiles(fileItems);\n    }\n\n\n    var filer = function() {\n        return filer;\n    };\n\n    langx.mixin(filer , {\n        dropzone: function(elm, params) {\n            params = params || {};\n            var hoverClass = params.hoverClass || \"dropzone\",\n                droppedCallback = params.dropped;\n\n            var enterdCount = 0;\n            on(elm, \"dragenter\", function(e) {\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\n                    eventer.stop(e);\n                    enterdCount ++;\n                    styler.addClass(elm,hoverClass)\n                }\n            });\n\n            on(elm, \"dragover\", function(e) {\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\n                    eventer.stop(e);\n                }\n            });\n\n\n            on(elm, \"dragleave\", function(e) {\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\n                    enterdCount--\n                    if (enterdCount==0) {\n                        styler.removeClass(elm,hoverClass);\n                    }\n                }\n            });\n\n            on(elm, \"drop\", function(e) {\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\n                    styler.removeClass(elm,hoverClass)\n                    eventer.stop(e);\n                    if (droppedCallback) {\n                        droppedCallback(e.dataTransfer.files);\n                    }\n                }\n            });\n\n\n            return this;\n        },\n\n        picker: function(elm, params) {\n            params = params || {};\n\n            var pickedCallback = params.picked;\n\n            on(elm, \"click\", function(e) {\n                e.preventDefault();\n                selectFile(pickedCallback);\n            });\n            return this;\n        },\n\n        readFile : function(file,params) {\n            params = params || {};\n            var d = new Deferred,\n                reader = new FileReader();\n            \n            reader.onload = function(evt) {\n                d.resolve(evt.target.result);\n            };\n            reader.onerror = function(e) {\n                var code = e.target.error.code;\n                if (code === 2) {\n                    alert('please don\\'t open this page using protocol fill:///');\n                } else {\n                    alert('error code: ' + code);\n                }\n            };\n            \n            if (params.asArrayBuffer){\n                reader.readAsArrayBuffer(file);\n            } else if (params.asDataUrl) {\n                reader.readAsDataURL(file);                \n            } else if (params.asText) {\n                reader.readAsText(file);\n            } else {\n                reader.readAsArrayBuffer(file);\n            }\n\n            return d.promise;\n        },\n\n        writeFile : function(data,name) {\n            if (window.navigator.msSaveBlob) { \n               if (langx.isString(data)) {\n                   data = dataURItoBlob(data);\n               }\n               window.navigator.msSaveBlob(data, name);\n            } else {\n                var a = document.createElement('a');\n                if (data instanceof Blob) {\n                    data = langx.URL.createObjectURL(data);\n                }\n                a.href = data;\n                a.setAttribute('download', name || 'noname');\n                a.dispatchEvent(new CustomEvent('click'));\n            }              \n        }\n\n\n    });\n\n    return skylark.filer = filer;\n});\n\ndefine('skylark-utils/fx',[\n    \"./skylark\",\n    \"./langx\",\n    \"./browser\",\n    \"./geom\",\n    \"./styler\",\n    \"./eventer\"\n], function(skylark, langx, browser, geom, styler, eventer) {\n    var animationName,\n        animationDuration,\n        animationTiming,\n        animationDelay,\n        transitionProperty,\n        transitionDuration,\n        transitionTiming,\n        transitionDelay,\n\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\n\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\n        transform = browser.css3PropPrefix + \"transform\",\n        cssReset = {};\n\n\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\n\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\n\n\n\n    function animate(elm, properties, duration, ease, callback, delay) {\n        var key,\n            cssValues = {},\n            cssProperties = [],\n            transforms = \"\",\n            that = this,\n            endEvent,\n            wrappedCallback,\n            fired = false,\n            hasScrollTop = false;\n\n        if (langx.isPlainObject(duration)) {\n            ease = duration.easing;\n            callback = duration.complete;\n            delay = duration.delay;\n            duration = duration.duration;\n        }\n\n        if (langx.isString(duration)) {\n            duration = fx.speeds[duration];\n        }\n        if (duration === undefined) {\n            duration = fx.speeds.normal;\n        }\n        duration = duration / 1000;\n        if (fx.off) {\n            duration = 0;\n        }\n\n        if (langx.isFunction(ease)) {\n            callback = ease;\n            eace = \"swing\";\n        } else {\n            ease = ease || \"swing\";\n        }\n\n        if (delay) {\n            delay = delay / 1000;\n        } else {\n            delay = 0;\n        }\n\n        if (langx.isString(properties)) {\n            // keyframe animation\n            cssValues[animationName] = properties;\n            cssValues[animationDuration] = duration + \"s\";\n            cssValues[animationTiming] = ease;\n            endEvent = animationEnd;\n        } else {\n            // CSS transitions\n            for (key in properties) {\n                if (supportedTransforms.test(key)) {\n                    transforms += key + \"(\" + properties[key] + \") \";\n                } else {\n                    if (key === \"scrollTop\") {\n                        hasScrollTop = true;\n                    }\n                    cssValues[key] = properties[key];\n                    cssProperties.push(langx.dasherize(key));\n                }\n            }\n            endEvent = transitionEnd;\n        }\n\n        if (transforms) {\n            cssValues[transform] = transforms;\n            cssProperties.push(transform);\n        }\n\n        if (duration > 0 && langx.isPlainObject(properties)) {\n            cssValues[transitionProperty] = cssProperties.join(\", \");\n            cssValues[transitionDuration] = duration + \"s\";\n            cssValues[transitionDelay] = delay + \"s\";\n            cssValues[transitionTiming] = ease;\n        }\n\n        wrappedCallback = function(event) {\n            fired = true;\n            if (event) {\n                if (event.target !== event.currentTarget) {\n                    return // makes sure the event didn't bubble from \"below\"\n                }\n                eventer.off(event.target, endEvent, wrappedCallback)\n            } else {\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\n            }\n            styler.css(elm, cssReset);\n            callback && callback.call(this);\n        };\n\n        if (duration > 0) {\n            eventer.on(elm, endEvent, wrappedCallback);\n            // transitionEnd is not always firing on older Android phones\n            // so make sure it gets fired\n            langx.debounce(function() {\n                if (fired) {\n                    return;\n                }\n                wrappedCallback.call(that);\n            }, ((duration + delay) * 1000) + 25)();\n        }\n\n        // trigger page reflow so new elements can animate\n        elm.clientLeft;\n\n        styler.css(elm, cssValues);\n\n        if (duration <= 0) {\n            langx.debounce(function() {\n                if (fired) {\n                    return;\n                }\n                wrappedCallback.call(that);\n            }, 0)();\n        }\n\n        if (hasScrollTop) {\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\n        }\n\n        return this;\n    }\n\n    function show(elm, speed, callback) {\n        styler.show(elm);\n        if (speed) {\n            if (!callback && langx.isFunction(speed)) {\n                callback = speed;\n                speed = \"normal\";\n            }\n            styler.css(elm, \"opacity\", 0)\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\n        }\n        return this;\n    }\n\n\n    function hide(elm, speed, callback) {\n        if (speed) {\n            if (!callback && langx.isFunction(speed)) {\n                callback = speed;\n                speed = \"normal\";\n            }\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\n                styler.hide(elm);\n                if (callback) {\n                    callback.call(elm);\n                }\n            });\n        } else {\n            styler.hide(elm);\n        }\n        return this;\n    }\n\n    function scrollToTop(elm, pos, speed, callback) {\n        var scrollFrom = parseInt(elm.scrollTop),\n            i = 0,\n            runEvery = 5, // run every 5ms\n            freq = speed * 1000 / runEvery,\n            scrollTo = parseInt(pos);\n\n        var interval = setInterval(function() {\n            i++;\n\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\n\n            if (i >= freq + 1) {\n                clearInterval(interval);\n                if (callback) langx.debounce(callback, 1000)();\n            }\n        }, runEvery);\n    }\n\n    function toggle(elm, speed, callback) {\n        if (styler.isInvisible(elm)) {\n            show(elm, speed, callback);\n        } else {\n            hide(elm, speed, callback);\n        }\n        return this;\n    }\n\n    function fadeTo(elm, speed, opacity, easing, callback) {\n        animate(elm, { opacity: opacity }, speed, easing, callback);\n        return this;\n    }\n\n    function fadeIn(elm, speed, easing, callback) {\n        var target = styler.css(elm, \"opacity\");\n        if (target > 0) {\n            styler.css(elm, \"opacity\", 0);\n        } else {\n            target = 1;\n        }\n        styler.show(elm);\n\n        fadeTo(elm, speed, target, easing, callback);\n\n        return this;\n    }\n\n    function fadeOut(elm, speed, easing, callback) {\n        var _elm = elm,\n            complete,\n            options = {};\n\n        if (langx.isPlainObject(speed)) {\n            options.easing = speed.easing;\n            options.duration = speed.duration;\n            complete = speed.complete;\n        } else {\n            options.duration = speed;\n            if (callback) {\n                complete = callback;\n                options.easing = easing;\n            } else {\n                complete = easing;\n            }\n        }\n        options.complete = function() {\n            styler.hide(elm);\n            if (complete) {\n                complete.call(elm);\n            }\n        }\n\n        fadeTo(elm, options, 0);\n\n        return this;\n    }\n\n    function fadeToggle(elm, speed, ceasing, allback) {\n        if (styler.isInvisible(elm)) {\n            fadeIn(elm, speed, easing, callback);\n        } else {\n            fadeOut(elm, speed, easing, callback);\n        }\n        return this;\n    }\n\n    function slideDown(elm,duration,callback) {    \n    \n        // get the element position to restore it then\n        var position = styler.css(elm,'position');\n        \n        // show element if it is hidden\n        show(elm);\n        \n        // place it so it displays as usually but hidden\n        styler.css(elm,{\n            position: 'absolute',\n            visibility: 'hidden'\n        });\n        \n        // get naturally height, margin, padding\n        var marginTop = styler.css(elm,'margin-top');\n        var marginBottom = styler.css(elm,'margin-bottom');\n        var paddingTop = styler.css(elm,'padding-top');\n        var paddingBottom = styler.css(elm,'padding-bottom');\n        var height = styler.css(elm,'height');\n        \n        // set initial css for animation\n        styler.css(elm,{\n            position: position,\n            visibility: 'visible',\n            overflow: 'hidden',\n            height: 0,\n            marginTop: 0,\n            marginBottom: 0,\n            paddingTop: 0,\n            paddingBottom: 0\n        });\n        \n        // animate to gotten height, margin and padding\n        animate(elm,{\n            height: height,\n            marginTop: marginTop,\n            marginBottom: marginBottom,\n            paddingTop: paddingTop,\n            paddingBottom: paddingBottom\n        }, {\n            duration : duration,\n            complete: function(){\n                if (callback) {\n                    callback.apply(target); \n                }\n            }    \n        }\n    );\n        \n        return this;\n    };\n\n    function slideUp(elm,duration,callback) {\n        // active the function only if the element is visible\n        if (geom.height(elm) > 0) {\n        \n            var target = elm;\n            \n            // get the element position to restore it then\n            var position = styler.css(target,'position');\n            \n            // get the element height, margin and padding to restore them then\n            var height = styler.css(target,'height');\n            var marginTop = styler.css(target,'margin-top');\n            var marginBottom = styler.css(target,'margin-bottom');\n            var paddingTop = styler.css(target,'padding-top');\n            var paddingBottom = styler.css(target,'padding-bottom');\n            \n            // set initial css for animation\n            styler.css(elm,{\n                visibility: 'visible',\n                overflow: 'hidden',\n                height: height,\n                marginTop: marginTop,\n                marginBottom: marginBottom,\n                paddingTop: paddingTop,\n                paddingBottom: paddingBottom\n            });\n            \n            // animate element height, margin and padding to zero\n            animate(target,{\n                height: 0,\n                marginTop: 0,\n                marginBottom: 0,\n                paddingTop: 0,\n                paddingBottom: 0\n            }, { \n                // callback : restore the element position, height, margin and padding to original values\n                duration: duration,\n                queue: false,\n                complete: function(){\n                    hide(target);\n                    styler.css(target,{\n                        visibility: 'visible',\n                        overflow: 'hidden',\n                        height: height,\n                        marginTop: marginTop,\n                        marginBottom: marginBottom,\n                        paddingTop: paddingTop,\n                        paddingBottom: paddingBottom\n                    });\n                    if (callback) {\n                        callback.apply(target); \n                    }\n                }\n            });\n        }\n        return this;\n    };\n    \n    /* SlideToggle */\n    function slideToggle(elm,duration,callback) {\n    \n        // if the element is hidden, slideDown !\n        if (geom.height(elm) == 0) {\n            slideDown(elm,duration,callback);\n        } \n        // if the element is visible, slideUp !\n        else {\n            slideUp(elm,duration,callback);\n        }\n        return this;\n    };\n\n\n    function fx() {\n        return fx;\n    }\n\n    langx.mixin(fx, {\n        off: false,\n\n        speeds: {\n            normal: 400,\n            fast: 200,\n            slow: 600\n        },\n\n        animate: animate,\n        fadeIn: fadeIn,\n        fadeOut: fadeOut,\n        fadeTo: fadeTo,\n        fadeToggle: fadeToggle,\n        hide: hide,\n        scrollToTop: scrollToTop,\n\n        slideDown : slideDown,\n        slideToggle : slideToggle,\n        slideUp : slideUp,\n        show: show,\n        toggle: toggle\n    });\n\n    return skylark.fx = fx;\n});\ndefine('skylark-utils/http',[\n    \"./skylark\",\n    \"./langx\"\n],function(skylark, langx){\n    var Deferred = langx.Deferred,\n        blankRE = /^\\s*$/,\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\n\n\n    function empty() {}\n\n    var ajaxSettings = {\n        // Default type of request\n        type: 'GET',\n        // Callback that is executed before request\n        beforeSend: empty,\n        // Callback that is executed if the request succeeds\n        success: empty,\n        // Callback that is executed the the server drops error\n        error: empty,\n        // Callback that is executed on request complete (both: error and success)\n        complete: empty,\n        // The context for the callbacks\n        context: null,\n        // Whether to trigger \"global\" Ajax events\n        global: true,\n        // Transport\n        xhr: function() {\n            return new window.XMLHttpRequest();\n        },\n        // MIME types mapping\n        // IIS returns Javascript as \"application/x-javascript\"\n        accepts: {\n            script: 'text/javascript, application/javascript, application/x-javascript',\n            json: 'application/json',\n            xml: 'application/xml, text/xml',\n            html: 'text/html',\n            text: 'text/plain'\n        },\n        // Whether the request is to another domain\n        crossDomain: false,\n        // Default timeout\n        timeout: 0,\n        // Whether data should be serialized to string\n        processData: true,\n        // Whether the browser should be allowed to cache GET responses\n        cache: true\n    }\n\n    function mimeToDataType(mime) {\n        if (mime) {\n            mime = mime.split(';', 2)[0];\n        }\n        return mime && (mime == 'text/html' ? 'html' :\n            mime == 'application/json' ? 'json' :\n            scriptTypeRE.test(mime) ? 'script' :\n            xmlTypeRE.test(mime) && 'xml') || 'text';\n    }\n\n    function appendQuery(url, query) {\n        if (query == '') {\n            return url;\n        }\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\n    }\n\n    function serialize(params, obj, traditional, scope) {\n        var type, array = langx.isArray(obj),\n            hash = langx.isPlainObject(obj)\n        langx.each(obj, function(key, value) {\n            type = langx.type(value);\n            if (scope) {\n                key = traditional ? scope :\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\n            }\n            // handle data in serializeArray() format\n            if (!scope && array) {\n                params.add(value.name, value.value);\n            // recurse into nested objects\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\n                serialize(params, value, traditional, key);\n            } else {\n                params.add(key, value);\n            }\n        })\n    }    \n\n    function param(obj, traditional) {\n        var params = []\n        params.add = function(key, value) {\n            if (langx.isFunction(value)) {\n                value = value();\n            }\n            if (value == null) {\n                value = \"\";\n            }\n            this.push(escape(key) + '=' + escape(value));\n        }\n        \n        serialize(params, obj, traditional);\n\n        return params.join('&').replace(/%20/g, '+')\n    }\n\n    // serialize payload and append it to the URL for GET requests\n    function serializeData(options) {\n        if (options.processData && options.data && !langx.isString(options.data)) {\n            options.data = $.param(options.data, options.traditional)\n        }\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\n            options.url = appendQuery(options.url, options.data);\n            options.data = undefined;\n        }\n    }\n\n    function ajaxSuccess(data, xhr, settings, deferred) {\n        var context = settings.context,\n            status = 'success'\n        settings.success.call(context, data, status, xhr)\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n        ajaxComplete(status, xhr, settings)\n    }\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n    function ajaxError(error, type, xhr, settings, deferred) {\n        var context = settings.context\n        settings.error.call(context, xhr, type, error)\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n        ajaxComplete(type, xhr, settings)\n    }\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n    function ajaxComplete(status, xhr, settings) {\n        var context = settings.context\n        settings.complete.call(context, xhr, status)\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n        //ajaxStop(settings)\n    }    \n\n    function ajax(options) {\n        var settings = langx.mixin({}, options),\n            deferred = new Deferred();\n\n        langx.safeMixin(settings,ajaxSettings);\n\n        //ajaxStart(settings)\n        if (!settings.crossDomain) {\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\n        }\n\n        serializeData(settings);\n        var dataType = settings.dataType;\n\n        var mime = settings.accepts[dataType],\n            headers = {},\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n            xhr = settings.xhr(),\n            nativeSetHeader = xhr.setRequestHeader,\n            abortTimeout;\n\n        //if (deferred) deferred.promise(xhr)\n\n        if (!settings.crossDomain) {\n            setHeader('X-Requested-With', 'XMLHttpRequest');\n        }\n        setHeader('Accept', mime || '*/*')\n        if (mime = settings.mimeType || mime) {\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\n        }\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n        }\n\n        if (settings.headers) {\n            for (name in settings.headers) {\n                setHeader(name, settings.headers[name]);\n            }    \n        }\n        xhr.setRequestHeader = setHeader;\n\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4) {\n                xhr.onreadystatechange = empty\n                clearTimeout(abortTimeout)\n                var result, error = false\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n                    result = xhr.responseText\n\n                    try {\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\n                        if (dataType == 'script') {\n                            (1, eval)(result);\n                        } else if (dataType == 'xml') {\n                            result = xhr.responseXML\n                        } else if (dataType == 'json') {\n                            result = blankRE.test(result) ? null : JSON.parse(result);\n                        }\n                    } catch (e) { \n                        error = e \n                    }\n\n                    if (error) {\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\n                    } else {\n                        ajaxSuccess(result, xhr, settings, deferred);\n                    }\n                } else {\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\n                }\n            }\n        }\n\n        /*\n        if (ajaxBeforeSend(xhr, settings) === false) {\n            xhr.abort()\n            ajaxError(null, 'abort', xhr, settings, deferred)\n            return xhr\n        }\n\n        if (settings.xhrFields)\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n        */\n        var async = 'async' in settings ? settings.async : true\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n        for (name in headers) {\n            nativeSetHeader.apply(xhr, headers[name]);\n        }\n\n        if (settings.timeout > 0) {\n            abortTimeout = setTimeout(function() {\n                xhr.onreadystatechange = empty;\n                xhr.abort();\n                ajaxError(null, 'timeout', xhr, settings, deferred);\n            }, settings.timeout);\n        }\n\n        // avoid sending empty string (#319)\n        xhr.send(settings.data ? settings.data : null)\n        return xhr;\n    }\n\n\n    function get( /* url, data, success, dataType */ ) {\n        return ajax(parseArguments.apply(null, arguments))\n    }\n\n    function post( /* url, data, success, dataType */ ) {\n        var options = parseArguments.apply(null, arguments);\n        options.type = 'POST';\n        return ajax(options);\n    }\n\n    function getJSON( /* url, data, success */ ) {\n        var options = parseArguments.apply(null, arguments);\n        options.dataType = 'json';\n        return ajax(options);\n    }    \n\n\n    function http(){\n      return http;\n    }\n\n    langx.mixin(http, {\n        ajax: ajax,\n\n        get: get,\n        \n        gtJSON: getJSON,\n\n        post: post\n\n    });\n\n    return skylark.http = http;\n});\n\ndefine('skylark-utils/mover',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./datax\",\n    \"./geom\",\n    \"./eventer\",\n    \"./styler\"\n],function(skylark, langx,noder,datax,geom,eventer,styler){\n    var on = eventer.on,\n        off = eventer.off,\n        attr = datax.attr,\n        removeAttr = datax.removeAttr,\n        offset = geom.pagePosition,\n        addClass = styler.addClass,\n        height = geom.height,\n        some = Array.prototype.some,\n        map = Array.prototype.map;\n\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\n        // summary:\n        //      Given a list of spots to put node, put it at the first spot where it fits,\n        //      of if it doesn't fit anywhere then the place with the least overflow\n        // choices: Array\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\n        //      Above example says to put the top-left corner of the node at (10,20)\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\n        //      It also passes in the available size for the popup, which is useful for tooltips to\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\n        //      what the best placement is.\n        // aroundNodeCoords: Object\n        //      Size of aroundNode, ex: {w: 200, h: 50}\n\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\n        // viewport over document\n\n        var doc = noder.ownerDoc(node),\n            win = noder.ownerWindow(doc),\n            view = geom.size(win);\n\n        view.left = 0;\n        view.top = 0;\n\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\n            doc.body.appendChild(node);\n        }\n\n        var best = null;\n\n        some.apply(choices, function(choice){\n            var corner = choice.corner;\n            var pos = choice.pos;\n            var overflow = 0;\n\n            // calculate amount of space available given specified position of node\n            var spaceAvailable = {\n                w: {\n                    'L': view.left + view.width - pos.x,\n                    'R': pos.x - view.left,\n                    'M': view.width\n                }[corner.charAt(1)],\n\n                h: {\n                    'T': view.top + view.height - pos.y,\n                    'B': pos.y - view.top,\n                    'M': view.height\n                }[corner.charAt(0)]\n            };\n\n            if(layoutNode){\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\n                overflow = typeof res == \"undefined\" ? 0 : res;\n            }\n\n            var bb = geom.size(node);\n\n            // coordinates and size of node with specified corner placed at pos,\n            // and clipped by viewport\n            var\n                startXpos = {\n                    'L': pos.x,\n                    'R': pos.x - bb.width,\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\n                }[corner.charAt(1)],\n\n                startYpos = {\n                    'T': pos.y,\n                    'B': pos.y - bb.height,\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\n                }[corner.charAt(0)],\n\n                startX = Math.max(view.left, startXpos),\n                startY = Math.max(view.top, startYpos),\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\n                width = endX - startX,\n                height = endY - startY;\n\n            overflow += (bb.width - width) + (bb.height - height);\n\n            if(best == null || overflow < best.overflow){\n                best = {\n                    corner: corner,\n                    aroundCorner: choice.aroundCorner,\n                    left: startX,\n                    top: startY,\n                    width: width,\n                    height: height,\n                    overflow: overflow,\n                    spaceAvailable: spaceAvailable\n                };\n            }\n\n            return !overflow;\n        });\n\n        // In case the best position is not the last one we checked, need to call\n        // layoutNode() again.\n        if(best.overflow && layoutNode){\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\n        }\n\n\n        geom.boundingPosition(node,best);\n\n        return best;\n    }\n\n    function at(node, pos, corners, padding, layoutNode){\n        var choices = map.apply(corners, function(corner){\n            var c = {\n                corner: corner,\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\n                pos: {x: pos.x,y: pos.y}\n            };\n            if(padding){\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\n            }\n            return c;\n        });\n\n        return _place(node, choices, layoutNode);\n    }\n\n    function around(\n        /*DomNode*/     node,\n        /*DomNode|__Rectangle*/ anchor,\n        /*String[]*/    positions,\n        /*Boolean*/     leftToRight,\n        /*Function?*/   layoutNode){\n\n        // summary:\n        //      Position node adjacent or kitty-corner to anchor\n        //      such that it's fully visible in viewport.\n        // description:\n        //      Place node such that corner of node touches a corner of\n        //      aroundNode, and that node is fully visible.\n        // anchor:\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\n        // positions:\n        //      Ordered list of positions to try matching up.\n        //\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\n        //          in the case of RTL scripts like Hebrew and Arabic\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\n        //          in the case of RTL scripts like Hebrew and Arabic\n        //      - above-centered: drop down is centered above anchor node\n        //      - above: drop down goes above anchor node, left sides aligned\n        //      - above-alt: drop down goes above anchor node, right sides aligned\n        //      - below-centered: drop down is centered above anchor node\n        //      - below: drop down goes below anchor node\n        //      - below-alt: drop down goes below anchor node, right sides aligned\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\n        // leftToRight:\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\n        //      positions slightly.\n        // example:\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\n        //      This will try to position node such that node's top-left corner is at the same position\n        //      as the bottom left corner of the aroundNode (ie, put node below\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\n        //      the bottom-right corner of node where the top right corner of aroundNode is\n        //      (ie, put node above aroundNode, with right edges aligned)\n        //\n\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\n        var aroundNodePos;\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\n            aroundNodePos = domGeometry.position(anchor, true);\n\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\n            // width of either anchor or popup because in both cases the border may be on an inner node.\n            if(/^(above|below)/.test(positions[0])){\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\n                    nodeBorder =  domGeometry.getBorderExtents(node),\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\n            }\n        }else{\n            aroundNodePos = anchor;\n        }\n\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\n        if(anchor.parentNode){\n            // ignore nodes between position:relative and position:absolute\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\n            var parent = anchor.parentNode;\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\n                var parentPos = domGeometry.position(parent, true),\n                    pcs = domStyle.getComputedStyle(parent);\n                if(/relative|absolute/.test(pcs.position)){\n                    sawPosAbsolute = false;\n                }\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\n                }\n                if(pcs.position == \"absolute\"){\n                    sawPosAbsolute = true;\n                }\n                parent = parent.parentNode;\n            }\n        }           \n\n        var x = aroundNodePos.x,\n            y = aroundNodePos.y,\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\n\n        // Convert positions arguments into choices argument for _place()\n        var choices = [];\n        function push(aroundCorner, corner){\n            choices.push({\n                aroundCorner: aroundCorner,\n                corner: corner,\n                pos: {\n                    x: {\n                        'L': x,\n                        'R': x + width,\n                        'M': x + (width >> 1)\n                    }[aroundCorner.charAt(1)],\n                    y: {\n                        'T': y,\n                        'B': y + height,\n                        'M': y + (height >> 1)\n                    }[aroundCorner.charAt(0)]\n                }\n            })\n        }\n        array.forEach(positions, function(pos){\n            var ltr =  leftToRight;\n            switch(pos){\n                case \"above-centered\":\n                    push(\"TM\", \"BM\");\n                    break;\n                case \"below-centered\":\n                    push(\"BM\", \"TM\");\n                    break;\n                case \"after-centered\":\n                    ltr = !ltr;\n                    // fall through\n                case \"before-centered\":\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\n                    break;\n                case \"after\":\n                    ltr = !ltr;\n                    // fall through\n                case \"before\":\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\n                    break;\n                case \"below-alt\":\n                    ltr = !ltr;\n                    // fall through\n                case \"below\":\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\n                    break;\n                case \"above-alt\":\n                    ltr = !ltr;\n                    // fall through\n                case \"above\":\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\n                    break;\n                default:\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\n                    // Not meant to be used directly.  Remove for 2.0.\n                    push(pos.aroundCorner, pos.corner);\n            }\n        });\n\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\n        position.aroundNodePos = aroundNodePos;\n\n        return position;\n    }\n\n    function movable(elm, params) {\n        function updateWithTouchData(e) {\n            var keys, i;\n\n            if (e.changedTouches) {\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\n                for (i = 0; i < keys.length; i++) {\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\n                }\n            }\n        }\n\n        params = params || {};\n        var handleEl = params.handle || elm,\n            constraints = params.constraints,\n            overlayDiv,\n            doc = params.document || document,\n            downButton,\n            start,\n            stop,\n            drag,\n            startX,\n            startY,\n            originalPos,\n            size,\n            startedCallback = params.started,\n            movingCallback = params.moving,\n            stoppedCallback = params.stopped,\n\n            start = function(e) {\n                var docSize = geom.getDocumentSize(doc),\n                    cursor;\n\n                updateWithTouchData(e);\n\n                e.preventDefault();\n                downButton = e.button;\n                //handleEl = getHandleEl();\n                startX = e.screenX;\n                startY = e.screenY;\n\n                originalPos = geom.relativePosition(elm);\n                size = geom.size(elm);\n\n                // Grab cursor from handle so we can place it on overlay\n                cursor = styler.css(handleEl, \"curosr\");\n\n                overlayDiv = noder.createElement(\"div\");\n                styler.css(overlayDiv, {\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: docSize.width,\n                    height: docSize.height,\n                    zIndex: 0x7FFFFFFF,\n                    opacity: 0.0001,\n                    cursor: cursor\n                });\n                noder.append(doc.body, overlayDiv);\n\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\n\n                if (startedCallback) {\n                    startedCallback(e);\n                }\n            },\n\n            move = function(e) {\n                updateWithTouchData(e);\n\n                if (e.button !== 0) {\n                    return stop(e);\n                }\n\n                e.deltaX = e.screenX - startX;\n                e.deltaY = e.screenY - startY;\n\n                var l = originalPos.left + e.deltaX,\n                    t = originalPos.top + e.deltaY;\n                if (constraints) {\n\n                    if (l < constraints.minX) {\n                        l = constraints.minX;\n                    }\n\n                    if (l > constraints.maxX) {\n                        l = constraints.maxX;\n                    }\n\n                    if (t < constraints.minY) {\n                        t = constraints.minY;\n                    }\n\n                    if (t > constraints.maxY) {\n                        t = constraints.maxY;\n                    }\n                }\n                geom.relativePosition(elm, {\n                    left: l,\n                    top: t\n                })\n\n                e.preventDefault();\n                if (movingCallback) {\n                    movingCallback(e);\n                }\n            },\n\n            stop = function(e) {\n                updateWithTouchData(e);\n\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\n\n                noder.remove(overlayDiv);\n\n                if (stoppedCallback) {\n                    stoppedCallback(e);\n                }\n            };\n\n        eventer.on(handleEl, \"mousedown touchstart\", start);\n\n        return {\n            // destroys the dragger.\n            remove: function() {\n                eventer.off(handleEl);\n            }\n        }\n    }\n\n    function mover(){\n      return mover;\n    }\n\n    langx.mixin(mover, {\n        around : around,\n\n        at: at, \n\n        movable: movable\n\n    });\n\n    return skylark.mover = mover;\n});\n\ndefine('skylark-utils/query',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./datax\",\n    \"./eventer\",\n    \"./finder\",\n    \"./geom\",\n    \"./styler\",\n    \"./fx\"\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\n    var some = Array.prototype.some,\n        push = Array.prototype.push,\n        every = Array.prototype.every,\n        concat = Array.prototype.concat,\n        slice = Array.prototype.slice,\n        map = Array.prototype.map,\n        filter = Array.prototype.filter,\n        forEach = Array.prototype.forEach,\n        isQ;\n\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\n\n    var funcArg = langx.funcArg,\n        isArrayLike = langx.isArrayLike,\n        isString = langx.isString,\n        uniq = langx.uniq,\n        isFunction = langx.isFunction;\n\n    var type = langx.type,\n        isArray = langx.isArray,\n\n        isWindow = langx.isWindow,\n\n        isDocument = langx.isDocument,\n\n        isObject = langx.isObject,\n\n        isPlainObject = langx.isPlainObject,\n\n        compact = langx.compact,\n\n        flatten = langx.flatten,\n\n        camelCase = langx.camelCase,\n\n        dasherize = langx.dasherize,\n        children = finder.children;\n\n    function wrapper_map(func, context) {\n        return function() {\n            var self = this,\n                params = slice.call(arguments);\n            var result = $.map(self, function(elem, idx) {\n                return func.apply(context, [elem].concat(params));\n            });\n            return $(uniq(result));\n        }\n    }\n\n    function wrapper_selector(func, context, last) {\n        return function(selector) {\n            var self = this,\n                params = slice.call(arguments);\n            var result = this.map(function(idx, elem) {\n                // if (elem.nodeType == 1) {\n                if (elem.querySelector) {\n                    return func.apply(context, last ? [elem] : [elem, selector]);\n                }\n            });\n            if (last && selector) {\n                return result.filter(selector);\n            } else {\n                return result;\n            }\n        }\n    }\n\n    function wrapper_selector_until(func, context, last) {\n        return function(util, selector) {\n            var self = this,\n                params = slice.call(arguments);\n            if (selector === undefined) {\n                selector = util;\n                util = undefined;\n            }\n            var result = this.map(function(idx, elem) {\n                // if (elem.nodeType == 1) {\n                if (elem.querySelector) {\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\n                }\n            });\n            if (last && selector) {\n                return result.filter(selector);\n            } else {\n                return result;\n            }\n        }\n    }\n\n\n    function wrapper_every_act(func, context) {\n        return function() {\n            var self = this,\n                params = slice.call(arguments);\n            this.each(function(idx) {\n                func.apply(context, [this].concat(params));\n            });\n            return self;\n        }\n    }\n\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\n        return function(arg1) {\n            var self = this,\n                params = slice.call(arguments);\n            forEach.call(self, function(elem, idx) {\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\n            });\n            return self;\n        }\n    }\n\n    function wrapper_some_chk(func, context) {\n        return function() {\n            var self = this,\n                params = slice.call(arguments);\n            return some.call(self, function(elem) {\n                return func.apply(context, [elem].concat(params));\n            });\n        }\n    }\n\n    function wrapper_name_value(func, context, oldValueFunc) {\n        return function(name, value) {\n            var self = this,\n                params = slice.call(arguments);\n\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\n                forEach.call(self, function(elem, idx) {\n                    var newValue;\n                    if (oldValueFunc) {\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\n                    } else {\n                        newValue = value\n                    }\n                    func.apply(context, [elem].concat(params));\n                });\n                return self;\n            } else {\n                if (self[0]) {\n                    return func.apply(context, [self[0], name]);\n                }\n            }\n\n        }\n    }\n\n    function wrapper_value(func, context, oldValueFunc) {\n        return function(value) {\n            var self = this;\n\n            if (langx.isDefined(value)) {\n                forEach.call(self, function(elem, idx) {\n                    var newValue;\n                    if (oldValueFunc) {\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\n                    } else {\n                        newValue = value\n                    }\n                    func.apply(context, [elem, newValue]);\n                });\n                return self;\n            } else {\n                if (self[0]) {\n                    return func.apply(context, [self[0]]);\n                }\n            }\n\n        }\n    }\n\n    var NodeList = langx.klass({\n        klassName: \"SkNodeList\",\n        init: function(selector, context) {\n            var self = this,\n                match, nodes, node, props;\n\n            if (selector) {\n                self.context = context = context || noder.doc();\n\n                if (isString(selector)) {\n                    // a html string or a css selector is expected\n                    self.selector = selector;\n\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\n                        match = [null, selector, null];\n                    } else {\n                        match = rquickExpr.exec(selector);\n                    }\n\n                    if (match) {\n                        if (match[1]) {\n                            // if selector is html\n                            nodes = noder.createFragment(selector);\n\n                            if (langx.isPlainObject(context)) {\n                                props = context;\n                            }\n\n                        } else {\n                            node = finder.byId(match[2], noder.ownerDoc(context));\n\n                            if (node) {\n                                // if selector is id\n                                nodes = [node];\n                            }\n\n                        }\n                    } else {\n                        // if selector is css selector\n                        nodes = finder.descendants(context, selector);\n                    }\n                } else {\n                    if (isArray(selector)) {\n                        // a dom node array is expected\n                        nodes = selector;\n                    } else {\n                        // a dom node is expected\n                        nodes = [selector];\n                    }\n                    //self.add(selector, false);\n                }\n            }\n\n\n            if (nodes) {\n\n                push.apply(self, nodes);\n\n                if (props) {\n                    for ( var name  in props ) {\n                        // Properties of context are called as methods if possible\n                        if ( langx.isFunction( this[ name ] ) ) {\n                            this[ name ]( props[ name ] );\n                        } else {\n                            this.attr( name, props[ name ] );\n                        }\n                    }\n                }\n            }\n\n            return self;\n        }\n    }, Array);\n\n    var query = (function() {\n        isQ = function(object) {\n            return object instanceof NodeList;\n        }\n        init = function(selector, context) {\n            return new NodeList(selector, context);\n        }\n\n        var $ = function(selector, context) {\n            if (isFunction(selector)) {\n                eventer.ready(function() {\n                    selector($);\n                });\n            } else if (isQ(selector)) {\n                return selector;\n            } else {\n                if (context && isQ(context) && isString(selector)) {\n                    return context.find(selector);\n                }\n                return init(selector, context);\n            }\n        };\n\n        $.fn = NodeList.prototype;\n        langx.mixin($.fn, {\n            // `map` and `slice` in the jQuery API work differently\n            // from their array counterparts\n\n            map: function(fn) {\n                return $(uniq(langx.map(this, function(el, i) {\n                    return fn.call(el, i, el)\n                })));\n            },\n\n            slice: function() {\n                return $(slice.apply(this, arguments))\n            },\n\n            get: function(idx) {\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n            },\n\n            toArray: function() {\n                return slice.call(this);\n            },\n\n            size: function() {\n                return this.length\n            },\n\n            remove: wrapper_every_act(noder.remove, noder),\n\n            each: function(callback) {\n                langx.each(this, callback);\n                return this;\n            },\n\n            filter: function(selector) {\n                if (isFunction(selector)) return this.not(this.not(selector))\n                return $(filter.call(this, function(element) {\n                    return finder.matches(element, selector)\n                }))\n            },\n\n            add: function(selector, context) {\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\n            },\n\n            is: function(selector) {\n                return this.length > 0 && finder.matches(this[0], selector)\n            },\n\n            not: function(selector) {\n                var nodes = []\n                if (isFunction(selector) && selector.call !== undefined)\n                    this.each(function(idx) {\n                        if (!selector.call(this, idx)) nodes.push(this)\n                    })\n                else {\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n                    this.forEach(function(el) {\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\n                    })\n                }\n                return $(nodes)\n            },\n\n            has: function(selector) {\n                return this.filter(function() {\n                    return isObject(selector) ?\n                        noder.contains(this, selector) :\n                        $(this).find(selector).size()\n                })\n            },\n\n            eq: function(idx) {\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\n            },\n\n            first: function() {\n                return this.eq(0);\n            },\n\n            last: function() {\n                return this.eq(-1);\n            },\n\n            find: wrapper_selector(finder.descendants, finder),\n\n            closest: wrapper_selector(finder.closest, finder),\n            /*\n                        closest: function(selector, context) {\n                            var node = this[0],\n                                collection = false\n                            if (typeof selector == 'object') collection = $(selector)\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\n                                node = node !== context && !isDocument(node) && node.parentNode\n                            return $(node)\n                        },\n            */\n\n\n            parents: wrapper_selector(finder.ancestors, finder),\n\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\n\n\n            parent: wrapper_selector(finder.parent, finder),\n\n            children: wrapper_selector(finder.children, finder),\n\n            contents: wrapper_map(noder.contents, noder),\n\n            empty: wrapper_every_act(noder.empty, noder),\n\n            // `pluck` is borrowed from Prototype.js\n            pluck: function(property) {\n                return langx.map(this, function(el) {\n                    return el[property]\n                })\n            },\n\n            show: wrapper_every_act(fx.show, fx),\n\n            replaceWith: function(newContent) {\n                return this.before(newContent).remove();\n            },\n\n            wrap: function(structure) {\n                var func = isFunction(structure)\n                if (this[0] && !func)\n                    var dom = $(structure).get(0),\n                        clone = dom.parentNode || this.length > 1\n\n                return this.each(function(index) {\n                    $(this).wrapAll(\n                        func ? structure.call(this, index) :\n                        clone ? dom.cloneNode(true) : dom\n                    )\n                })\n            },\n\n            wrapAll: function(wrappingElement) {\n                if (this[0]) {\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\n                    var children;\n                    // drill down to the inmost element\n                    while ((children = wrappingElement.children()).length) {\n                        wrappingElement = children.first();\n                    }\n                    $(wrappingElement).append(this);\n                }\n                return this\n            },\n\n            wrapInner: function(wrappingElement) {\n                var func = isFunction(wrappingElement)\n                return this.each(function(index) {\n                    var self = $(this),\n                        contents = self.contents(),\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\n                })\n            },\n\n            unwrap: function(selector) {\n                if (this.parent().children().length === 0) {\n                    // remove dom without text\n                    this.parent(selector).not(\"body\").each(function() {\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\n                    });\n                } else {\n                    this.parent().each(function() {\n                        $(this).replaceWith($(this).children())\n                    });\n                }\n                return this\n            },\n\n            clone: function() {\n                return this.map(function() {\n                    return this.cloneNode(true)\n                })\n            },\n\n            hide: wrapper_every_act(fx.hide, fx),\n\n            toggle: function(setting) {\n                return this.each(function() {\n                    var el = $(this);\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\n                })\n            },\n\n            prev: function(selector) {\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\n            },\n\n            prevAll: wrapper_selector(finder.previousSibling, finder),\n\n            next: function(selector) {\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\n            },\n\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\n\n            siblings: wrapper_selector(finder.siblings, finder),\n\n            html: wrapper_value(noder.html, noder, noder.html),\n\n            text: wrapper_value(datax.text, datax, datax.text),\n\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\n\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\n\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\n\n            removeProp: wrapper_every_act(datax.removeProp, datax),\n\n            data: wrapper_name_value(datax.data, datax, datax.data),\n\n            removeData: wrapper_every_act(datax.removeData, datax),\n\n            val: wrapper_value(datax.val, datax, datax.val),\n\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\n\n            style: wrapper_name_value(styler.css, styler),\n\n            css: wrapper_name_value(styler.css, styler),\n\n            index: function(elem) {\n                if (elem) {\n                    return this.indexOf($(elem)[0]);\n                } else {\n                    return this.parent().children().indexOf(this[0]);\n                }\n            },\n\n            //hasClass(name)\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\n\n            //addClass(name)\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\n\n            //removeClass(name)\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\n\n            //toogleClass(name,when)\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\n\n            scrollTop: wrapper_value(geom.scrollTop, geom),\n\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\n\n            position: function() {\n                if (!this.length) return\n\n                var elem = this[0];\n\n                return geom.relativePosition(elem);\n            },\n\n            offsetParent: wrapper_map(geom.offsetParent, geom),\n        });\n\n        // for now\n        $.fn.detach = $.fn.remove;\n\n\n        $.fn.size = wrapper_value(geom.size, geom);\n\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\n\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\n\n        ['width', 'height'].forEach(function(dimension) {\n            var offset, Dimension = dimension.replace(/./, function(m) {\n                return m[0].toUpperCase()\n            });\n\n            $.fn['outer' + Dimension] = function(margin, value) {\n                if (arguments.length) {\n                    if (typeof margin !== 'boolean') {\n                        value = margin;\n                        margin = false;\n                    }\n                } else {\n                    margin = false;\n                    value = undefined;\n                }\n\n                if (value === undefined) {\n                    var el = this[0];\n                    if (!el) {\n                        return undefined;\n                    }\n                    var cb = geom.size(el);\n                    if (margin) {\n                        var me = geom.marginExtents(el);\n                        cb.width = cb.width + me.left + me.right;\n                        cb.height = cb.height + me.top + me.bottom;\n                    }\n                    return dimension === \"width\" ? cb.width : cb.height;\n                } else {\n                    return this.each(function(idx, el) {\n                        var mb = {};\n                        var me = geom.marginExtents(el);\n                        if (dimension === \"width\") {\n                            mb.width = value;\n                            if (margin) {\n                                mb.width = mb.width - me.left - me.right\n                            }\n                        } else {\n                            mb.height = value;\n                            if (margin) {\n                                mb.height = mb.height - me.top - me.bottom;\n                            }\n                        }\n                        geom.size(el, mb);\n                    })\n\n                }\n            };\n        })\n\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\n\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\n\n\n        var traverseNode = noder.traverse;\n\n        function wrapper_node_operation(func, context, oldValueFunc) {\n            return function(html) {\n                var argType, nodes = langx.map(arguments, function(arg) {\n                    argType = type(arg)\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\n                        arg : noder.createFragment(arg)\n                });\n                if (nodes.length < 1) {\n                    return this\n                }\n                this.each(function(idx) {\n                    func.apply(context, [this, nodes, idx > 0]);\n                });\n                return this;\n            }\n        }\n\n\n        $.fn.after = wrapper_node_operation(noder.after, noder);\n\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\n\n        $.fn.before = wrapper_node_operation(noder.before, noder);\n\n        $.fn.append = wrapper_node_operation(noder.append, noder);\n\n        $.fn.insertAfter = function(html) {\n            $(html).after(this);\n            return this;\n        };\n\n        $.fn.insertBefore = function(html) {\n            $(html).before(this);\n            return this;\n        };\n\n        $.fn.appendTo = function(html) {\n            $(html).append(this);\n            return this;\n        };\n\n        $.fn.prependTo = function(html) {\n            $(html).prepend(this);\n            return this;\n        };\n\n        return $\n    })();\n\n    (function($) {\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\n\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\n\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\n\n\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n            $.fn[event] = function(data, callback) {\n                return (0 in arguments) ?\n                    this.on(event, data, callback) :\n                    this.trigger(event)\n            }\n        });\n\n\n        $.fn.one = function(event, selector, data, callback) {\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\n                callback = data;\n                data = selector;\n                selector = null;\n            }\n\n            if (langx.isFunction(data)) {\n                callback = data;\n                data = null;\n            }\n\n            return this.on(event, selector, data, callback, 1)\n        };\n\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\n\n        $.fn.show = wrapper_every_act(fx.show, fx);\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\n\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\n    })(query);\n\n\n    (function($) {\n        $.fn.end = function() {\n            return this.prevObject || $()\n        }\n\n        $.fn.andSelf = function() {\n            return this.add(this.prevObject || $())\n        }\n\n        $.fn.addBack = function(selector) {\n            if (this.prevObject) {\n                if (selector) {\n                    return this.add(this.prevObject.filter(selector));\n                } else {\n                    return this.add(this.prevObject);\n                }\n            } else {\n                return this;\n            }\n        }\n\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\n            var fn = $.fn[property]\n            $.fn[property] = function() {\n                var ret = fn.apply(this, arguments)\n                ret.prevObject = this\n                return ret\n            }\n        })\n    })(query);\n\n\n    (function($) {\n        $.fn.query = $.fn.find;\n\n        $.fn.place = function(refNode, position) {\n            // summary:\n            //      places elements of this node list relative to the first element matched\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\n            // queryOrNode:\n            //      may be a string representing any valid CSS3 selector or a DOM node.\n            //      In the selector case, only the first matching element will be used\n            //      for relative positioning.\n            // position:\n            //      can be one of:\n            //\n            //      -   \"last\" (default)\n            //      -   \"first\"\n            //      -   \"before\"\n            //      -   \"after\"\n            //      -   \"only\"\n            //      -   \"replace\"\n            //\n            //      or an offset in the childNodes\n            if (langx.isString(refNode)) {\n                refNode = finder.descendant(refNode);\n            } else if (isQ(refNode)) {\n                refNode = refNode[0];\n            }\n            return this.each(function(i, node) {\n                switch (position) {\n                    case \"before\":\n                        noder.before(refNode, node);\n                        break;\n                    case \"after\":\n                        noder.after(refNode, node);\n                        break;\n                    case \"replace\":\n                        noder.replace(refNode, node);\n                        break;\n                    case \"only\":\n                        noder.empty(refNode);\n                        noder.append(refNode, node);\n                        break;\n                    case \"first\":\n                        noder.prepend(refNode, node);\n                        break;\n                        // else fallthrough...\n                    default: // aka: last\n                        noder.append(refNode, node);\n                }\n            });\n        };\n\n        $.fn.addContent = function(content, position) {\n            if (content.template) {\n                content = langx.substitute(content.template, content);\n            }\n            return this.append(content);\n        };\n\n        $.fn.replaceClass = function(newClass, oldClass) {\n            this.removeClass(oldClass);\n            this.addClass(newClass);\n            return this;\n        };\n\n    })(query);\n\n\n    return skylark.query = query;\n});\ndefine('skylark-utils/scripter',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./finder\"\n], function(skylark, langx, noder, finder) {\n\n    var head = document.getElementsByTagName('head')[0],\n        scriptsByUrl = {},\n        scriptElementsById = {},\n        count = 0;\n\n    function scripter() {\n        return scripter;\n    }\n\n    langx.mixin(scripter, {\n\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\n            var script = scriptsByUrl[url];\n            if (!script) {\n                script = scriptsByUrl[url] = {\n                    state: 0, //0:unload,1:loaded,-1:loaderror\n                    loadedCallbacks: [],\n                    errorCallbacks: []\n                }\n            }\n\n            script.loadedCallbacks.push(loadedCallback);\n            script.errorCallbacks.push(errorCallback);\n\n            if (script.state === 1) {\n                script.node.onload();\n            } else if (script.state === -1) {\n                script.node.onerror();\n            } else {\n                var node = script.node = document.createElement(\"script\"),\n                    id = script.id = (count++);\n\n                node.type = \"text/javascript\";\n                node.async = false;\n                node.defer = false;\n                startTime = new Date().getTime();\n                head.appendChild(node);\n\n                node.onload = function() {\n                        script.state = 1;\n\n                        var callbacks = script.loadedCallbacks,\n                            i = callbacks.length;\n\n                        while (i--) {\n                            callbacks[i]();\n                        }\n                        script.loadedCallbacks = [];\n                        script.errorCallbacks = [];\n                    },\n                    node.onerror = function() {\n                        script.state = -1;\n                        var callbacks = script.errorCallbacks,\n                            i = callbacks.length;\n\n                        while (i--) {\n                            callbacks[i]();\n                        }\n                        script.loadedCallbacks = [];\n                        script.errorCallbacks = [];\n                    };\n                node.src = url;\n\n                scriptElementsById[id] = node;\n            }\n            return script.id;\n        },\n\n        deleteJavaScript: function(id) {\n            var node = scriptElementsById[id];\n            if (node) {\n                var url = node.src;\n                noder.remove(node);\n                delete scriptElementsById[id];\n                delete scriptsByUrl[url];\n            }\n        }\n    });\n\n    return skylark.scripter = scripter;\n});\n\ndefine('skylark-utils/_storages/cookies',[\n    \"../langx\"\n], function(langx) {\n    function cookies() {\n        return cookies;\n    }\n\n    langx.mixin(cookies, {\n\t\tget : function(name) {\n\t\t    if (!sKey || !this.has(name)) { return null; }\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\n\n\t\t},\n\n\t\thas : function(name) {\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\n\t\t},\n\n\n\t\tlist : function() {\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\n\t\t    for (var i = 0; i < cookies.length; i++) { \n\t\t    \tcookies[i] = unescape(cookies[i]); \n\t\t    }\n\t\t    return cookies;\n\t\t},\n\n\t\tremove : function(name,path) {\n\t\t    if (!name || !this.has(name)) { \n\t\t    \treturn; \n\t\t   \t}\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\n\t\t},\n\n\t\tset: function (name, value, expires, path, domain, secure) {\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\n\t\t    var sExpires = \"\";\n\t\t    if (expires) {\n\t\t      switch (expires.constructor) {\n\t\t        case Number:\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\n\t\t          break;\n\t\t        case String:\n\t\t          sExpires = \"; expires=\" + expires;\n\t\t          break;\n\t\t        case Date:\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\n\t\t          break;\n\t\t      }\n\t\t    }\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\n\t\t  }\t\n    });\n\n\n    return  cookies;\n\n});\n\n\n/**\n *\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\n * http://www.psteam.co.jp/qface/license\n * \n * @Author: liwenfeng\n * @Date: 2014/02/28\n */\ndefine('skylark-utils/_storages/localfs',[\n    \"../langx\"\n], function(langx){\n\tvar Deferred = langx.Deferred,\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\n\n\n\tfunction errorHandler(e) {\n\t  var msg = '';\n\n\t  switch (e.code) {\n\t    case FileError.QUOTA_EXCEEDED_ERR:\n\t      msg = 'QUOTA_EXCEEDED_ERR';\n\t      break;\n\t    case FileError.NOT_FOUND_ERR:\n\t      msg = 'NOT_FOUND_ERR';\n\t      break;\n\t    case FileError.SECURITY_ERR:\n\t      msg = 'SECURITY_ERR';\n\t      break;\n\t    case FileError.INVALID_MODIFICATION_ERR:\n\t      msg = 'INVALID_MODIFICATION_ERR';\n\t      break;\n\t    case FileError.INVALID_STATE_ERR:\n\t      msg = 'INVALID_STATE_ERR';\n\t      break;\n\t    default:\n\t      msg = 'Unknown Error';\n\t      break;\n\t  };\n\n\t  return msg;\n\t}\n\t\n\tvar FileSystem = langx.Evented.inherit({\n\t\t_fs : null,\n\t\t_isPersisted : true,\n\t\t_cwd : null,\n\n\t\tinit:\tfunction (fs) {\n\t\t\tthis._fs = fs;\n\t\t\tthis._cwd = fs.root;\n\t\t},\n\t\t\t\n\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.file(function (file) {\n\t\t        var reader = new FileReader();\n\t\t        reader.onloadend = function () {\n\t\t          callback(null, this.result);\n\t\t        };\n\t\t        reader.readAsArrayBuffer(file);\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\treadfileAsDataURL :  function (path,callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.file(function (file) {\n\t\t        var reader = new FileReader();\n\t\t        reader.onloadend = function () {\n\t\t          callback(null, this.result);\n\t\t        };\n\t\t        reader.readAsDataURL(file);\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\treadfileAsText :  function (path,callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.file(function (file) {\n\t\t        var reader = new FileReader();\n\t\t        reader.onloadend = function () {\n\t\t          callback(null, this.result);\n\t\t        };\n\t\t        reader.readAsText(file);\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\twritefile : function (path, contents, callback,errback) {\n\t\t    var self = this,\n\t\t    \tfolders = path.split('/');\n\t\t    folders = folders.slice(0, folders.length - 1);\n\n\t\t    this.mkdir(folders.join('/'),function(){\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\n\t\t\t        var truncated = false;\n\t\t\t        fileWriter.onwriteend = function () {\n\t\t\t          if (!truncated) {\n\t\t\t            truncated = true;\n\t\t\t            this.truncate(this.position);\n\t\t\t            return;\n\t\t\t          }\n\t\t\t          callback && callback();\n\t\t\t        };\n\t\t\t        fileWriter.onerror = errback;\n\t\t\t        // TODO: find a way to write as binary too\n\t\t\t        var blob = contents;\n\t\t\t        if (!blob instanceof Blob) {\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\n\t\t\t        } \n\t\t\t        fileWriter.write(blob);\n\t\t\t      }, errback);\n\t\t\t    }, errback);\n\n\t\t    });\n\t\t},\n\n\t\trmfile : function (path, callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.remove(function () {\n\t\t        callback();\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\treaddir : function (path, callback,errback) {\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\n\t\t      var dirReader = dirEntry.createReader();\n\t\t      var entries = [];\n\t\t      readEntries();\n\t\t      function readEntries() {\n\t\t        dirReader.readEntries(function (results) {\n\t\t          if (!results.length) {\n\t\t            callback(null, entries);\n\t\t          }\n\t\t          else {\n\t\t            entries = entries.concat(\n\t\t            \tArray.prototype.slice.call(results).map(\n\t\t            \t\tfunction (entry) {\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\n\t\t            \t\t}\n\t\t            \t)\n\t\t            );\n\t\t            readEntries();\n\t\t          }\n\t\t        }, errback);\n\t\t      }\n\t\t    }, errback);\n\t\t},\n\n\t\tmkdir : function (path, callback,errback) {\n\t\t    var folderParts = path.split('/');\n\n\t\t    var createDir = function(rootDir, folders) {\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\n\t\t      if (folders[0] == '.' || folders[0] == '') {\n\t\t        folders = folders.slice(1);\n\t\t      }\n\n\t\t      if (folders.length ==0) {\n\t\t      \tcallback(rootDir);\n\t\t      \treturn;\n\t\t      }\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\n\t\t        function (dirEntry) {\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\n\t\t            // Recursively add the new subfolder if we have more to create and\n\t\t            // There was more than one folder to create.\n\t\t            if (folders.length && folderParts.length != 1) {\n\t\t              createDir(dirEntry, folders.slice(1));\n\t\t            } else {\n\t\t              // Return the last directory that was created.\n\t\t              if (callback) callback(dirEntry);\n\t\t            }\n\t\t          } else {\n\t\t            var e = new Error(path + ' is not a directory');\n\t\t            if (errback) {\n\t\t              errback(e);\n\t\t            } else {\n\t\t              throw e;\n\t\t            }\n\t\t          }\n\t\t        },\n\t\t        function(e) {\n\t\t            if (errback) {\n\t\t              errback(e);\n\t\t            } else {\n\t\t              throw e;\n\t\t            }\n\t\t        }\n\t\t      );\n\t\t    };\n\n\t\t    createDir(this._cwd, folderParts);\n\n\t\t},\n\n\t\trmdir : function (path, callback,errback) {\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\n\t\t      dirEntry.removeRecursively(function () {\n\t\t        callback();\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t  },\n\n\t\tcopy : function (src, dest, callback) {\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\n\t\t        fileEntry.copyTo(dirEntry, function () {\n\t\t          callback();\n\t\t        }, callback);\n\t\t      }, callback);\n\t\t    }, callback);\n\t\t},\n\n\t\tmove : function(src, dest, callback) {\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\n\t\t        fileEntry.moveTo(dirEntry, function () {\n\t\t          callback();\n\t\t        }, callback);\n\t\t      }, callback);\n\t\t    }, callback);\n\t\t},\n\n\t\tchdir : function (path, callback) {\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\n\t\t      cwd = dirEntry;\n\t\t      if (fs.onchdir) {\n\t\t        fs.onchdir(cwd.fullPath);\n\t\t      }\n\t\t      callback();\n\t\t    }, callback);\n\t\t},\n\n\t\timportFromHost : function(files) {\n\t\t    // Duplicate each file the user selected to the app's fs.\n\t\t    var deferred = new Deferred();\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\n\t\t        (function(f) {\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\n\t\t\t          }, errorHandler);\n\t\t\t        }, errorHandler);\n\t\t     \t})(file);\n \t   \t \t}\n  \t\t    return deferred.promise;\n\t\t  },\n\n\t\t  exportToHost : function() {\n\n\t\t  }\n\t\n\t});\n\t\n\n\n    function localfs() {\n        return localfs;\n    }\n\n    langx.mixin(localfs, {\n        isSupported : function() {\n            return !!requestFileSystem;\n        },\n        request : function(size,isPersisted){\n        \tsize = size || 1024 * 1024 * 10;\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\n        \t\td = new Deferred();\n            requestFileSystem(typ, size, function(_fs) {\n                var fs = new FileSystem(_fs,!!isPersisted);\n                d.resolve(fs);\n            }, function(e) {\n            \td.reject(e);\n            });\n\n            return d.promise;\n        },\n\n        FileSystem : FileSystem\n    });\n    \n\treturn localfs;\n});\ndefine('skylark-utils/_storages/localStorage',[\n    \"../langx\"\n], function(langx) {\n    var storage  = null;\n\n    try {\n        storage = window[\"localStorage\"];\n    } catch (e){\n\n    }\n\n    function localStorage() {\n        return localStorage;\n    }\n\n    langx.mixin(localStorage, {\n        isSupported : function() {\n            return !!storage;\n        },\n\n        set : function(key, val) {\n            if (val === undefined) { \n                return this.remove(key) \n            }\n            storage.setItem(key, langx.serializeValue(val));\n            return val\n        },\n\n        get : function(key, defaultVal) {\n            var val = langx.deserializeValue(storage.getItem(key))\n            return (val === undefined ? defaultVal : val)\n        },\n\n        remove : function(key) { \n            storage.removeItem(key) \n        },\n\n        clear : function() { \n            storage.clear() \n        },\n\n        forEach : function(callback) {\n            for (var i=0; i<storage.length; i++) {\n                var key = storage.key(i)\n                callback(key, store.get(key))\n            }\n        }\n    });\n\n    return  localStorage;\n\n});\n\n\ndefine('skylark-utils/_storages/sessionStorage',[\n    \"../langx\"\n], function(langx) {\n    var storage  = null;\n\n    try {\n        storage = window[\"sessiionStorage\"];\n    } catch (e){\n\n    }\n\n    function sessiionStorage() {\n        return sessiionStorage;\n    }\n\n    langx.mixin(sessiionStorage, {\n        isSupported : function() {\n            return !!storage;\n        },\n\n        set : function(key, val) {\n            if (val === undefined) { \n                return this.remove(key) \n            }\n            storage.setItem(key, langx.serializeValue(val));\n            return val\n        },\n\n        get : function(key, defaultVal) {\n            var val = langx.deserializeValue(storage.getItem(key))\n            return (val === undefined ? defaultVal : val)\n        },\n\n        remove : function(key) { \n            storage.removeItem(key) \n        },\n\n        clear : function() { \n            storage.clear() \n        },\n\n        forEach : function(callback) {\n            for (var i=0; i<storage.length; i++) {\n                var key = storage.key(i)\n                callback(key, store.get(key))\n            }\n        }\n    });\n\n    return  sessiionStorage;\n\n});\n\n\ndefine('skylark-utils/storages',[\n    \"./skylark\",\n    \"./langx\",\n    \"./_storages/cookies\",\n    \"./_storages/localfs\",\n    \"./_storages/localStorage\",\n    \"./_storages/sessionStorage\"\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\n    function storages() {\n        return storages;\n    }\n\n    langx.mixin(storages, {\n        cookies: cookies,\n        localfs : localfs,\n        localStorage : localStorage,\n        sessionStorage : sessionStorage\n    });\n\n\n    return skylark.storages = storages;\n});\n\ndefine('skylark-utils/touchx',[], function() {\n\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\n\n    /**\n     * Object used to hold the data that is being dragged during drag and drop operations.\n     *\n     * It may hold one or more data items of different types. For more information about\n     * drag and drop operations and data transfer objects, see\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\n     *\n     * This object is created automatically by the @see:DragDropTouch singleton and is\n     * accessible through the @see:dataTransfer property of all drag events.\n     */\n    var DataTransfer = (function() {\n        function DataTransfer() {\n            this._dropEffect = 'move';\n            this._effectAllowed = 'all';\n            this._data = {};\n        }\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\n            /**\n             * Gets or sets the type of drag-and-drop operation currently selected.\n             * The value must be 'none',  'copy',  'link', or 'move'.\n             */\n            get: function() {\n                return this._dropEffect;\n            },\n            set: function(value) {\n                this._dropEffect = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\n            /**\n             * Gets or sets the types of operations that are possible.\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\n             */\n            get: function() {\n                return this._effectAllowed;\n            },\n            set: function(value) {\n                this._effectAllowed = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\n            /**\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\n             */\n            get: function() {\n                return Object.keys(this._data);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Removes the data associated with a given type.\n         *\n         * The type argument is optional. If the type is empty or not specified, the data\n         * associated with all types is removed. If data for the specified type does not exist,\n         * or the data transfer contains no data, this method will have no effect.\n         *\n         * @param type Type of data to remove.\n         */\n        DataTransfer.prototype.clearData = function(type) {\n            if (type != null) {\n                delete this._data[type];\n            } else {\n                this._data = null;\n            }\n        };\n        /**\n         * Retrieves the data for a given type, or an empty string if data for that type does\n         * not exist or the data transfer contains no data.\n         *\n         * @param type Type of data to retrieve.\n         */\n        DataTransfer.prototype.getData = function(type) {\n            return this._data[type] || '';\n        };\n        /**\n         * Set the data for a given type.\n         *\n         * For a list of recommended drag types, please see\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\n         *\n         * @param type Type of data to add.\n         * @param value Data to add.\n         */\n        DataTransfer.prototype.setData = function(type, value) {\n            this._data[type] = value;\n        };\n        /**\n         * Set the image to be used for dragging if a custom one is desired.\n         *\n         * @param img An image element to use as the drag feedback image.\n         * @param offsetX The horizontal offset within the image.\n         * @param offsetY The vertical offset within the image.\n         */\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\n            var ddt = DragDropTouch._instance;\n            ddt._imgCustom = img;\n            ddt._imgOffset = { x: offsetX, y: offsetY };\n        };\n        return DataTransfer;\n    }());\n\n    /**\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\n     *\n     * The @see:DragDropTouch class listens to touch events and raises the\n     * appropriate HTML5 drag/drop events as if the events had been caused\n     * by mouse actions.\n     *\n     * The purpose of this class is to enable using existing, standard HTML5\n     * drag/drop code on mobile devices running IOS or Android.\n     *\n     * To use, include the DragDropTouch.js file on the page. The class will\n     * automatically start monitoring touch events and will raise the HTML5\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\n     * should be handled by the application.\n     *\n     * For details and examples on HTML drag and drop, see\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\n     */\n    var DragDropTouch = (function() {\n        /**\n         * Initializes the single instance of the @see:DragDropTouch class.\n         */\n        function DragDropTouch() {\n            this._lastClick = 0;\n            // enforce singleton pattern\n            if (DragDropTouch._instance) {\n                throw 'DragDropTouch instance already created.';\n            }\n            // detect passive event support\n            // https://github.com/Modernizr/Modernizr/issues/1894\n            var supportsPassive = false;\n            document.addEventListener('test', null, {\n                get passive() {\n                    supportsPassive = true;\n                    return true;\n                }\n            });\n            // listen to touch events\n            if ('ontouchstart' in document) {\n                var d = document,\n                    ts = this._touchstart.bind(this),\n                    tm = this._touchmove.bind(this),\n                    te = this._touchend.bind(this),\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\n                d.addEventListener('touchstart', ts, opt);\n                d.addEventListener('touchmove', tm, opt);\n                d.addEventListener('touchend', te);\n                d.addEventListener('touchcancel', te);\n            }\n        }\n        /**\n         * Gets a reference to the @see:DragDropTouch singleton.\n         */\n        DragDropTouch.getInstance = function() {\n            return DragDropTouch._instance;\n        };\n        // ** event handlers\n        DragDropTouch.prototype._touchstart = function(e) {\n            var _this = this;\n            if (this._shouldHandle(e)) {\n                // raise double-click and prevent zooming\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\n                        e.preventDefault();\n                        this._reset();\n                        return;\n                    }\n                }\n                // clear all variables\n                this._reset();\n                // get nearest draggable element\n                var src = this._closestDraggable(e.target);\n                if (src) {\n                    // give caller a chance to handle the hover/move events\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\n                        // get ready to start dragging\n                        this._dragSource = src;\n                        this._ptDown = this._getPoint(e);\n                        this._lastTouch = e;\n                        e.preventDefault();\n                        // show context menu if the user hasn't started dragging after a while\n                        setTimeout(function() {\n                            if (_this._dragSource == src && _this._img == null) {\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\n                                    _this._reset();\n                                }\n                            }\n                        }, DragDropTouch._CTXMENU);\n                    }\n                }\n            }\n        };\n        DragDropTouch.prototype._touchmove = function(e) {\n            if (this._shouldHandle(e)) {\n                // see if target wants to handle move\n                var target = this._getTarget(e);\n                if (this._dispatchEvent(e, 'mousemove', target)) {\n                    this._lastTouch = e;\n                    e.preventDefault();\n                    return;\n                }\n                // start dragging\n                if (this._dragSource && !this._img) {\n                    var delta = this._getDelta(e);\n                    if (delta > DragDropTouch._THRESHOLD) {\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\n                        this._createImage(e);\n                        this._dispatchEvent(e, 'dragenter', target);\n                    }\n                }\n                // continue dragging\n                if (this._img) {\n                    this._lastTouch = e;\n                    e.preventDefault(); // prevent scrolling\n                    if (target != this._lastTarget) {\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\n                        this._dispatchEvent(e, 'dragenter', target);\n                        this._lastTarget = target;\n                    }\n                    this._moveImage(e);\n                    this._dispatchEvent(e, 'dragover', target);\n                }\n            }\n        };\n        DragDropTouch.prototype._touchend = function(e) {\n            if (this._shouldHandle(e)) {\n                // see if target wants to handle up\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\n                    e.preventDefault();\n                    return;\n                }\n                // user clicked the element but didn't drag, so clear the source and simulate a click\n                if (!this._img) {\n                    this._dragSource = null;\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\n                    this._lastClick = Date.now();\n                }\n                // finish dragging\n                this._destroyImage();\n                if (this._dragSource) {\n                    if (e.type.indexOf('cancel') < 0) {\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\n                    }\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\n                    this._reset();\n                }\n            }\n        };\n        // ** utilities\n        // ignore events that have been handled or that involve more than one touch\n        DragDropTouch.prototype._shouldHandle = function(e) {\n            return e &&\n                !e.defaultPrevented &&\n                e.touches && e.touches.length < 2;\n        };\n        // clear all members\n        DragDropTouch.prototype._reset = function() {\n            this._destroyImage();\n            this._dragSource = null;\n            this._lastTouch = null;\n            this._lastTarget = null;\n            this._ptDown = null;\n            this._dataTransfer = new DataTransfer();\n        };\n        // get point for a touch event\n        DragDropTouch.prototype._getPoint = function(e, page) {\n            if (e && e.touches) {\n                e = e.touches[0];\n            }\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\n        };\n        // get distance between the current touch event and the first one\n        DragDropTouch.prototype._getDelta = function(e) {\n            var p = this._getPoint(e);\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\n        };\n        // get the element at a given touch event\n        DragDropTouch.prototype._getTarget = function(e) {\n            var pt = this._getPoint(e),\n                el = document.elementFromPoint(pt.x, pt.y);\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\n                el = el.parentElement;\n            }\n            return el;\n        };\n        // create drag image from source element\n        DragDropTouch.prototype._createImage = function(e) {\n            // just in case...\n            if (this._img) {\n                this._destroyImage();\n            }\n            // create drag image from custom element or drag source\n            var src = this._imgCustom || this._dragSource;\n            this._img = src.cloneNode(true);\n            this._copyStyle(src, this._img);\n            this._img.style.top = this._img.style.left = '-9999px';\n            // if creating from drag source, apply offset and opacity\n            if (!this._imgCustom) {\n                var rc = src.getBoundingClientRect(),\n                    pt = this._getPoint(e);\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\n            }\n            // add image to document\n            this._moveImage(e);\n            document.body.appendChild(this._img);\n        };\n        // dispose of drag image element\n        DragDropTouch.prototype._destroyImage = function() {\n            if (this._img && this._img.parentElement) {\n                this._img.parentElement.removeChild(this._img);\n            }\n            this._img = null;\n            this._imgCustom = null;\n        };\n        // move the drag image element\n        DragDropTouch.prototype._moveImage = function(e) {\n            var _this = this;\n            if (this._img) {\n                requestAnimationFrame(function() {\n                    var pt = _this._getPoint(e, true),\n                        s = _this._img.style;\n                    s.position = 'absolute';\n                    s.pointerEvents = 'none';\n                    s.zIndex = '999999';\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\n                });\n            }\n        };\n        // copy properties from an object to another\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\n            for (var i = 0; i < props.length; i++) {\n                var p = props[i];\n                dst[p] = src[p];\n            }\n        };\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\n            // remove potentially troublesome attributes\n            DragDropTouch._rmvAtts.forEach(function(att) {\n                dst.removeAttribute(att);\n            });\n            // copy canvas content\n            if (src instanceof HTMLCanvasElement) {\n                var cSrc = src,\n                    cDst = dst;\n                cDst.width = cSrc.width;\n                cDst.height = cSrc.height;\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\n            }\n            // copy style (without transitions)\n            var cs = getComputedStyle(src);\n            for (var i = 0; i < cs.length; i++) {\n                var key = cs[i];\n                if (key.indexOf('transition') < 0) {\n                    dst.style[key] = cs[key];\n                }\n            }\n            dst.style.pointerEvents = 'none';\n            // and repeat for all children\n            for (var i = 0; i < src.children.length; i++) {\n                this._copyStyle(src.children[i], dst.children[i]);\n            }\n        };\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\n            if (e && target) {\n                var evt = document.createEvent('Event'),\n                    t = e.touches ? e.touches[0] : e;\n                evt.initEvent(type, true, true);\n                evt.button = 0;\n                evt.which = evt.buttons = 1;\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\n                this._copyProps(evt, t, DragDropTouch._ptProps);\n                evt.dataTransfer = this._dataTransfer;\n                target.dispatchEvent(evt);\n                return evt.defaultPrevented;\n            }\n            return false;\n        };\n        // gets an element's closest draggable ancestor\n        DragDropTouch.prototype._closestDraggable = function(e) {\n            for (; e; e = e.parentElement) {\n                if (e.hasAttribute('draggable') && e.draggable) {\n                    return e;\n                }\n            }\n            return null;\n        };\n        return DragDropTouch;\n    }());\n\n    /*private*/\n    DragDropTouch._instance = new DragDropTouch(); // singleton\n    // constants\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\n    // copy styles/attributes from drag source to drag image element\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\n    // synthesize and dispatch an event\n    // returns true if the event has been handled (e.preventDefault == true)\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\n\n    return DragDropTouch;\n});\n\ndefine('skylark-utils/velm',[\n    \"./skylark\",\n    \"./langx\",\n    \"./datax\",\n    \"./dnd\",\n    \"./eventer\",\n    \"./filer\",\n    \"./finder\",\n    \"./fx\",\n    \"./geom\",\n    \"./mover\",\n    \"./noder\",\n    \"./styler\"\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\n    var map = Array.prototype.map,\n        slice = Array.prototype.slice;\n\n    var VisualElement = langx.klass({\n        klassName: \"VisualElement\",\n\n        \"init\": function(node) {\n            if (langx.isString(node)) {\n                node = document.getElementById(node);\n            }\n            this.domNode = node;\n        }\n    });\n\n    var root = new VisualElement(document.body),\n        velm = function(node) {\n            if (node) {\n                return new VisualElement(node);\n            } else {\n                return root;\n            }\n        };\n\n    function _delegator(fn, context) {\n        return function() {\n            var self = this,\n                elem = self.domNode,\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\n\n            if (ret) {\n                if (ret === context) {\n                    return self;\n                } else {\n                    if (ret instanceof HTMLElement) {\n                        ret = new VisualElement(ret);\n                    } else if (langx.isArrayLike(ret)) {\n                        ret = map.call(ret, function(el) {\n                            if (el instanceof HTMLElement) {\n                                return new VisualElement(ret);\n                            } else {\n                                return el;\n                            }\n                        })\n                    }\n                }\n            }\n            return ret;\n        };\n    }\n\n    langx.mixin(velm, {\n        batch: function(nodes, action, args) {\n            nodes.forEach(function(node) {\n                var elm = (node instanceof VisualElement) ? node : velm(node);\n                elm[action].apply(elm, args);\n            });\n\n            return this;\n        },\n\n        root: new VisualElement(document.body),\n\n        VisualElement: VisualElement,\n\n        partial : function(name,fn) {\n            var props = {};\n\n            props[name] = fn;\n\n            VisualElement.partial(props);\n        },\n\n        delegate: function(names, context) {\n            var props = {};\n\n            names.forEach(function(name) {\n                props[name] = _delegator(context[name], context);\n            });\n\n            VisualElement.partial(props);\n        }\n    });\n\n    // from ./datax\n    velm.delegate([\n        \"attr\",\n        \"data\",\n        \"prop\",\n        \"removeAttr\",\n        \"removeData\",\n        \"text\",\n        \"val\"\n    ], datax);\n\n    // from ./dnd\n    velm.delegate([\n        \"draggable\",\n        \"droppable\"\n    ], dnd);\n\n\n    // from ./eventer\n    velm.delegate([\n        \"off\",\n        \"on\",\n        \"one\",\n        \"shortcuts\",\n        \"trigger\"\n    ], eventer);\n\n    // from ./filer\n    velm.delegate([\n        \"picker\",\n        \"dropzone\"\n    ], filer);\n\n    // from ./finder\n    velm.delegate([\n        \"ancestor\",\n        \"ancestors\",\n        \"children\",\n        \"descendant\",\n        \"find\",\n        \"findAll\",\n        \"firstChild\",\n        \"lastChild\",\n        \"matches\",\n        \"nextSibling\",\n        \"nextSiblings\",\n        \"parent\",\n        \"previousSibling\",\n        \"previousSiblings\",\n        \"siblings\"\n    ], finder);\n\n    velm.find = function(selector) {\n        if (selector === \"body\") {\n            return this.root;\n        } else {\n            return this.root.descendant(selector);\n        }\n    };\n\n    // from ./fx\n    velm.delegate([\n        \"animate\",\n        \"fadeIn\",\n        \"fadeOut\",\n        \"fadeTo\",\n        \"fadeToggle\",\n        \"hide\",\n        \"scrollToTop\",\n        \"show\",\n        \"toggle\"\n    ], fx);\n\n\n    // from ./geom\n    velm.delegate([\n        \"borderExtents\",\n        \"boundingPosition\",\n        \"boundingRect\",\n        \"clientHeight\",\n        \"clientSize\",\n        \"clientWidth\",\n        \"contentRect\",\n        \"height\",\n        \"marginExtents\",\n        \"offsetParent\",\n        \"paddingExtents\",\n        \"pagePosition\",\n        \"pageRect\",\n        \"relativePosition\",\n        \"relativeRect\",\n        \"scrollIntoView\",\n        \"scrollLeft\",\n        \"scrollTop\",\n        \"size\",\n        \"width\"\n    ], geom);\n\n    // from ./mover\n    velm.delegate([\n        \"movable\"\n    ], dnd);\n\n\n    // from ./noder\n    velm.delegate([\n        \"after\",\n        \"append\",\n        \"before\",\n        \"clone\",\n        \"contains\",\n        \"contents\",\n        \"empty\",\n        \"html\",\n        \"isChildOf\",\n        \"ownerDoc\",\n        \"prepend\",\n        \"remove\",\n        \"replace\",\n        \"reverse\",\n        \"throb\",\n        \"traverse\",\n        \"wrapper\",\n        \"wrapperInner\",\n        \"unwrap\"\n    ], noder);\n\n    // from ./styler\n    velm.delegate([\n        \"addClass\",\n        \"className\",\n        \"css\",\n        \"hasClass\",\n        \"hide\",\n        \"isInvisible\",\n        \"removeClass\",\n        \"show\",\n        \"toggleClass\"\n    ], styler);\n    return skylark.velm = velm;\n});\n\ndefine('skylark-utils/main',[\n    \"./skylark\",\n    \"./browser\",\n    \"./css\",\n    \"./datax\",\n    \"./dnd\",\n    \"./devices\",\n    \"./eventer\",\n    \"./filer\",\n    \"./finder\",\n    \"./fx\",\n    \"./geom\",\n    \"./http\",\n    \"./mover\",\n    \"./noder\",\n    \"./query\",\n    \"./scripter\",\n    \"./storages\",\n    \"./styler\",\n    \"./touchx\",\n    \"./langx\",\n    \"./velm\"\n], function(skylark) {\n    return skylark;\n})\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}