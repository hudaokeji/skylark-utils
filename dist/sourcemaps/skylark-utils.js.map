{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","parent","setAttribute","append","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","type","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","createStyleSheet","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","href","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","button","checked","idx","disabled","enabled","eq","even","focus","activeElement","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","delete","create","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","handleElm","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","eventName","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","items","webkitGetAsEntry","getAsEntry","webentry","then","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","headers","contentRange","FormData","blob","uploadName","encodeURI","contentType","getUploadedBytes","jqXHR","range","getResponseHeader","upperBytesPos","BitrateTimer","timestamp","now","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","context","currentLoaded","_progress","chunkSize","ajax","done","textStatus","progress","lengthComputable","total","resolveWith","fail","errorThrown","rejectWith","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","toString","form","serializeArray","fileupload","process","processData","Blob","webkitSlice","mozSlice","Xhr","request","_bitrateTimer","jqXhr","entry","path","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","charAt","exec","wrapper_node_operation","argType","arg","object","el","get","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","images","elementNodeTypes","1","9","11","ImagesLoaded","onAlways","elements","makeArray","getImages","bind","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","Background","onProgress","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","method","unbindEvents","imagesLoaded","inst","models","methodMap","patch","read","sync","entity","defaults","emulateHTTP","emulateJSON","dataType","urlError","attrs","toJSON","_method","beforeSend","xhr","setRequestHeader","Entity","Stateful","isMatch","fetch","success","resp","serverAttrs","set","wrapError","save","validate","wait","_validate","isNew","destroy","stopListening","collection","idAttribute","encodeURIComponent","Collection","entities","comparator","_reset","silent","setOptions","addOptions","array","at","min","tail","partial","initialize","singular","removed","_removeEntitys","changes","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","hasChanged","cid","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","unshift","_byId","entityId","where","findWhere","sortBy","callbackOpts","constructor","validationError","_onEntityEvent","prevId","previousAttributes","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","l","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","keys","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","defaultOptions","touchActionNone","direction","border","grabber","startSize","currentSize","isHtmlNode","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","script","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","cookies","sKey","unescape","cookie","escape","list","expires","domain","secure","sExpires","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","results","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","deferred","f","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","widget","delegateEventSplitter","Widget","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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,GAGAtU,EAAAunC,UACA,SACA,YACA7hB,GAGA1lB,EAAAunC,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAx+B,GAEA/I,EAAAoB,KAAA,SAAA7D,GACA,MAAA,SAAAA,EACAvK,KAAAqN,KAEArN,KAAAqN,KAAAa,WAAA3D,IAKAyC,EAAAunC,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACA9f,GAIAznB,EAAAunC,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAn3B,GAGApQ,EAAAunC,UACA,WACA9sB,GAIAza,EAAAunC,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAnsC,GAGA4E,EAAAunC,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAz0C,GAEA1D,EAAA4Q,KAAAA,IAGA9R,EAAA,wBACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,SAAAkB,EAAAC,EAAA+L,EAAAtI,EAAAsd,EAAAkE,EAAArT,GAIA,QAAAumC,KACA,MAAAA,GAHA,GAAAC,GAAA,iBAMAC,EAAAr4C,EAAAsrB,QAAAC,SACArC,KAAA,SAAAuT,EAAAnT,GACAtpB,EAAAysC,WAAAhQ,KACAnT,EAAAmT,EACAA,EAAA,MAEAA,IACA94B,KAAA84B,GAAAA,GAEAnT,GACAtpB,EAAA8B,MAAA6B,KAAA2lB,GAEA3lB,KAAAmiC,MACAniC,KAAAmiC,IAAA9lC,EAAAs4C,SAAA,MAEA30C,KAAA40C,kBAIArlC,QAAA,MAIApD,EAAA,SAAA5B,GACA,MAAAvK,MAAA60C,IAAAzmC,KAAA7D,IAMAuqC,OAAA,WACA,MAAA90C,OAKA0G,OAAA,WAGA,MAFA1G,MAAA+0C,iBACA/0C,KAAAg1C,aACAh1C,MAMA+0C,eAAA,WACA/0C,KAAA60C,IAAAnuC,UAKAuuC,WAAA,SAAA91C,GAIA,MAHAa,MAAAk1C,mBACAl1C,KAAAm1C,YAAAh2C,GACAa,KAAAo1C,iBACAp1C,MAQAm1C,YAAA,SAAArc,GACA94B,KAAA60C,IAAAL,EAAAroC,EAAA2sB,GACA94B,KAAA84B,GAAA94B,KAAA60C,IAAA,IAgBAO,eAAA,SAAA52B,GAEA,GADAA,IAAAA,EAAAniB,EAAAiqB,OAAAtmB,KAAA,YACAwe,EAAA,MAAAxe,KACAA,MAAAk1C,kBACA,KAAA,GAAAj0C,KAAAud,GAAA,CACA,GAAAuf,GAAAvf,EAAAvd,EAEA,IADA5E,EAAAqiB,WAAAqf,KAAAA,EAAA/9B,KAAA+9B,IACAA,EAAA,CACA,GAAAjgC,GAAAmD,EAAAnD,MAAA22C,EACAz0C,MAAAu0C,SAAAz2C,EAAA,GAAAA,EAAA,GAAAzB,EAAA+hB,MAAA2f,EAAA/9B,QAEA,MAAAA,OAMAu0C,SAAA,SAAAjrB,EAAA/e,EAAA0c,GAEA,MADAjnB,MAAA60C,IAAA/1B,GAAAwK,EAAA,kBAAAtpB,KAAAuhB,IAAAhX,EAAA0c,GACAjnB,MAMAk1C,iBAAA,WAEA,MADAl1C,MAAA60C,KAAA70C,KAAA60C,IAAAt2B,IAAA,kBAAAve,KAAAuhB,KACAvhB,MAKAq1C,WAAA,SAAA/rB,EAAA/e,EAAA0c,GAEA,MADAjnB,MAAA60C,IAAAt2B,IAAA+K,EAAA,kBAAAtpB,KAAAuhB,IAAAhX,EAAA0c,GACAjnB,MAKAs1C,eAAA,SAAA/lC,EAAAuvB,GACA,MAAA12B,GAAA9K,cAAAiS,EAAAuvB,IAOA8V,eAAA,WACA,GAAA50C,KAAA84B,GAOA94B,KAAAi1C,WAAA54C,EAAAiqB,OAAAtmB,KAAA,WAPA,CACA,GAAA8+B,GAAAziC,EAAA8B,SAAA9B,EAAAiqB,OAAAtmB,KAAA,cACAA,MAAAvE,KAAAqjC,EAAArjC,GAAAY,EAAAiqB,OAAAtmB,KAAA,OACAA,KAAArB,YAAAmgC,EAAA,SAAAziC,EAAAiqB,OAAAtmB,KAAA,cACAA,KAAAi1C,WAAAj1C,KAAAs1C,eAAAj5C,EAAAiqB,OAAAtmB,KAAA,WAAA8+B,IACA9+B,KAAAu1C,eAAAzW,KAQAyW,eAAA,SAAAvkC,GACAhR,KAAA60C,IAAApxC,KAAAuN,IAKAwe,KAAA,SAAAjM,EAAAmM,GAOA,MANAnM,GAAAvjB,KAAAmxB,UAAAnxB,KAAAmxB,SAAA5N,IAAAA,EAAA6N,WACA1B,GACArzB,EAAAkH,KAAAmsB,EAAA,SAAAzuB,EAAA1C,GACAglB,EAAAA,EAAAliB,QAAA,IAAAJ,EAAA,IAAA1C,KAGAglB,IAaA,OAPAlnB,GAAA8B,MAAAq2C,GACAroC,EAAA8B,EAEAymC,OAAAA,IAIAt4C,EAAAo4C,OAAAA,IAGAt5C,EAAA,sBACA,YACA,YACA,QACA,UACA,QACA,YACA,YACA,UACA,WACA,OACA,SACA,WACA,WACA,UACA,UACA,UACA,YACA,aACA,aACA,aACA,WACA,WACA,UACA,SACA,YACA,SAAAkB,GACA,MAAAA,KAGAlB,EAAA,iBAAA,sBAAA,SAAAs6C,GAAA,MAAAA,MA8EEx1C","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    var Uploader =  langx.Evented.inherit({\r\n        init :function(options) {\r\n        }\r\n    });\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(skylark,langx,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n   $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n   };\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n        // Translation function, gets the message key to be translated\r\n        // and an object with context specific data as arguments:\r\n        i18n: function (message, context) {\r\n            message = (this.messages && this.messages[message]) || message.toString();\r\n            if (context) {\r\n                langx.each(context, function (key, value) {\r\n                    message = message.replace('{' + key + '}', value);\r\n                });\r\n            }\r\n            return message;\r\n        },\r\n\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}