{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","parent","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","type","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","createStyleSheet","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","href","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","normalizeRule","support","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","matches","ancestors","ret","byId","getElementById","closest","descendants","querySelectorAll","matchError","local","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","checked","idx","disabled","enabled","eq","focus","activeElement","tabindex","has","sel","hidden","selected","visible","offsetWidth","divide","cond","nativeSelector","customPseudos","Operator","JSON","stringify","part","undefine","toUpperCase","getAttribute","pseudo","hasAttribute","simpleExpCounter","currentExpression","item","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","concat","finder","setAttribute","removeAttribute","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","removeData","pluck","propMap","removeAttr","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","obj","pageXOffset","pageYOffset","pageRect","round","offset","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","getEl","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","proxy","originalEvent","ignoreProperties","off","events","$this","isPlainObject","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","e","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","some","isImmediatePropagationStopped","currentTarget","liveFired","result","l","related","relatedTarget","console","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","listener","delete","create","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","handleElm","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","eventName","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","src","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","selectFile","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","Blob","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","xhr","settings","deferred","context","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","protocol","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","open","username","password","timeout","send","get","parseArguments","post","getJSON","http","beforeSend","global","XMLHttpRequest","script","json","xml","gtJSON","movable","updateWithTouchData","keys","changedTouches","downButton","startX","startY","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","t","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","uniq","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","charAt","exec","wrapper_node_operation","argType","arg","object","el","toArray","not","is","excludes","collection","parents","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","cookies","sKey","unescape","cookie","escape","list","path","set","expires","domain","secure","sExpires","constructor","Number","vEnd","Infinity","String","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","results","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","img","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","toString","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","partial","main"],"mappings":"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","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        }\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (cls.match(re)) {\r\n                cls = cls.replace(re, \" \");\r\n            }\r\n        });\r\n\r\n        className(elm, cls.trim());\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent) {\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        checked: function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        contains: function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        eq: function(elm, idx, nodes, value) {\r\n            return (idx === value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        first: function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        has: function(elm, idx, nodes, sel) {\r\n            return local.querySelector(elm, sel).length > 0;\r\n        },\r\n\r\n        hidden: function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        last: function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        parent: function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        selected: function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        visible: function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].Operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].Operator + JSON.stringify(attributes[i].value) + +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefine) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n        if (tag = cond.tag) {\r\n            var nodeName = node.nodeName.toUpperCase();\r\n            if (tag == '*') {\r\n                if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n            } else {\r\n                if (nodeName != tag.toUpperCase()) return false;\r\n            }\r\n        }\r\n\r\n        if (id = cond.id) {\r\n            if (node.getAttribute('id') != id) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        var i, part, cls, pseudo;\r\n\r\n        if (classes = cond.classes) {\r\n            for (i = classes.length; i--;) {\r\n                cls = node.getAttribute('class');\r\n                if (!(cls && classes[i].regexp.test(cls))) return false;\r\n            }\r\n        }\r\n\r\n        if (attributes)\r\n            for (i = attributes.length; i--;) {\r\n                part = attributes[i];\r\n                if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n            }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if (!pseudo(node, idx, nodes, part.value)) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    if (!nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed = local.Slick.parse(selector);\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (node == root) {\r\n                break;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector) {\r\n        var ret = [];\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                ret.push(node);\r\n            }\r\n            if (node == ret) {\r\n                break;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(selector) {\r\n        return descendant(document.body, selector);\r\n    }\r\n\r\n    function findAll(selector) {\r\n        return descendants(document.body, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector)\r\n        } else {\r\n            return local.check(elm, selector);\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n        \r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var elm = this.getEl(),\r\n            parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: false,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            binding = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        bindings.some(function(binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return true;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns) {\r\n                                return false;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                            return false;\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event);\r\n\r\n                event = parsed.type;\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger,\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, callback) {\r\n        animate(elm, { opacity: opacity }, speed, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, callback) {\r\n\r\n        fadeTo(elm, speed, 0, function() {\r\n            styler.hide(elm);\r\n            if (callback) {\r\n                callback.call(elm);\r\n            }\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, callback);\r\n        } else {\r\n            fadeOut(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n\ndefine('skylark-utils/http',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n],function(skylark, langx){\r\n    var Deferred = langx.Deferred,\r\n        blankRE = /^\\s*$/,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\r\n\r\n\r\n    function empty() {}\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest();\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: 'application/json',\r\n            xml: 'application/xml, text/xml',\r\n            html: 'text/html',\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) {\r\n            mime = mime.split(';', 2)[0];\r\n        }\r\n        return mime && (mime == 'text/html' ? 'html' :\r\n            mime == 'application/json' ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text';\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') {\r\n            return url;\r\n        }\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\r\n    }\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value);\r\n            if (scope) {\r\n                key = traditional ? scope :\r\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\r\n            }\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) {\r\n                params.add(value.name, value.value);\r\n            // recurse into nested objects\r\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\r\n                serialize(params, value, traditional, key);\r\n            } else {\r\n                params.add(key, value);\r\n            }\r\n        })\r\n    }    \r\n\r\n    function param(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) {\r\n                value = value();\r\n            }\r\n            if (value == null) {\r\n                value = \"\";\r\n            }\r\n            this.push(escape(key) + '=' + escape(value));\r\n        }\r\n        \r\n        serialize(params, obj, traditional);\r\n\r\n        return params.join('&').replace(/%20/g, '+')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && !langx.isString(options.data)) {\r\n            options.data = $.param(options.data, options.traditional)\r\n        }\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n            options.url = appendQuery(options.url, options.data);\r\n            options.data = undefined;\r\n        }\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        //ajaxStop(settings)\r\n    }    \r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options),\r\n            deferred = new Deferred();\r\n\r\n        langx.safeMixin(settings,ajaxSettings);\r\n\r\n        //ajaxStart(settings)\r\n        if (!settings.crossDomain) {\r\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\r\n        }\r\n\r\n        serializeData(settings);\r\n        var dataType = settings.dataType;\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout;\r\n\r\n        //if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) {\r\n            setHeader('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n        }\r\n\r\n        if (settings.headers) {\r\n            for (name in settings.headers) {\r\n                setHeader(name, settings.headers[name]);\r\n            }    \r\n        }\r\n        xhr.setRequestHeader = setHeader;\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script') {\r\n                            (1, eval)(result);\r\n                        } else if (dataType == 'xml') {\r\n                            result = xhr.responseXML\r\n                        } else if (dataType == 'json') {\r\n                            result = blankRE.test(result) ? null : JSON.parse(result);\r\n                        }\r\n                    } catch (e) { \r\n                        error = e \r\n                    }\r\n\r\n                    if (error) {\r\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\r\n                    } else {\r\n                        ajaxSuccess(result, xhr, settings, deferred);\r\n                    }\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n        */\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) {\r\n            nativeSetHeader.apply(xhr, headers[name]);\r\n        }\r\n\r\n        if (settings.timeout > 0) {\r\n            abortTimeout = setTimeout(function() {\r\n                xhr.onreadystatechange = empty;\r\n                xhr.abort();\r\n                ajaxError(null, 'timeout', xhr, settings, deferred);\r\n            }, settings.timeout);\r\n        }\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr;\r\n    }\r\n\r\n\r\n    function get( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    function post( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.type = 'POST';\r\n        return ajax(options);\r\n    }\r\n\r\n    function getJSON( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.dataType = 'json';\r\n        return ajax(options);\r\n    }    \r\n\r\n\r\n    function http(){\r\n      return http;\r\n    }\r\n\r\n    langx.mixin(http, {\r\n        ajax: ajax,\r\n\r\n        get: get,\r\n        \r\n        gtJSON: getJSON,\r\n\r\n        post: post\r\n\r\n    });\r\n\r\n    return skylark.http = http;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.concat($(selector, context))))\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./http\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}