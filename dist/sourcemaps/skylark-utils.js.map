{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","dom","slice","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fulledEl","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","_createStyleSheet","external","options","type","count","media","create","rel","async","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","selector","index","insertSheetRule","addRules","rules","insertRuleFunc","isPlainObject","toString","isAtRule","str","startsWith","json","strAttr","depth","SPACE","repeat","adjust","parentName","strAt","values","strNode","n","adjusted","toJSON","result","convertCode","code","r","indexOf","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","disabled","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","space","tab","up","keys","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","dragHandle","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","e1","over","dropped","manager","eventName","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","items","webkitGetAsEntry","getAsEntry","webentry","then","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","headers","contentRange","FormData","blob","uploadName","encodeURI","contentType","getUploadedBytes","jqXHR","range","getResponseHeader","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","context","currentLoaded","_progress","chunkSize","ajax","done","textStatus","progress","lengthComputable","total","resolveWith","fail","errorThrown","rejectWith","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","processData","Blob","webkitSlice","mozSlice","Xhr","request","url","_bitrateTimer","jqXhr","entry","path","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","evt","onerror","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","makeArray","unshift","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","charAt","exec","wrapper_node_operation","argType","arg","object","get","toArray","is","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","img","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","loadedCallback","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","patch","read","sync","method","entity","defaults","emulateHTTP","emulateJSON","dataType","urlError","attrs","_method","beforeSend","xhr","setRequestHeader","Entity","Stateful","isMatch","fetch","success","resp","serverAttrs","set","wrapError","save","validate","wait","_validate","isNew","destroy","stopListening","collection","idAttribute","encodeURIComponent","Collection","entities","comparator","_reset","silent","setOptions","merge","addOptions","array","at","min","tail","partial","initialize","singular","removed","_removeEntitys","changes","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","hasChanged","cid","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","constructor","validationError","_onEntityEvent","prevId","previousAttributes","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","callbacks","deleteJavaScript","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","Number","vEnd","Infinity","String","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","results","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","deferred","f","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","t","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","widgets","defineWidgetClass","delegateEventSplitter","Widget","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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M,EAAAskC,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACA15B,GAGA5K,EAAAskC,UACA,YACA,aACA9oB,GAIAxb,EAAAskC,UACA,MACA,KACA,MACA,YACA,WACA3vB,GAGA3U,EAAAskC,UACA,SACA,YACA1d,GAGA5mB,EAAAskC,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAr7B,GAEAjJ,EAAAqB,KAAA,SAAAvD,GACA,MAAA,SAAAA,EACAjL,KAAAwN,KAEAxN,KAAAwN,KAAAc,WAAArD,IAKAkC,EAAAskC,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACA1b,GAIA5oB,EAAAskC,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA7zB,GAGAzQ,EAAAskC,UACA,YACA,aACA9oB,GAIAxb,EAAAskC,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACA/oC,GAGAyE,EAAAskC,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACA3xC,GAEAnE,EAAAwR,KAAAA,IAGA1S,EAAA,yBACA,YACA,UACA,UACA,UACA,WACA,SACA,YACA,UACA,UACA,SAAAkB,EAAAC,EAAA8M,EAAAqP,EAAAjY,EAAA8d,EAAAkE,EAAAzT,EAAAlB,GAgFA,QAAAukC,KACA,MAAAA,GAuKA,QAAAC,GAAA71C,EAAA9B,EAAA2H,IAtPA,GAAAiwC,GAAA,iBAkFAC,GAjFAnwC,MAAAC,UAAAwC,MAiFAvI,EAAAitB,QAAAC,SACA/C,KAAA,SAAAxgB,EAAAoE,GAEA,GAAA/N,EAAAwgC,WAAAzyB,GAAA,CACA,GACAA,GAAApE,CACAA,GAAAoE,EAEA/N,EAAAwgC,WAAA72B,GACAvF,KAAAuF,GAAAA,EAEAvF,KAAAuF,GAAA,KAEAoE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","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return fulledEl;\r\n        }\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen : fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isPlainObject(rules)) {\r\n            css = toString(rules);\r\n        } else {\r\n            css = rules;\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var strAttr = function (name, value, depth) {\r\n            return css.SPACE.repeat(depth) + name.trim() + ': ' + value.trim() + \";\\n\";\r\n        };\r\n\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strAt = function(name,values,depth) {\r\n            var str = \"\";\r\n            if (langx.isString(values)) {\r\n                str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values + \" \\\";\";\r\n            } else if (langx.isPlainObject(values)) {\r\n                str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                str += strNode(\"\",values,depth+1);\r\n                str += css.SPACE.repeat(depth) + \"}\\n\";\r\n\r\n            } else {\r\n                throw new Error(\"Invalid param!\");\r\n            }\r\n            return str;\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\";\r\n            if (name) {\r\n                str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                for (var n in values) {\r\n                    var value =values[n];\r\n                    if (langx.isString(value)) {\r\n                        // css property\r\n                        str += strAttr(n,value,depth+1)\r\n                    }\r\n                }\r\n\r\n                str += css.SPACE.repeat(depth) + \"}\\n\";\r\n            }\r\n\r\n            for (var n in values) {\r\n                var value =values[n];\r\n                if (langx.isPlainObject(value)) {\r\n                    var adjusted = adjust(name,n,depth);\r\n                    str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                } \r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        var str = \"\";\r\n        for (var n in json) {\r\n            if (isAtRule(n)) {\r\n                str += strAt(n,json[n],0);\r\n            } else {\r\n                str += strNode(n,json[n],0);\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    function toJSON(str) {      \r\n        var result = {};\r\n        var convertCode = function(code){\r\n            var r = {};\r\n            code = code.split(';')\r\n            for(var i in code){\r\n                if(code[i].indexOf(':') !== -1){\r\n                    var parts = code[i].split(':');\r\n                    r[parts[0].trim()] = parts[1].trim();\r\n                }\r\n            }\r\n            return r;\r\n        };\r\n        var rules = str.split('}');\r\n        for(var i = 0; i< rules.length; i++){\r\n            var parts = rules[i].split('{');\r\n            if(parts[0].trim() !== \"\"){\r\n                result[parts[0].trim()] = convertCode(parts[1]);\r\n            }\r\n        }\r\n        return result;   \r\n    }\r\n   \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toJSON : toJSON,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        marginSize : marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.dragSource,\r\n             dragHandle : draggable.dragHandle\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.dragSource);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          dragHandle : draggable.dragHandle,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n        \r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        var e1 = eventer.create(\"dndStarted\",{\r\n          elm : e.elm,\r\n          dragSource : e.dragSource,\r\n          dragHandle : e.dragHandle,\r\n          ghost : e.ghost,\r\n          transfer : e.transfer\r\n        });\r\n\r\n        this.trigger(e1);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"dndEnded\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self.params = langx.clone(params);\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            var params = self.params;\r\n            if (params.handle) {\r\n              self.dragHandle = finder.closest(e.target,params.handle);\r\n              if (!self.dragHandle) {\r\n                return;\r\n              }\r\n            }\r\n            if (params.source) {\r\n                self.dragSource = finder.closest(e.target,params.source);\r\n            } else {\r\n                self.dragSource = self.elm;\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.attr(self.dragSource, \"draggable\", 'true');\r\n            } \r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              //datax.attr(self.dragSource, \"draggable\", 'false');\r\n              self.dragSource = null;\r\n              self.dragHandle = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.attr(self.dragSource, \"draggable\", 'false');\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"dndStarted\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"dndEnded\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector);\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !langx.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}