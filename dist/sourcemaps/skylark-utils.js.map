{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","parent","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","type","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","createStyleSheet","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","href","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","normalizeRule","support","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","matches","ancestors","ret","byId","getElementById","closest","descendants","querySelectorAll","matchError","local","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","checked","idx","disabled","enabled","eq","focus","activeElement","tabindex","has","sel","hidden","selected","visible","offsetWidth","divide","cond","nativeSelector","customPseudos","Operator","JSON","stringify","part","undefine","toUpperCase","getAttribute","pseudo","hasAttribute","simpleExpCounter","currentExpression","item","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","concat","finder","setAttribute","removeAttribute","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","removeData","pluck","propMap","removeAttr","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","obj","pageXOffset","pageYOffset","pageRect","round","offset","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","getEl","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","proxy","originalEvent","ignoreProperties","off","events","$this","isPlainObject","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","e","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","some","isImmediatePropagationStopped","currentTarget","liveFired","result","l","related","relatedTarget","console","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","listener","delete","create","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","manager","draggingClass","allowed","_params","eventName","handle","hoverClass","activeClass","acceptable","e2","dropEffect","selectFile","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","fileInput","input","onchange","files","Deferred","filer","dropzone","droppedCallback","dropped","enterdCount","types","picker","pickedCallback","picked","readFile","file","d","reader","FileReader","evt","resolve","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","promise","writeFile","dataUri","msSaveBlob","blob","dataURItoBlob","a","CustomEvent","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","animationDelay","fast","slow","movable","updateWithTouchData","keys","changedTouches","downButton","startX","startY","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","t","minX","maxX","minY","maxY","mover","wrapper_map","func","context","elem","uniq","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","flatten","charAt","exec","wrapper_node_operation","argType","arg","object","el","get","toArray","not","is","excludes","collection","parents","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","script","src","deleteJavaScript","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","set","enumerable","configurable","clearData","getData","img","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","toString","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","partial","main"],"mappings":"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ACAiB,GAAAg5B,GAAA38B,MAAA2D,EAAA7D,KAGAgE,MAGAyM,KAAA,GAAAksB,GAAAt7B,SAAAiC,MAEAq5B,cAAAA,EAEAG,SAAA,SAAA14B,EAAA4uB,GACA,GAAAnuB,KAEAT,GAAAnE,QAAA,SAAAO,GACAqE,EAAArE,GAAAg8B,EAAAxJ,EAAAxyB,GAAAwyB,KAGA2J,EAAAI,QAAAl4B,MAKA0L,EAAAusB,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAzjB,GAGA9I,EAAAusB,UACA,YACA,aACA1T,GAIA7Y,EAAAusB,UACA,MACA,KACA,MACA,YACA,WACA7Z,GAGA1S,EAAAusB,UACA,SACA,YACA/Q,GAGAxb,EAAAusB,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAllB,GAEArH,EAAAgB,KAAA,SAAA1D,GACA,MAAA,SAAAA,EACA7J,KAAAyM,KAEAzM,KAAAyM,KAAAY,WAAAxD,IAKA0C,EAAAusB,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAjO,GAIAte,EAAAusB,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAhe,GAGAvO,EAAAusB,UACA,WACA1T,GAIA7Y,EAAAusB,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACApxB,GAGA6E,EAAAusB,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAh5B,GACAzD,EAAAkQ,KAAAA,IAGArR,EAAA,sBACA,YACA,YACA,QACA,UACA,QACA,YACA,UACA,WACA,OACA,SACA,UACA,UACA,UACA,aACA,WACA,WACA,UACA,UACA,SAAAmB,GACA,MAAAA,KAGAnB,EAAA,iBAAA,sBAAA,SAAA89B,GAAA,MAAAA,MA8EEh5B","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        }\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (cls.match(re)) {\r\n                cls = cls.replace(re, \" \");\r\n            }\r\n        });\r\n\r\n        className(elm, cls.trim());\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        } \r\n       \r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n        \r\n        dom.forEach(function(node){\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent) {\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm,params) {\r\n        var overlayDiv = createElement(\"div\",params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = overlay(elm, {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        } \r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder , {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        checked: function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        contains: function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        eq: function(elm, idx, nodes, value) {\r\n            return (idx === value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        first: function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        has: function(elm, idx, nodes, sel) {\r\n            return local.querySelector(elm, sel).length > 0;\r\n        },\r\n\r\n        hidden: function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        last: function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        parent: function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        selected: function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        visible: function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].Operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].Operator + JSON.stringify(attributes[i].value) + +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefine) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n        if (tag = cond.tag) {\r\n            var nodeName = node.nodeName.toUpperCase();\r\n            if (tag == '*') {\r\n                if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n            } else {\r\n                if (nodeName != tag) return false;\r\n            }\r\n        }\r\n\r\n        if (id = cond.id) {\r\n            if (node.getAttribute('id') != id) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        var i, part, cls, pseudo;\r\n\r\n        if (classes = cond.classes) {\r\n            for (i = classes.length; i--;) {\r\n                cls = node.getAttribute('class');\r\n                if (!(cls && classes[i].regexp.test(cls))) return false;\r\n            }\r\n        }\r\n\r\n        if (attributes)\r\n            for (i = attributes.length; i--;) {\r\n                part = attributes[i];\r\n                if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n            }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if (!pseudo(node, idx, nodes, part.value)) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    if (!nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed = local.Slick.parse(selector);\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (node == root) {\r\n                break;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector) {\r\n        var ret = [];\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                ret.push(node);\r\n            }\r\n            if (node == ret) {\r\n                break;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(selector) {\r\n        return descendant(document.body, selector);\r\n    }\r\n\r\n    function findAll(selector) {\r\n        return descendants(document.body, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector)\r\n        } else {\r\n            return local.check(elm, selector);\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n        \r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var elm = this.getEl(),\r\n            parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: false,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            binding = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        bindings.some(function(binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return true;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns) {\r\n                                return false;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                            return false;\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event);\r\n\r\n                event = parsed.type;\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger,\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          ghost : null,\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n        this.dragging = draggable;\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      end : function() {\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            allowed = false;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (allowed === true) {\r\n              datax.prop(self.elm, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            datax.prop(self.elm, \"draggable\", false);\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            manager.start(self, e);\r\n            styler.addClass(self.elm,draggingClass);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            styler.removeClass(self.elm,draggingClass);\r\n\r\n            manager.end();\r\n          }\r\n        });\r\n\r\n        if (params.handle) {\r\n          eventer.on(elm,{\r\n            \"mouseenter\" : function(e) {\r\n              allowed = true;\r\n            },\r\n            \"mouseleave\" : function(e) {\r\n              allowed = false;\r\n            }\r\n          },params.handle);\r\n        } else {\r\n          allowed = true;\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"ended\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            self.trigger(e2);\r\n\r\n            e.preventDefault() // allow drop\r\n\r\n            e.dataTransfer.dropEffect = \"copyMove\";\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end()\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(dataUri,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n             　　var blob = dataURItoBlob(dataUri);\r\n               window.navigator.msSaveBlob(blob, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                a.href = dataUri;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, callback) {\r\n        animate(elm, { opacity: opacity }, speed, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, callback) {\r\n\r\n        fadeTo(elm, speed, 0, function() {\r\n            styler.hide(elm);\r\n            if (callback) {\r\n                callback.call(elm);\r\n            }\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, callback);\r\n        } else {\r\n            fadeOut(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.concat($(selector, context))))\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}